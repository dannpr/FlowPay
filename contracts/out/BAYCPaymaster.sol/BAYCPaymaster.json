{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20Metadata",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        },
        {
          "internalType": "contract IOracle",
          "name": "_tokenOracle",
          "type": "address"
        },
        {
          "internalType": "contract IOracle",
          "name": "_nativeAssetOracle",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NoBAYCFound",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "priceMarkup",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "updateThreshold",
          "type": "uint32"
        }
      ],
      "name": "ConfigUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "actualTokenNeeded",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "UserOperationSponsored",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "REFUND_POSTOP_COST",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nativeAssetOracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "previousPrice",
      "outputs": [
        {
          "internalType": "uint192",
          "name": "",
          "type": "uint192"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceDenominator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceMarkup",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceUpdateThreshold",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenOracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_priceMarkup",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_updateThreshold",
          "type": "uint32"
        }
      ],
      "name": "updateConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updatePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maxCost",
          "type": "uint256"
        }
      ],
      "name": "validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "validationData",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101206040523480156200001257600080fd5b5060405162001dec38038062001dec8339810160408190526200003591620003f9565b8383838333836200004682620002b6565b6001600160a01b0390811660805285811660a05283811660e052821661010052600180546001600160c01b031665030d4000864760c51b1790556200008b8162000306565b846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f0919062000461565b620000fd90600a620005a2565b60c08181525050826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000143573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000169919062000461565b60ff16600814620001d45760405162461bcd60e51b815260206004820152602a60248201527f50502d4552433230203a20746f6b656e206f7261636c6520646563696d616c73604482015269040daeae6e840c4ca40760b31b60648201526084015b60405180910390fd5b816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000213573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000239919062000461565b60ff16600814620002a75760405162461bcd60e51b815260206004820152603160248201527f50502d4552433230203a206e6174697665206173736574206f7261636c6520646044820152700cac6d2dac2d8e640daeae6e840c4ca407607b1b6064820152608401620001cb565b505050505050505050620005b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200031062000385565b6001600160a01b038116620003775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620001cb565b6200038281620002b6565b50565b6000546001600160a01b03163314620003e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620001cb565b565b6001600160a01b03811681146200038257600080fd5b600080600080608085870312156200041057600080fd5b84516200041d81620003e3565b60208601519094506200043081620003e3565b60408601519093506200044381620003e3565b60608601519092506200045681620003e3565b939692955090935050565b6000602082840312156200047457600080fd5b815160ff811681146200048657600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620004e4578160001904821115620004c857620004c86200048d565b80851615620004d657918102915b93841c9390800290620004a8565b509250929050565b600082620004fd575060016200059c565b816200050c575060006200059c565b8160018114620005255760028114620005305762000550565b60019150506200059c565b60ff8411156200054457620005446200048d565b50506001821b6200059c565b5060208310610133831016604e8410600b841016171562000575575081810a6200059c565b620005818383620004a3565b80600019048211156200059857620005986200048d565b0290505b92915050565b60006200048660ff841683620004ec565b60805160a05160c05160e05161010051611784620006686000396000818161041a0152818161078a0152610e300152600081816102700152818161075d0152610e030152600081816101d5015281816107b60152610e6f01526000818161049c0152818161082a01528181610f78015261125b01526000818161037d015281816104e001528181610577015281816108780152818161090c0152818161098301528181610a100152610d7e01526117846000f3fe60806040526004361061014b5760003560e01c80639e281a98116100b6578063cdcf4b9b1161006f578063cdcf4b9b146103e9578063d0e30db014610400578063efb1ad5d14610408578063f2fde38b1461043c578063f465c77e1461045c578063fc0c546a1461048a57600080fd5b80639e281a981461032b578063a9a234091461034b578063b0d691fe1461036b578063bb9fe6bf1461039f578063c23a5cea146103b4578063c399ec88146103d457600080fd5b8063673a7e2811610108578063673a7e28146102495780636c5ec25c1461025e578063715018a6146102aa5780638da5cb5b146102bf578063914e245a146102dd5780639dbdb9771461031557600080fd5b80630396cb6014610150578063205c2878146101655780633a34c83f146101855780633b97e856146101c35780633c2154bc146102055780633e04619d14610225575b600080fd5b61016361015e366004611354565b6104be565b005b34801561017157600080fd5b5061016361018036600461138b565b610549565b34801561019157600080fd5b506001546101a990600160e01b900463ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b3480156101cf57600080fd5b506101f77f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016101ba565b34801561021157600080fd5b506101636102203660046113b7565b6105bb565b34801561023157600080fd5b506001546101a990600160c01b900463ffffffff1681565b34801561025557600080fd5b50610163610756565b34801561026a57600080fd5b506102927f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101ba565b3480156102b657600080fd5b50610163610809565b3480156102cb57600080fd5b506000546001600160a01b0316610292565b3480156102e957600080fd5b506001546102fd906001600160c01b031681565b6040516001600160c01b0390911681526020016101ba565b34801561032157600080fd5b506101f7619c4081565b34801561033757600080fd5b5061016361034636600461138b565b61081d565b34801561035757600080fd5b506101636103663660046113ea565b610854565b34801561037757600080fd5b506102927f000000000000000000000000000000000000000000000000000000000000000081565b3480156103ab57600080fd5b5061016361086e565b3480156103c057600080fd5b506101636103cf366004611479565b6108e5565b3480156103e057600080fd5b506101f761096b565b3480156103f557600080fd5b506101f7620f424081565b6101636109fb565b34801561041457600080fd5b506102927f000000000000000000000000000000000000000000000000000000000000000081565b34801561044857600080fd5b50610163610457366004611479565b610a5d565b34801561046857600080fd5b5061047c610477366004611496565b610ad6565b6040516101ba9291906114ea565b34801561049657600080fd5b506102927f000000000000000000000000000000000000000000000000000000000000000081565b6104c6610af9565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b15801561052d57600080fd5b505af1158015610541573d6000803e3d6000fd5b505050505050565b610551610af9565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b15801561052d57600080fd5b6105c3610af9565b62124f808263ffffffff1611156106215760405162461bcd60e51b815260206004820181905260248201527f50502d4552433230203a207072696365206d61726b757020746f6f206869676860448201526064015b60405180910390fd5b620f42408263ffffffff16101561067a5760405162461bcd60e51b815260206004820181905260248201527f50502d4552433230203a207072696365206d61726b65757020746f6f206c6f776044820152606401610618565b620f42408163ffffffff1611156106df5760405162461bcd60e51b8152602060048201526024808201527f50502d4552433230203a20757064617465207468726573686f6c6420746f6f206044820152630d0d2ced60e31b6064820152608401610618565b600180546001600160c01b0316600160c01b63ffffffff8581169182026001600160e01b031692909217600160e01b928516928302179092556040805192835260208301919091527ffed7660357162e9e060534e05beba94ac6e3bfb17b1f793bd7350aaed0e9e8c4910160405180910390a15050565b60006107817f0000000000000000000000000000000000000000000000000000000000000000610b53565b905060006107ae7f0000000000000000000000000000000000000000000000000000000000000000610b53565b9050816107db7f000000000000000000000000000000000000000000000000000000000000000083611555565b6107e5919061159d565b600180546001600160c01b0319166001600160c01b03929092169190911790555050565b610811610af9565b61081b6000610cdd565b565b610825610af9565b6108507f00000000000000000000000000000000000000000000000000000000000000008383610d2d565b5050565b61085c610d73565b61086884848484610de3565b50505050565b610876610af9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108d157600080fd5b505af1158015610868573d6000803e3d6000fd5b6108ed610af9565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b15801561095057600080fd5b505af1158015610964573d6000803e3d6000fd5b5050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156109d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f691906115d1565b905090565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b15801561095057600080fd5b610a65610af9565b6001600160a01b038116610aca5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610618565b610ad381610cdd565b50565b60606000610ae2610d73565b610aed858585611038565b91509150935093915050565b6000546001600160a01b0316331461081b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610618565b6000806000806000856001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610b99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbd9190611604565b94509450509350935060008313610c165760405162461bcd60e51b815260206004820152601f60248201527f50502d4552433230203a20436861696e6c696e6b207072696365203c3d2030006044820152606401610618565b610c236202a30042611654565b821015610c725760405162461bcd60e51b815260206004820152601b60248201527f50502d4552433230203a20496e636f6d706c65746520726f756e6400000000006044820152606401610618565b8369ffffffffffffffffffff168169ffffffffffffffffffff161015610cd35760405162461bcd60e51b815260206004820152601660248201527550502d4552433230203a205374616c6520707269636560501b6044820152606401610618565b5090949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816014528060345263a9059cbb60601b60005260206000604460106000875af13d156001600051141716610d69576390b8ec1860005260206000fd5b6000603452505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461081b5760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606401610618565b6002846002811115610df757610df761166d565b14610868576000610e277f0000000000000000000000000000000000000000000000000000000000000000610b53565b90506000610e547f0000000000000000000000000000000000000000000000000000000000000000610b53565b6001549091506001600160c01b0390811690600090848116907f000000000000000000000000000000000000000000000000000000000000000085021681610e9e57610e9e611587565b6001549190049150600160e01b900463ffffffff16620f42408082019084906001600160c01b0385160281610ed557610ed5611587565b041180610f03575080620f42400383620f4240846001600160c01b03160281610f0057610f00611587565b04105b15610f2957600180546001600160c01b0319166001600160c01b03841690811790915592505b60015460009069d3c21bcecceda100000090600160c01b900463ffffffff163a619c4002890102850204905080610f64602060008b8d611683565b610f6d916116ad565b1115610fd557610fd57f0000000000000000000000000000000000000000000000000000000000000000610fa5603460208c8e611683565b610fae916116cb565b60601c838c8c600090602092610fc693929190611683565b610fcf916116ad565b03610d2d565b610fe3603460208a8c611683565b610fec916116cb565b60408051838152602081018a905260609290921c917f472a42a044527b87df02c0ce8e6c00c0057fac40d6c424c93c24b02322eb14b5910160405180910390a250505050505050505050565b6040516370a0823160e01b815233600482015260609060009073bc4ca0eda7647a8ab7c2061c2e118a18a936f13d906370a0823190602401602060405180830381865afa15801561108d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b191906115d1565b6000036110d157604051631617e42760e11b815260040160405180910390fd5b610aed856000856001546060906000906001600160c01b03168082036111395760405162461bcd60e51b815260206004820152601860248201527f50502d4552433230203a207072696365206e6f742073657400000000000000006044820152606401610618565b6000601461114b610120890189611700565b9050039050806021600160f81b03166000146111a95760405162461bcd60e51b815260206004820152601e60248201527f50502d4552433230203a20696e76616c69642064617461206c656e67746800006044820152606401610618565b60015460009069d3c21bcecceda100000090600160c01b900463ffffffff1660e08a0135619c4002880102840204905081602003611256576111ef610120890189611700565b6111fe91603491601491611683565b611207916116ad565b8111156112565760405162461bcd60e51b815260206004820181905260248201527f50502d4552433230203a20746f6b656e20616d6f756e7420746f6f20686967686044820152606401610618565b61128e7f000000000000000000000000000000000000000000000000000000000000000061128760208b018b611479565b30846112e7565b8061129c60208a018a611479565b6040516020016112c892919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f1981840301815291905298600098509650505050505050565b60405181606052826040528360601b602c526323b872dd60601b600c52602060006064601c6000895af13d15600160005114171661132d57637939f42460005260206000fd5b600060605260405250505050565b803563ffffffff8116811461134f57600080fd5b919050565b60006020828403121561136657600080fd5b61136f8261133b565b9392505050565b6001600160a01b0381168114610ad357600080fd5b6000806040838503121561139e57600080fd5b82356113a981611376565b946020939093013593505050565b600080604083850312156113ca57600080fd5b6113d38361133b565b91506113e16020840161133b565b90509250929050565b6000806000806060858703121561140057600080fd5b84356003811061140f57600080fd5b9350602085013567ffffffffffffffff8082111561142c57600080fd5b818701915087601f83011261144057600080fd5b81358181111561144f57600080fd5b88602082850101111561146157600080fd5b95986020929092019750949560400135945092505050565b60006020828403121561148b57600080fd5b813561136f81611376565b6000806000606084860312156114ab57600080fd5b833567ffffffffffffffff8111156114c257600080fd5b840161016081870312156114d557600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b8181101561151857602081870181015160608684010152016114fb565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160c01b0382811682821681810283169291811582850482141761157e5761157e61153f565b50505092915050565b634e487b7160e01b600052601260045260246000fd5b60006001600160c01b03838116806115c557634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6000602082840312156115e357600080fd5b5051919050565b805169ffffffffffffffffffff8116811461134f57600080fd5b600080600080600060a0868803121561161c57600080fd5b611625866115ea565b9450602086015193506040860151925060608601519150611648608087016115ea565b90509295509295909350565b818103818111156116675761166761153f565b92915050565b634e487b7160e01b600052602160045260246000fd5b6000808585111561169357600080fd5b838611156116a057600080fd5b5050820193919092039150565b8035602083101561166757600019602084900360031b1b1692915050565b6bffffffffffffffffffffffff1981358181169160148510156116f85780818660140360031b1b83161692505b505092915050565b6000808335601e1984360301811261171757600080fd5b83018035915067ffffffffffffffff82111561173257600080fd5b60200191503681900382131561174757600080fd5b925092905056fea26469706673582212208fdcea9969c4e4bcfded608cd964772a79bb0b876a0d6cd38cbd9d97f99adc9064736f6c63430008130033",
    "sourceMap": "305:897:62:-:0;;;396:291;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;581:6;597:11;618:12;640:18;668:10;597:11;936:32:36;668:10:62;936:18:36;:32::i;:::-;-1:-1:-1;;;;;564:24:0;;;;;2608:14:64;;::::1;;::::0;2632:26;;::::1;;::::0;2695:38;::::1;;::::0;2795:11:::1;:19:::0;;-1:-1:-1;;;;;2844:27:64;-1:-1:-1;;;2844:27:64;;;2901:25:::1;2919:6:::0;2901:17:::1;:25::i;:::-;2958:6;-1:-1:-1::0;;;;;2958:15:64::1;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2952:23;::::0;:2:::1;:23;:::i;:::-;2936:39;;;;::::0;::::1;2993:12;-1:-1:-1::0;;;;;2993:21:64::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;;3020:1;2993:28;2985:83;;;::::0;-1:-1:-1;;;2985:83:64;;2960:2:67;2985:83:64::1;::::0;::::1;2942:21:67::0;2999:2;2979:18;;;2972:30;3038:34;3018:18;;;3011:62;-1:-1:-1;;;3089:18:67;;;3082:40;3139:19;;2985:83:64::1;;;;;;;;;3086:18;-1:-1:-1::0;;;;;3086:27:64::1;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;3119:1;3086:34;3078:96;;;::::0;-1:-1:-1;;;3078:96:64;;3371:2:67;3078:96:64::1;::::0;::::1;3353:21:67::0;3410:2;3390:18;;;3383:30;3449:34;3429:18;;;3422:62;-1:-1:-1;;;3500:18:67;;;3493:47;3557:19;;3078:96:64::1;3169:413:67::0;3078:96:64::1;2399:782:::0;;;;;396:291:62;;;;305:897;;2426:187:36;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:36;;;-1:-1:-1;;;;;;2534:17:36;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;2074:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:36;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:36;;3789:2:67;2154:73:36::1;::::0;::::1;3771:21:67::0;3828:2;3808:18;;;3801:30;3867:34;3847:18;;;3840:62;-1:-1:-1;;;3918:18:67;;;3911:36;3964:19;;2154:73:36::1;3587:402:67::0;2154:73:36::1;2237:28;2256:8:::0;2237:18:::1;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:36;719:10:51;1422:23:36;1414:68;;;;-1:-1:-1;;;1414:68:36;;4196:2:67;1414:68:36;;;4178:21:67;;;4215:18;;;4208:30;4274:34;4254:18;;;4247:62;4326:18;;1414:68:36;3994:356:67;1414:68:36;1359:130::o;14:147:67:-;-1:-1:-1;;;;;105:31:67;;95:42;;85:70;;151:1;148;141:12;166:794;339:6;347;355;363;416:3;404:9;395:7;391:23;387:33;384:53;;;433:1;430;423:12;384:53;465:9;459:16;484:47;525:5;484:47;:::i;:::-;600:2;585:18;;579:25;550:5;;-1:-1:-1;613:49:67;579:25;613:49;:::i;:::-;733:2;718:18;;712:25;681:7;;-1:-1:-1;746:49:67;712:25;746:49;:::i;:::-;866:2;851:18;;845:25;814:7;;-1:-1:-1;879:49:67;845:25;879:49;:::i;:::-;166:794;;;;-1:-1:-1;166:794:67;;-1:-1:-1;;166:794:67:o;965:273::-;1033:6;1086:2;1074:9;1065:7;1061:23;1057:32;1054:52;;;1102:1;1099;1092:12;1054:52;1134:9;1128:16;1184:4;1177:5;1173:16;1166:5;1163:27;1153:55;;1204:1;1201;1194:12;1153:55;1227:5;965:273;-1:-1:-1;;;965:273:67:o;1243:127::-;1304:10;1299:3;1295:20;1292:1;1285:31;1335:4;1332:1;1325:15;1359:4;1356:1;1349:15;1375:422;1464:1;1507:5;1464:1;1521:270;1542:7;1532:8;1529:21;1521:270;;;1601:4;1597:1;1593:6;1589:17;1583:4;1580:27;1577:53;;;1610:18;;:::i;:::-;1660:7;1650:8;1646:22;1643:55;;;1680:16;;;;1643:55;1759:22;;;;1719:15;;;;1521:270;;;1525:3;1375:422;;;;;:::o;1802:806::-;1851:5;1881:8;1871:80;;-1:-1:-1;1922:1:67;1936:5;;1871:80;1970:4;1960:76;;-1:-1:-1;2007:1:67;2021:5;;1960:76;2052:4;2070:1;2065:59;;;;2138:1;2133:130;;;;2045:218;;2065:59;2095:1;2086:10;;2109:5;;;2133:130;2170:3;2160:8;2157:17;2154:43;;;2177:18;;:::i;:::-;-1:-1:-1;;2233:1:67;2219:16;;2248:5;;2045:218;;2347:2;2337:8;2334:16;2328:3;2322:4;2319:13;2315:36;2309:2;2299:8;2296:16;2291:2;2285:4;2282:12;2278:35;2275:77;2272:159;;;-1:-1:-1;2384:19:67;;;2416:5;;2272:159;2463:34;2488:8;2482:4;2463:34;:::i;:::-;2533:6;2529:1;2525:6;2521:19;2512:7;2509:32;2506:58;;;2544:18;;:::i;:::-;2582:20;;-1:-1:-1;1802:806:67;;;;;:::o;2613:140::-;2671:5;2700:47;2741:4;2731:8;2727:19;2721:4;2700:47;:::i;3994:356::-;305:897:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061014b5760003560e01c80639e281a98116100b6578063cdcf4b9b1161006f578063cdcf4b9b146103e9578063d0e30db014610400578063efb1ad5d14610408578063f2fde38b1461043c578063f465c77e1461045c578063fc0c546a1461048a57600080fd5b80639e281a981461032b578063a9a234091461034b578063b0d691fe1461036b578063bb9fe6bf1461039f578063c23a5cea146103b4578063c399ec88146103d457600080fd5b8063673a7e2811610108578063673a7e28146102495780636c5ec25c1461025e578063715018a6146102aa5780638da5cb5b146102bf578063914e245a146102dd5780639dbdb9771461031557600080fd5b80630396cb6014610150578063205c2878146101655780633a34c83f146101855780633b97e856146101c35780633c2154bc146102055780633e04619d14610225575b600080fd5b61016361015e366004611354565b6104be565b005b34801561017157600080fd5b5061016361018036600461138b565b610549565b34801561019157600080fd5b506001546101a990600160e01b900463ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b3480156101cf57600080fd5b506101f77f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016101ba565b34801561021157600080fd5b506101636102203660046113b7565b6105bb565b34801561023157600080fd5b506001546101a990600160c01b900463ffffffff1681565b34801561025557600080fd5b50610163610756565b34801561026a57600080fd5b506102927f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101ba565b3480156102b657600080fd5b50610163610809565b3480156102cb57600080fd5b506000546001600160a01b0316610292565b3480156102e957600080fd5b506001546102fd906001600160c01b031681565b6040516001600160c01b0390911681526020016101ba565b34801561032157600080fd5b506101f7619c4081565b34801561033757600080fd5b5061016361034636600461138b565b61081d565b34801561035757600080fd5b506101636103663660046113ea565b610854565b34801561037757600080fd5b506102927f000000000000000000000000000000000000000000000000000000000000000081565b3480156103ab57600080fd5b5061016361086e565b3480156103c057600080fd5b506101636103cf366004611479565b6108e5565b3480156103e057600080fd5b506101f761096b565b3480156103f557600080fd5b506101f7620f424081565b6101636109fb565b34801561041457600080fd5b506102927f000000000000000000000000000000000000000000000000000000000000000081565b34801561044857600080fd5b50610163610457366004611479565b610a5d565b34801561046857600080fd5b5061047c610477366004611496565b610ad6565b6040516101ba9291906114ea565b34801561049657600080fd5b506102927f000000000000000000000000000000000000000000000000000000000000000081565b6104c6610af9565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b15801561052d57600080fd5b505af1158015610541573d6000803e3d6000fd5b505050505050565b610551610af9565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b15801561052d57600080fd5b6105c3610af9565b62124f808263ffffffff1611156106215760405162461bcd60e51b815260206004820181905260248201527f50502d4552433230203a207072696365206d61726b757020746f6f206869676860448201526064015b60405180910390fd5b620f42408263ffffffff16101561067a5760405162461bcd60e51b815260206004820181905260248201527f50502d4552433230203a207072696365206d61726b65757020746f6f206c6f776044820152606401610618565b620f42408163ffffffff1611156106df5760405162461bcd60e51b8152602060048201526024808201527f50502d4552433230203a20757064617465207468726573686f6c6420746f6f206044820152630d0d2ced60e31b6064820152608401610618565b600180546001600160c01b0316600160c01b63ffffffff8581169182026001600160e01b031692909217600160e01b928516928302179092556040805192835260208301919091527ffed7660357162e9e060534e05beba94ac6e3bfb17b1f793bd7350aaed0e9e8c4910160405180910390a15050565b60006107817f0000000000000000000000000000000000000000000000000000000000000000610b53565b905060006107ae7f0000000000000000000000000000000000000000000000000000000000000000610b53565b9050816107db7f000000000000000000000000000000000000000000000000000000000000000083611555565b6107e5919061159d565b600180546001600160c01b0319166001600160c01b03929092169190911790555050565b610811610af9565b61081b6000610cdd565b565b610825610af9565b6108507f00000000000000000000000000000000000000000000000000000000000000008383610d2d565b5050565b61085c610d73565b61086884848484610de3565b50505050565b610876610af9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108d157600080fd5b505af1158015610868573d6000803e3d6000fd5b6108ed610af9565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b15801561095057600080fd5b505af1158015610964573d6000803e3d6000fd5b5050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156109d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f691906115d1565b905090565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b15801561095057600080fd5b610a65610af9565b6001600160a01b038116610aca5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610618565b610ad381610cdd565b50565b60606000610ae2610d73565b610aed858585611038565b91509150935093915050565b6000546001600160a01b0316331461081b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610618565b6000806000806000856001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610b99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbd9190611604565b94509450509350935060008313610c165760405162461bcd60e51b815260206004820152601f60248201527f50502d4552433230203a20436861696e6c696e6b207072696365203c3d2030006044820152606401610618565b610c236202a30042611654565b821015610c725760405162461bcd60e51b815260206004820152601b60248201527f50502d4552433230203a20496e636f6d706c65746520726f756e6400000000006044820152606401610618565b8369ffffffffffffffffffff168169ffffffffffffffffffff161015610cd35760405162461bcd60e51b815260206004820152601660248201527550502d4552433230203a205374616c6520707269636560501b6044820152606401610618565b5090949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816014528060345263a9059cbb60601b60005260206000604460106000875af13d156001600051141716610d69576390b8ec1860005260206000fd5b6000603452505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461081b5760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606401610618565b6002846002811115610df757610df761166d565b14610868576000610e277f0000000000000000000000000000000000000000000000000000000000000000610b53565b90506000610e547f0000000000000000000000000000000000000000000000000000000000000000610b53565b6001549091506001600160c01b0390811690600090848116907f000000000000000000000000000000000000000000000000000000000000000085021681610e9e57610e9e611587565b6001549190049150600160e01b900463ffffffff16620f42408082019084906001600160c01b0385160281610ed557610ed5611587565b041180610f03575080620f42400383620f4240846001600160c01b03160281610f0057610f00611587565b04105b15610f2957600180546001600160c01b0319166001600160c01b03841690811790915592505b60015460009069d3c21bcecceda100000090600160c01b900463ffffffff163a619c4002890102850204905080610f64602060008b8d611683565b610f6d916116ad565b1115610fd557610fd57f0000000000000000000000000000000000000000000000000000000000000000610fa5603460208c8e611683565b610fae916116cb565b60601c838c8c600090602092610fc693929190611683565b610fcf916116ad565b03610d2d565b610fe3603460208a8c611683565b610fec916116cb565b60408051838152602081018a905260609290921c917f472a42a044527b87df02c0ce8e6c00c0057fac40d6c424c93c24b02322eb14b5910160405180910390a250505050505050505050565b6040516370a0823160e01b815233600482015260609060009073bc4ca0eda7647a8ab7c2061c2e118a18a936f13d906370a0823190602401602060405180830381865afa15801561108d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b191906115d1565b6000036110d157604051631617e42760e11b815260040160405180910390fd5b610aed856000856001546060906000906001600160c01b03168082036111395760405162461bcd60e51b815260206004820152601860248201527f50502d4552433230203a207072696365206e6f742073657400000000000000006044820152606401610618565b6000601461114b610120890189611700565b9050039050806021600160f81b03166000146111a95760405162461bcd60e51b815260206004820152601e60248201527f50502d4552433230203a20696e76616c69642064617461206c656e67746800006044820152606401610618565b60015460009069d3c21bcecceda100000090600160c01b900463ffffffff1660e08a0135619c4002880102840204905081602003611256576111ef610120890189611700565b6111fe91603491601491611683565b611207916116ad565b8111156112565760405162461bcd60e51b815260206004820181905260248201527f50502d4552433230203a20746f6b656e20616d6f756e7420746f6f20686967686044820152606401610618565b61128e7f000000000000000000000000000000000000000000000000000000000000000061128760208b018b611479565b30846112e7565b8061129c60208a018a611479565b6040516020016112c892919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f1981840301815291905298600098509650505050505050565b60405181606052826040528360601b602c526323b872dd60601b600c52602060006064601c6000895af13d15600160005114171661132d57637939f42460005260206000fd5b600060605260405250505050565b803563ffffffff8116811461134f57600080fd5b919050565b60006020828403121561136657600080fd5b61136f8261133b565b9392505050565b6001600160a01b0381168114610ad357600080fd5b6000806040838503121561139e57600080fd5b82356113a981611376565b946020939093013593505050565b600080604083850312156113ca57600080fd5b6113d38361133b565b91506113e16020840161133b565b90509250929050565b6000806000806060858703121561140057600080fd5b84356003811061140f57600080fd5b9350602085013567ffffffffffffffff8082111561142c57600080fd5b818701915087601f83011261144057600080fd5b81358181111561144f57600080fd5b88602082850101111561146157600080fd5b95986020929092019750949560400135945092505050565b60006020828403121561148b57600080fd5b813561136f81611376565b6000806000606084860312156114ab57600080fd5b833567ffffffffffffffff8111156114c257600080fd5b840161016081870312156114d557600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b8181101561151857602081870181015160608684010152016114fb565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160c01b0382811682821681810283169291811582850482141761157e5761157e61153f565b50505092915050565b634e487b7160e01b600052601260045260246000fd5b60006001600160c01b03838116806115c557634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6000602082840312156115e357600080fd5b5051919050565b805169ffffffffffffffffffff8116811461134f57600080fd5b600080600080600060a0868803121561161c57600080fd5b611625866115ea565b9450602086015193506040860151925060608601519150611648608087016115ea565b90509295509295909350565b818103818111156116675761166761153f565b92915050565b634e487b7160e01b600052602160045260246000fd5b6000808585111561169357600080fd5b838611156116a057600080fd5b5050820193919092039150565b8035602083101561166757600019602084900360031b1b1692915050565b6bffffffffffffffffffffffff1981358181169160148510156116f85780818660140360031b1b83161692505b505092915050565b6000808335601e1984360301811261171757600080fd5b83018035915067ffffffffffffffff82111561173257600080fd5b60200191503681900382131561174757600080fd5b925092905056fea26469706673582212208fdcea9969c4e4bcfded608cd964772a79bb0b876a0d6cd38cbd9d97f99adc9064736f6c63430008130033",
    "sourceMap": "305:897:62:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3094:141:0;;;;;;:::i;:::-;;:::i;:::-;;2721:149;;;;;;;;;;-1:-1:-1;2721:149:0;;;;;:::i;:::-;;:::i;1543:34:64:-;;;;;;;;;;-1:-1:-1;1543:34:64;;;;-1:-1:-1;;;1543:34:64;;;;;;;;;1025:10:67;1013:23;;;995:42;;983:2;968:18;1543:34:64;;;;;;;;1110:38;;;;;;;;;;;;;;;;;;1194:25:67;;;1182:2;1167:18;1110:38:64;1048:177:67;3433:471:64;;;;;;;;;;-1:-1:-1;3433:471:64;;;;;:::i;:::-;;:::i;1441:25::-;;;;;;;;;;-1:-1:-1;1441:25:64;;;;-1:-1:-1;;;1441:25:64;;;;;;4360:305;;;;;;;;;;;;;:::i;1154:36::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:32:67;;;1653:51;;1641:2;1626:18;1154:36:64;1491:219:67;1824:101:36;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:36;1273:6;-1:-1:-1;;;;;1273:6:36;1201:85;;1365:28:64;;;;;;;;;;-1:-1:-1;1365:28:64;;;;-1:-1:-1;;;;;1365:28:64;;;;;;-1:-1:-1;;;;;2087:32:67;;;2069:51;;2057:2;2042:18;1365:28:64;1923:203:67;740:50:64;;;;;;;;;;;;785:5;740:50;;4125:143;;;;;;;;;;-1:-1:-1;4125:143:64;;;;;:::i;:::-;;:::i;1143:186:0:-;;;;;;;;;;-1:-1:-1;1143:186:0;;;;;:::i;:::-;;:::i;471:39::-;;;;;;;;;;;;;;;3588:83;;;;;;;;;;;;;:::i;3890:133::-;;;;;;;;;;-1:-1:-1;3890:133:0;;;;;:::i;:::-;;:::i;3318:111::-;;;;;;;;;;;;;:::i;688:46:64:-;;;;;;;;;;;;731:3;688:46;;2474:105:0;;;:::i;1257:42:64:-;;;;;;;;;;;;;;;2074:198:36;;;;;;;;;;-1:-1:-1;2074:198:36;;;;;:::i;:::-;;:::i;632:290:0:-;;;;;;;;;;-1:-1:-1;632:290:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1022:29:64:-;;;;;;;;;;;;;;;3094:141:0;1094:13:36;:11;:13::i;:::-;3173:55:0::1;::::0;-1:-1:-1;;;3173:55:0;;1025:10:67;1013:23;;3173:55:0::1;::::0;::::1;995:42:67::0;3173:10:0::1;-1:-1:-1::0;;;;;3173:19:0::1;::::0;::::1;::::0;3201:9:::1;::::0;968:18:67;;3173:55:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;3094:141:::0;:::o;2721:149::-;1094:13:36;:11;:13::i;:::-;2817:46:0::1;::::0;-1:-1:-1;;;2817:46:0;;-1:-1:-1;;;;;5611:32:67;;;2817:46:0::1;::::0;::::1;5593:51:67::0;5660:18;;;5653:34;;;2817:10:0::1;:21;::::0;::::1;::::0;5566:18:67;;2817:46:0::1;;;;;;;;;;;;;;;;;::::0;::::1;3433:471:64::0;1094:13:36;:11;:13::i;:::-;3554:5:64::1;3538:12;:21;;;;3530:66;;;::::0;-1:-1:-1;;;3530:66:64;;5900:2:67;3530:66:64::1;::::0;::::1;5882:21:67::0;;;5919:18;;;5912:30;5978:34;5958:18;;;5951:62;6030:18;;3530:66:64::1;;;;;;;;;3630:3;3614:12;:19;;;;3606:64;;;::::0;-1:-1:-1;;;3606:64:64;;6261:2:67;3606:64:64::1;::::0;::::1;6243:21:67::0;;;6280:18;;;6273:30;6339:34;6319:18;;;6312:62;6391:18;;3606:64:64::1;6059:356:67::0;3606:64:64::1;3708:3;3688:16;:23;;;;3680:72;;;::::0;-1:-1:-1;;;3680:72:64;;6622:2:67;3680:72:64::1;::::0;::::1;6604:21:67::0;6661:2;6641:18;;;6634:30;6700:34;6680:18;;;6673:62;-1:-1:-1;;;6751:18:67;;;6744:34;6795:19;;3680:72:64::1;6420:400:67::0;3680:72:64::1;3762:11;:26:::0;;-1:-1:-1;;;;;3798:39:64;-1:-1:-1;;;3762:26:64::1;::::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;;;3798:39:64;;;;;-1:-1:-1;;;3798:39:64;;::::1;::::0;;::::1;;::::0;;;3852:45:::1;::::0;;7024:34:67;;;7089:2;7074:18;;7067:43;;;;3852:45:64::1;::::0;6968:18:67;3852:45:64::1;;;;;;;3433:471:::0;;:::o;4360:305::-;4468:18;4489:23;4500:11;4489:10;:23::i;:::-;4468:44;;4522:24;4549:29;4560:17;4549:10;:29::i;:::-;4522:56;-1:-1:-1;4648:10:64;4604:41;4631:13;4522:56;4604:41;:::i;:::-;:54;;;;:::i;:::-;4588:13;:70;;-1:-1:-1;;;;;;4588:70:64;-1:-1:-1;;;;;4588:70:64;;;;;;;;;;-1:-1:-1;;4360:305:64:o;1824:101:36:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;4125:143:64:-;1094:13:36;:11;:13::i;:::-;4205:56:64::1;4242:5;4250:2;4254:6;4205:28;:56::i;:::-;4125:143:::0;;:::o;1143:186:0:-;1251:24;:22;:24::i;:::-;1285:37;1293:4;1299:7;;1308:13;1285:7;:37::i;:::-;1143:186;;;;:::o;3588:83::-;1094:13:36;:11;:13::i;:::-;3640:10:0::1;-1:-1:-1::0;;;;;3640:22:0::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;3890:133:::0;1094:13:36;:11;:13::i;:::-;3975:41:0::1;::::0;-1:-1:-1;;;3975:41:0;;-1:-1:-1;;;;;1671:32:67;;;3975:41:0::1;::::0;::::1;1653:51:67::0;3975:10:0::1;:24;::::0;::::1;::::0;1626:18:67;;3975:41:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3890:133:::0;:::o;3318:111::-;3387:35;;-1:-1:-1;;;3387:35:0;;3416:4;3387:35;;;1653:51:67;3361:7:0;;3387:10;-1:-1:-1;;;;;3387:20:0;;;;1626:18:67;;3387:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3380:42;;3318:111;:::o;2474:105::-;2518:54;;-1:-1:-1;;;2518:54:0;;2566:4;2518:54;;;1653:51:67;2518:10:0;-1:-1:-1;;;;;2518:20:0;;;;2547:9;;1626:18:67;;2518:54:0;;;;;;;;;;;;;;;;;;;2074:198:36;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:36;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:36;;8593:2:67;2154:73:36::1;::::0;::::1;8575:21:67::0;8632:2;8612:18;;;8605:30;8671:34;8651:18;;;8644:62;-1:-1:-1;;;8722:18:67;;;8715:36;8768:19;;2154:73:36::1;8391:402:67::0;2154:73:36::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;632:290:0:-;764:20;786:22;821:24;:22;:24::i;:::-;862:53;887:6;895:10;907:7;862:24;:53::i;:::-;855:60;;;;632:290;;;;;;:::o;1359:130:36:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:36;719:10:51;1422:23:36;1414:68;;;;-1:-1:-1;;;1414:68:36;;9000:2:67;1414:68:36;;;8982:21:67;;;9019:18;;;9012:30;9078:34;9058:18;;;9051:62;9130:18;;1414:68:36;8798:356:67;9601:558:64;9661:13;9687:14;9703:13;9719:17;9738:22;9764:7;-1:-1:-1;;;;;9764:23:64;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9686:103;;;;;;;;;9816:1;9807:6;:10;9799:54;;;;-1:-1:-1;;;9799:54:64;;10023:2:67;9799:54:64;;;10005:21:67;10062:2;10042:18;;;10035:30;10101:33;10081:18;;;10074:61;10152:18;;9799:54:64;9821:355:67;9799:54:64;9974:34;9992:16;9974:15;:34;:::i;:::-;9961:9;:47;;9953:87;;;;-1:-1:-1;;;9953:87:64;;10516:2:67;9953:87:64;;;10498:21:67;10555:2;10535:18;;;10528:30;10594:29;10574:18;;;10567:57;10641:18;;9953:87:64;10314:351:67;9953:87:64;10077:7;10058:26;;:15;:26;;;;10050:61;;;;-1:-1:-1;;;10050:61:64;;10872:2:67;10050:61:64;;;10854:21:67;10911:2;10891:18;;;10884:30;-1:-1:-1;;;10930:18:67;;;10923:52;10992:18;;10050:61:64;10670:346:67;10050:61:64;-1:-1:-1;10144:6:64;;9601:558;-1:-1:-1;;;;9601:558:64:o;2426:187:36:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:36;;;-1:-1:-1;;;;;;2534:17:36;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;6074:1189:16:-;6237:2;6231:4;6224:16;6294:6;6288:4;6281:20;-1:-1:-1;;;6428:4:16;6421:48;6892:4;6886;6880;6874;6871:1;6864:5;6857;6852:45;6812:16;6805:24;6801:1;6794:4;6788:11;6785:18;6782:48;6510:405;6483:655;;7031:10;7025:4;7018:24;7119:4;7113;7106:18;6483:655;7245:1;7239:4;7232:15;6074:1189;;;:::o;4087:135:0:-;4156:10;-1:-1:-1;;;;;4178:10:0;4156:33;;4148:67;;;;-1:-1:-1;;;4148:67:0;;11223:2:67;4148:67:0;;;11205:21:67;11262:2;11242:18;;;11235:30;-1:-1:-1;;;11281:18:67;;;11274:51;11342:18;;4148:67:0;11021:345:67;7216:2081:64;7337:25;7329:4;:33;;;;;;;;:::i;:::-;7325:140;7378:7;7325:140;7498:18;7519:23;7530:11;7519:10;:23::i;:::-;7498:44;;7556:19;7578:29;7589:17;7578:10;:29::i;:::-;7643:13;;7556:51;;-1:-1:-1;;;;;;7643:13:64;;;;7621:19;;7686:49;;;;7708:13;7686:36;;:49;;;;;;:::i;:::-;7781:20;;7686:49;;;;-1:-1:-1;;;;7781:20:64;;;;731:3;7886:40;;;;7872:11;;-1:-1:-1;;;;;7836:14:64;;:33;7872:11;7836:47;;;;:::i;:::-;;:90;:204;;;;8019:21;731:3;8000:40;7986:11;731:3;7958:5;-1:-1:-1;;;;;7950:14:64;:33;:47;;;;;:::i;:::-;;:90;7836:204;7815:365;;;8073:13;:38;;-1:-1:-1;;;;;;8073:38:64;-1:-1:-1;;;;;8073:38:64;;;;;;;;;-1:-1:-1;7815:365:64;8496:11;;8415:25;;8541:23;;-1:-1:-1;;;8496:11:64;;;;8481;785:5;8460:32;8444:48;;8443:64;:78;;:122;;-1:-1:-1;8443:122:64;8684:13;8694:2;8692:1;8684:7;;:13;:::i;:::-;8676:22;;;:::i;:::-;8668:51;8664:421;;;8861:209;8919:5;8963:14;8974:2;8971;8963:7;;:14;:::i;:::-;8955:23;;;:::i;:::-;8947:32;;9035:17;9017:7;;9025:1;9017:13;9027:2;9017:13;;;;;;;:::i;:::-;9009:22;;;:::i;:::-;9001:51;8861:28;:209::i;:::-;9229:14;9240:2;9237;9229:7;;:14;:::i;:::-;9221:23;;;:::i;:::-;9190:90;;;12615:25:67;;;12671:2;12656:18;;12649:34;;;9213:32:64;;;;;;9190:90;;12588:18:67;9190:90:64;;;;;;;7474:1817;;;;;;7216:2081;;;;:::o;693:507:62:-;1005:73;;-1:-1:-1;;;1005:73:62;;1067:10;1005:73;;;1653:51:67;872:20:62;;894:24;;1013:42;;1005:61;;1626:18:67;;1005:73:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1082:1;1005:78;1001:116;;1104:13;;-1:-1:-1;;;1104:13:62;;;;;;;;;;;1001:116;1134:59;1165:6;1134:59;1177:15;5414:13:64;;5306:20;;5328:24;;-1:-1:-1;;;;;5414:13:64;5449:16;;;5441:53;;;;-1:-1:-1;;;5441:53:64;;12896:2:67;5441:53:64;;;12878:21:67;12935:2;12915:18;;;12908:30;12974:26;12954:18;;;12947:54;13018:18;;5441:53:64;12694:348:67;5441:53:64;5508:14;5558:2;5525:23;;;;:6;:23;:::i;:::-;:30;;:35;5508:52;;5770:6;-1:-1:-1;;;;;5770:73:64;5847:1;5770:78;5745:167;;;;-1:-1:-1;;;5745:167:64;;13775:2:67;5745:167:64;;;13757:21:67;13814:2;13794:18;;;13787:30;13853:32;13833:18;;;13826:60;13903:18;;5745:167:64;13573:354:67;5745:167:64;6181:11;;6094:19;;6226:23;;-1:-1:-1;;;6181:11:64;;;;6158:19;;;;785:5;6135:42;6117:60;;6116:76;:106;;:134;6094:156;;6268:6;6278:2;6268:12;6264:197;;6360:23;;;;:6;:23;:::i;:::-;:30;;6387:2;;6384;;6360:30;:::i;:::-;6352:39;;;:::i;:::-;6329:63;;;6300:146;;;;-1:-1:-1;;;6300:146:64;;14134:2:67;6300:146:64;;;14116:21:67;;;14153:18;;;14146:30;14212:34;14192:18;;;14185:62;14264:18;;6300:146:64;13932:356:67;6300:146:64;6474:91;6515:5;6523:13;;;;:6;:13;:::i;:::-;6546:4;6553:11;6474:32;:91::i;:::-;6606:11;6619:13;;;;:6;:13;:::i;:::-;6589:44;;;;;;;;14450:19:67;;;14507:2;14503:15;-1:-1:-1;;14499:53:67;14494:2;14485:12;;14478:75;14578:2;14569:12;;14293:294;6589:44:64;;;;-1:-1:-1;;6589:44:64;;;;;;;;;;6758:1;;-1:-1:-1;5140:1636:64;-1:-1:-1;;;;;;;5140:1636:64:o;2319:1379:16:-;2502:4;2496:11;2568:6;2562:4;2555:20;2633:2;2627:4;2620:16;2698:4;2694:2;2690:13;2684:4;2677:27;-1:-1:-1;;;2841:4:16;2834:48;3305:4;3299;3293;3287;3284:1;3277:5;3270;3265:45;3225:16;3218:24;3214:1;3207:4;3201:11;3198:18;3195:48;2923:405;2896:659;;3448:10;3442:4;3435:24;3536:4;3530;3523:18;2896:659;3582:1;3576:4;3569:15;3638:4;3631:15;-1:-1:-1;;;;2319:1379:16:o;14:163:67:-;81:20;;141:10;130:22;;120:33;;110:61;;167:1;164;157:12;110:61;14:163;;;:::o;182:184::-;240:6;293:2;281:9;272:7;268:23;264:32;261:52;;;309:1;306;299:12;261:52;332:28;350:9;332:28;:::i;:::-;322:38;182:184;-1:-1:-1;;;182:184:67:o;371:139::-;-1:-1:-1;;;;;454:31:67;;444:42;;434:70;;500:1;497;490:12;515:331;591:6;599;652:2;640:9;631:7;627:23;623:32;620:52;;;668:1;665;658:12;620:52;707:9;694:23;726:39;759:5;726:39;:::i;:::-;784:5;836:2;821:18;;;;808:32;;-1:-1:-1;;;515:331:67:o;1230:256::-;1296:6;1304;1357:2;1345:9;1336:7;1332:23;1328:32;1325:52;;;1373:1;1370;1363:12;1325:52;1396:28;1414:9;1396:28;:::i;:::-;1386:38;;1443:37;1476:2;1465:9;1461:18;1443:37;:::i;:::-;1433:47;;1230:256;;;;;:::o;2459:818::-;2562:6;2570;2578;2586;2639:2;2627:9;2618:7;2614:23;2610:32;2607:52;;;2655:1;2652;2645:12;2607:52;2694:9;2681:23;2733:1;2726:5;2723:12;2713:40;;2749:1;2746;2739:12;2713:40;2772:5;-1:-1:-1;2828:2:67;2813:18;;2800:32;2851:18;2881:14;;;2878:34;;;2908:1;2905;2898:12;2878:34;2946:6;2935:9;2931:22;2921:32;;2991:7;2984:4;2980:2;2976:13;2972:27;2962:55;;3013:1;3010;3003:12;2962:55;3053:2;3040:16;3079:2;3071:6;3068:14;3065:34;;;3095:1;3092;3085:12;3065:34;3140:7;3135:2;3126:6;3122:2;3118:15;3114:24;3111:37;3108:57;;;3161:1;3158;3151:12;3108:57;2459:818;;3192:2;3184:11;;;;;-1:-1:-1;3214:6:67;;3267:2;3252:18;3239:32;;-1:-1:-1;2459:818:67;-1:-1:-1;;;2459:818:67:o;3510:263::-;3577:6;3630:2;3618:9;3609:7;3605:23;3601:32;3598:52;;;3646:1;3643;3636:12;3598:52;3685:9;3672:23;3704:39;3737:5;3704:39;:::i;4038:529::-;4148:6;4156;4164;4217:2;4205:9;4196:7;4192:23;4188:32;4185:52;;;4233:1;4230;4223:12;4185:52;4273:9;4260:23;4306:18;4298:6;4295:30;4292:50;;;4338:1;4335;4328:12;4292:50;4361:22;;4417:3;4399:16;;;4395:26;4392:46;;;4434:1;4431;4424:12;4392:46;4457:2;4506;4491:18;;4478:32;;-1:-1:-1;4557:2:67;4542:18;;;4529:32;;4038:529;-1:-1:-1;;;4038:529:67:o;4572:602::-;4747:2;4736:9;4729:21;4710:4;4779:6;4773:13;4822:6;4817:2;4806:9;4802:18;4795:34;4847:1;4857:144;4871:6;4868:1;4865:13;4857:144;;;4984:4;4968:14;;;4964:25;;4958:32;4953:2;4934:17;;;4930:26;4923:68;4886:12;4857:144;;;4861:3;5050:1;5045:2;5036:6;5025:9;5021:22;5017:31;5010:42;5120:2;5113;5109:7;5104:2;5096:6;5092:15;5088:29;5077:9;5073:45;5069:54;5061:62;;;5161:6;5154:4;5143:9;5139:20;5132:36;4572:602;;;;;:::o;7121:127::-;7182:10;7177:3;7173:20;7170:1;7163:31;7213:4;7210:1;7203:15;7237:4;7234:1;7227:15;7253:285;-1:-1:-1;;;;;7394:10:67;;;7364;;;7428:13;;;7424:22;;;7325:19;7468:11;;7489:17;;;7481:26;;7465:43;7455:77;;7512:18;;:::i;:::-;7455:77;;;7253:285;;;;:::o;7543:127::-;7604:10;7599:3;7595:20;7592:1;7585:31;7635:4;7632:1;7625:15;7659:4;7656:1;7649:15;7675:298;7715:1;-1:-1:-1;;;;;7780:10:67;;;;7799:134;;7855:10;7850:3;7846:20;7843:1;7836:31;7890:4;7887:1;7880:15;7918:4;7915:1;7908:15;7799:134;7951:10;;7947:20;;;;;7675:298;-1:-1:-1;;7675:298:67:o;8202:184::-;8272:6;8325:2;8313:9;8304:7;8300:23;8296:32;8293:52;;;8341:1;8338;8331:12;8293:52;-1:-1:-1;8364:16:67;;8202:184;-1:-1:-1;8202:184:67:o;9159:179::-;9237:13;;9290:22;9279:34;;9269:45;;9259:73;;9328:1;9325;9318:12;9343:473;9446:6;9454;9462;9470;9478;9531:3;9519:9;9510:7;9506:23;9502:33;9499:53;;;9548:1;9545;9538:12;9499:53;9571:39;9600:9;9571:39;:::i;:::-;9561:49;;9650:2;9639:9;9635:18;9629:25;9619:35;;9694:2;9683:9;9679:18;9673:25;9663:35;;9738:2;9727:9;9723:18;9717:25;9707:35;;9761:49;9805:3;9794:9;9790:19;9761:49;:::i;:::-;9751:59;;9343:473;;;;;;;;:::o;10181:128::-;10248:9;;;10269:11;;;10266:37;;;10283:18;;:::i;:::-;10181:128;;;;:::o;11371:127::-;11432:10;11427:3;11423:20;11420:1;11413:31;11463:4;11460:1;11453:15;11487:4;11484:1;11477:15;11503:331;11608:9;11619;11661:8;11649:10;11646:24;11643:44;;;11683:1;11680;11673:12;11643:44;11712:6;11702:8;11699:20;11696:40;;;11732:1;11729;11722:12;11696:40;-1:-1:-1;;11758:23:67;;;11803:25;;;;;-1:-1:-1;11503:331:67:o;11839:255::-;11959:19;;11998:2;11990:11;;11987:101;;;-1:-1:-1;;12059:2:67;12055:12;;;12052:1;12048:20;12044:33;12033:45;11839:255;;;;:::o;12099:337::-;-1:-1:-1;;12220:19:67;;12307:11;;;;12338:2;12330:11;;12327:103;;;12417:2;12411;12404:3;12400:2;12396:12;12393:1;12389:20;12385:29;12381:2;12377:38;12373:47;12364:56;;12327:103;;;12099:337;;;;:::o;13047:521::-;13124:4;13130:6;13190:11;13177:25;13284:2;13280:7;13269:8;13253:14;13249:29;13245:43;13225:18;13221:68;13211:96;;13303:1;13300;13293:12;13211:96;13330:33;;13382:20;;;-1:-1:-1;13425:18:67;13414:30;;13411:50;;;13457:1;13454;13447:12;13411:50;13490:4;13478:17;;-1:-1:-1;13521:14:67;13517:27;;;13507:38;;13504:58;;;13558:1;13555;13548:12;13504:58;13047:521;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "13": [
        {
          "start": 893,
          "length": 32
        },
        {
          "start": 1248,
          "length": 32
        },
        {
          "start": 1399,
          "length": 32
        },
        {
          "start": 2168,
          "length": 32
        },
        {
          "start": 2316,
          "length": 32
        },
        {
          "start": 2435,
          "length": 32
        },
        {
          "start": 2576,
          "length": 32
        },
        {
          "start": 3454,
          "length": 32
        }
      ],
      "53702": [
        {
          "start": 1180,
          "length": 32
        },
        {
          "start": 2090,
          "length": 32
        },
        {
          "start": 3960,
          "length": 32
        },
        {
          "start": 4699,
          "length": 32
        }
      ],
      "53704": [
        {
          "start": 469,
          "length": 32
        },
        {
          "start": 1974,
          "length": 32
        },
        {
          "start": 3695,
          "length": 32
        }
      ],
      "53707": [
        {
          "start": 624,
          "length": 32
        },
        {
          "start": 1885,
          "length": 32
        },
        {
          "start": 3587,
          "length": 32
        }
      ],
      "53710": [
        {
          "start": 1050,
          "length": 32
        },
        {
          "start": 1930,
          "length": 32
        },
        {
          "start": 3632,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "REFUND_POSTOP_COST()": "9dbdb977",
    "addStake(uint32)": "0396cb60",
    "deposit()": "d0e30db0",
    "entryPoint()": "b0d691fe",
    "getDeposit()": "c399ec88",
    "nativeAssetOracle()": "efb1ad5d",
    "owner()": "8da5cb5b",
    "postOp(uint8,bytes,uint256)": "a9a23409",
    "previousPrice()": "914e245a",
    "priceDenominator()": "cdcf4b9b",
    "priceMarkup()": "3e04619d",
    "priceUpdateThreshold()": "3a34c83f",
    "renounceOwnership()": "715018a6",
    "token()": "fc0c546a",
    "tokenDecimals()": "3b97e856",
    "tokenOracle()": "6c5ec25c",
    "transferOwnership(address)": "f2fde38b",
    "unlockStake()": "bb9fe6bf",
    "updateConfig(uint32,uint32)": "3c2154bc",
    "updatePrice()": "673a7e28",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e",
    "withdrawStake(address)": "c23a5cea",
    "withdrawTo(address,uint256)": "205c2878",
    "withdrawToken(address,uint256)": "9e281a98"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20Metadata\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"_tokenOracle\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"_nativeAssetOracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NoBAYCFound\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"priceMarkup\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"updateThreshold\",\"type\":\"uint32\"}],\"name\":\"ConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualTokenNeeded\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"UserOperationSponsored\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REFUND_POSTOP_COST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeAssetOracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"previousPrice\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceMarkup\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceUpdateThreshold\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenOracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_priceMarkup\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_updateThreshold\",\"type\":\"uint32\"}],\"name\":\"updateConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateConfig(uint32,uint32)\":{\"params\":{\"_priceMarkup\":\"The new price markup percentage (1e6 = 100%).\",\"_updateThreshold\":\"The new price update threshold percentage (1e6 = 100%).\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}},\"withdrawToken(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"to\":\"The address to transfer the tokens to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"updateConfig(uint32,uint32)\":{\"notice\":\"Updates the price markup and price update threshold configurations.\"},\"updatePrice()\":{\"notice\":\"Updates the token price by fetching the latest price from the Oracle.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"},\"withdrawToken(address,uint256)\":{\"notice\":\"Allows the contract owner to withdraw a specified amount of tokens from the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BAYCPaymaster.sol\":\"BAYCPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@account-abstraction/=lib/account-abstraction/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc20-paymaster-contracts/=lib/erc20-paymaster-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x27f658d545b5f26c2e09a7ac4fba72f9975433839d10225a520e557540b84443\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://426f0c6565ae612d34ae184fb1582e6fc360abf79450975c1c2dd439184094a0\",\"dweb:/ipfs/QmZMeMosC1P6Z5BQyT6iGFQrY6ui5ART65ycVWmXFnDpoq\"]},\"lib/account-abstraction/contracts/core/EntryPoint.sol\":{\"keccak256\":\"0x04f86318b47f052d7308795ffae6ecec0d023d2458b4e17751b89a0e4acfcdc6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c9f6e359c8dbe875ad974d3a0fb7b3d62319a6b115c44bac1e4587ae2ad2edaf\",\"dweb:/ipfs/QmTSWTov2rUeYk8cwzrtsd3uVXokCYok4gMiZ1sPs9tycH\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"lib/account-abstraction/contracts/core/NonceManager.sol\":{\"keccak256\":\"0xa17a4a6fde70088ab18ffe6df830f3efa31f1cd0e1a7160336c96e3c94984d25\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b38615df9f80c56282b72888e9ba1eb1a9413fa67a0dbf094deda7af9feb38e7\",\"dweb:/ipfs/QmSzcXetEJRH4UHuUmZiSgX6bFgfqHWfmyuxVnh4NosMk1\"]},\"lib/account-abstraction/contracts/core/SenderCreator.sol\":{\"keccak256\":\"0x44b9449fec82d6cdfb01d52fdd5a72f90099c651316123810cf9633f00b018c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a9c0487390e72638681d175c45bc92425c802fffdca4bd0ae8457782ee284612\",\"dweb:/ipfs/QmVbzuehCUWJWqEHyMWuc6cRVbxfcMdFsmGL9o4Wz7WY2x\"]},\"lib/account-abstraction/contracts/core/StakeManager.sol\":{\"keccak256\":\"0x21aa0956382bd000b1b8c3b1d19ca6ebcd6c9029eebb19c612fb38ee5dd2430a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://0a625c8795354d9f429367f9c1d14eb8af7db9c7f2c2a2033e2066ced76a573a\",\"dweb:/ipfs/Qmd1j6UarUg54q1G2HCNCLQz8XGVZR1qxX7eQ6cytHpQPN\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8\",\"dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"lib/account-abstraction/contracts/utils/Exec.sol\":{\"keccak256\":\"0x5b232117afbc2939f3ffc92745614867e9e1d475a3e1e5443adae13c200174f1\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://62e7365379a06ead7b47637945bcaee095d51aab1d3ac00ddec69443e6cbe9fe\",\"dweb:/ipfs/QmctG3aw4U3KMSMeJKoLJ1NJewjMWfppnd1m3kxNTe39Uy\"]},\"lib/erc20-paymaster-contracts/src/PimlicoERC20Paymaster.sol\":{\"keccak256\":\"0xf40fa537ceff4d57b65417f084233edad99c3246c8f55978676e89a516186cb7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b9db9217dabc6ae411765c2b7b39601f6fd1496b6f21082f10a31540c60e8b70\",\"dweb:/ipfs/QmUWsJTY5EfjFAxXg7CYNg55NpikRmQAd6mfp4cBStP4Gj\"]},\"lib/erc20-paymaster-contracts/src/interfaces/IOracle.sol\":{\"keccak256\":\"0xed0dccc3eef721ffd9dd9e93cd7bfe6841b779678b6678a0b6abae6857d4475f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95457584a6e9b1197f09ffdf4b5428f9fcd997d605218a3476b4ac2cc4cb0043\",\"dweb:/ipfs/QmW75qSauBNoj4J7FPMeDiH62KUFoC7ZmAkrzKeN3oq9am\"]},\"lib/erc20-paymaster-contracts/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xd7f88d95c19ce10c1a0fb91e84fc8a7333db0b6e1d390132e820915016b52882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62425f6121485367436295e84b83441a3aa9df2ee7c27600e2edaa3cb24fe867\",\"dweb:/ipfs/QmQ85F8VU3o59F4XSM5fhJHmooWuojYdm4HvJDzhfaFDyU\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/BAYCPaymaster.sol\":{\"keccak256\":\"0x7e79d415772962777f9c1417082be94ba5666846de3b9719d4e6aecab263e917\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b6174c2d21e57168eb72b50d2051d7d859d0cc9a28a66bac8e7853c4bc8695de\",\"dweb:/ipfs/QmZyLDgii6BgPASPCNdtCk2AYQo9drT4ZvrM4ZvpPaseLu\"]},\"src/libs/PimlicoERC20PaymasterCustom.sol\":{\"keccak256\":\"0xe877888099f1b1bd1e9f7284c48c0f4c0f988fc7184ec775a84e03579588ef7e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e202ed4715d8d537165de93b25b23c822867a9dccb9a985c0e76f802d3cd1ee0\",\"dweb:/ipfs/QmW2PBdSXbpYrWxNnPkhbyocGVmNxYsug7P8dX3HLWEt6a\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20Metadata",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            },
            {
              "internalType": "contract IOracle",
              "name": "_tokenOracle",
              "type": "address"
            },
            {
              "internalType": "contract IOracle",
              "name": "_nativeAssetOracle",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoBAYCFound"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "priceMarkup",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "updateThreshold",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConfigUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "actualTokenNeeded",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UserOperationSponsored",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REFUND_POSTOP_COST",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "unstakeDelaySec",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nativeAssetOracle",
          "outputs": [
            {
              "internalType": "contract IOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "previousPrice",
          "outputs": [
            {
              "internalType": "uint192",
              "name": "",
              "type": "uint192"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "priceDenominator",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "priceMarkup",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "priceUpdateThreshold",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenDecimals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOracle",
          "outputs": [
            {
              "internalType": "contract IOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_priceMarkup",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "_updateThreshold",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateConfig"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updatePrice"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "maxCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawToken"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStake(uint32)": {
            "params": {
              "unstakeDelaySec": "- the unstake delay for this paymaster. Can only be increased."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "postOp(uint8,bytes,uint256)": {
            "params": {
              "actualGasCost": "- actual gas used so far (without this postOp call).",
              "context": "- the context value returned by validatePaymasterUserOp",
              "mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateConfig(uint32,uint32)": {
            "params": {
              "_priceMarkup": "The new price markup percentage (1e6 = 100%).",
              "_updateThreshold": "The new price update threshold percentage (1e6 = 100%)."
            }
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
              "userOp": "the user operation",
              "userOpHash": "hash of the user's request data."
            },
            "returns": {
              "context": "value to send to a postOp      zero length to signify postOp is not required.",
              "validationData": "signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value."
            }
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "amount": "to withdraw",
              "withdrawAddress": "target to send to"
            }
          },
          "withdrawToken(address,uint256)": {
            "params": {
              "amount": "The amount of tokens to transfer.",
              "to": "The address to transfer the tokens to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake(uint32)": {
            "notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
          },
          "deposit()": {
            "notice": "add a deposit for this paymaster, used for paying for transaction fees"
          },
          "getDeposit()": {
            "notice": "return current paymaster's deposit on the entryPoint."
          },
          "postOp(uint8,bytes,uint256)": {
            "notice": "post-operation handler. Must verify sender is the entryPoint"
          },
          "unlockStake()": {
            "notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
          },
          "updateConfig(uint32,uint32)": {
            "notice": "Updates the price markup and price update threshold configurations."
          },
          "updatePrice()": {
            "notice": "Updates the token price by fetching the latest price from the Oracle."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
          },
          "withdrawStake(address)": {
            "notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
          },
          "withdrawTo(address,uint256)": {
            "notice": "withdraw value from the deposit"
          },
          "withdrawToken(address,uint256)": {
            "notice": "Allows the contract owner to withdraw a specified amount of tokens from the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@account-abstraction/=lib/account-abstraction/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "account-abstraction/=lib/account-abstraction/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc20-paymaster-contracts/=lib/erc20-paymaster-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BAYCPaymaster.sol": "BAYCPaymaster"
      },
      "libraries": {}
    },
    "sources": {
      "lib/account-abstraction/contracts/core/BasePaymaster.sol": {
        "keccak256": "0x27f658d545b5f26c2e09a7ac4fba72f9975433839d10225a520e557540b84443",
        "urls": [
          "bzz-raw://426f0c6565ae612d34ae184fb1582e6fc360abf79450975c1c2dd439184094a0",
          "dweb:/ipfs/QmZMeMosC1P6Z5BQyT6iGFQrY6ui5ART65ycVWmXFnDpoq"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/EntryPoint.sol": {
        "keccak256": "0x04f86318b47f052d7308795ffae6ecec0d023d2458b4e17751b89a0e4acfcdc6",
        "urls": [
          "bzz-raw://c9f6e359c8dbe875ad974d3a0fb7b3d62319a6b115c44bac1e4587ae2ad2edaf",
          "dweb:/ipfs/QmTSWTov2rUeYk8cwzrtsd3uVXokCYok4gMiZ1sPs9tycH"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/Helpers.sol": {
        "keccak256": "0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a",
        "urls": [
          "bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746",
          "dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/NonceManager.sol": {
        "keccak256": "0xa17a4a6fde70088ab18ffe6df830f3efa31f1cd0e1a7160336c96e3c94984d25",
        "urls": [
          "bzz-raw://b38615df9f80c56282b72888e9ba1eb1a9413fa67a0dbf094deda7af9feb38e7",
          "dweb:/ipfs/QmSzcXetEJRH4UHuUmZiSgX6bFgfqHWfmyuxVnh4NosMk1"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/SenderCreator.sol": {
        "keccak256": "0x44b9449fec82d6cdfb01d52fdd5a72f90099c651316123810cf9633f00b018c2",
        "urls": [
          "bzz-raw://a9c0487390e72638681d175c45bc92425c802fffdca4bd0ae8457782ee284612",
          "dweb:/ipfs/QmVbzuehCUWJWqEHyMWuc6cRVbxfcMdFsmGL9o4Wz7WY2x"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/StakeManager.sol": {
        "keccak256": "0x21aa0956382bd000b1b8c3b1d19ca6ebcd6c9029eebb19c612fb38ee5dd2430a",
        "urls": [
          "bzz-raw://0a625c8795354d9f429367f9c1d14eb8af7db9c7f2c2a2033e2066ced76a573a",
          "dweb:/ipfs/Qmd1j6UarUg54q1G2HCNCLQz8XGVZR1qxX7eQ6cytHpQPN"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/IAccount.sol": {
        "keccak256": "0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418",
        "urls": [
          "bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4",
          "dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a",
        "urls": [
          "bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b",
          "dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8",
        "urls": [
          "bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf",
          "dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/INonceManager.sol": {
        "keccak256": "0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12",
        "urls": [
          "bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2",
          "dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IPaymaster.sol": {
        "keccak256": "0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456",
        "urls": [
          "bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8",
          "dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f",
        "urls": [
          "bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3",
          "dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c",
        "urls": [
          "bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c",
          "dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/utils/Exec.sol": {
        "keccak256": "0x5b232117afbc2939f3ffc92745614867e9e1d475a3e1e5443adae13c200174f1",
        "urls": [
          "bzz-raw://62e7365379a06ead7b47637945bcaee095d51aab1d3ac00ddec69443e6cbe9fe",
          "dweb:/ipfs/QmctG3aw4U3KMSMeJKoLJ1NJewjMWfppnd1m3kxNTe39Uy"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/erc20-paymaster-contracts/src/PimlicoERC20Paymaster.sol": {
        "keccak256": "0xf40fa537ceff4d57b65417f084233edad99c3246c8f55978676e89a516186cb7",
        "urls": [
          "bzz-raw://b9db9217dabc6ae411765c2b7b39601f6fd1496b6f21082f10a31540c60e8b70",
          "dweb:/ipfs/QmUWsJTY5EfjFAxXg7CYNg55NpikRmQAd6mfp4cBStP4Gj"
        ],
        "license": "GPL-3.0"
      },
      "lib/erc20-paymaster-contracts/src/interfaces/IOracle.sol": {
        "keccak256": "0xed0dccc3eef721ffd9dd9e93cd7bfe6841b779678b6678a0b6abae6857d4475f",
        "urls": [
          "bzz-raw://95457584a6e9b1197f09ffdf4b5428f9fcd997d605218a3476b4ac2cc4cb0043",
          "dweb:/ipfs/QmW75qSauBNoj4J7FPMeDiH62KUFoC7ZmAkrzKeN3oq9am"
        ],
        "license": "MIT"
      },
      "lib/erc20-paymaster-contracts/src/utils/SafeTransferLib.sol": {
        "keccak256": "0xd7f88d95c19ce10c1a0fb91e84fc8a7333db0b6e1d390132e820915016b52882",
        "urls": [
          "bzz-raw://62425f6121485367436295e84b83441a3aa9df2ee7c27600e2edaa3cb24fe867",
          "dweb:/ipfs/QmQ85F8VU3o59F4XSM5fhJHmooWuojYdm4HvJDzhfaFDyU"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f",
        "urls": [
          "bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc",
          "dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff",
        "urls": [
          "bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005",
          "dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
        "keccak256": "0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256",
        "urls": [
          "bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516",
          "dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd",
        "urls": [
          "bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a",
          "dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/BAYCPaymaster.sol": {
        "keccak256": "0x7e79d415772962777f9c1417082be94ba5666846de3b9719d4e6aecab263e917",
        "urls": [
          "bzz-raw://b6174c2d21e57168eb72b50d2051d7d859d0cc9a28a66bac8e7853c4bc8695de",
          "dweb:/ipfs/QmZyLDgii6BgPASPCNdtCk2AYQo9drT4ZvrM4ZvpPaseLu"
        ],
        "license": "GPL-3.0"
      },
      "src/libs/PimlicoERC20PaymasterCustom.sol": {
        "keccak256": "0xe877888099f1b1bd1e9f7284c48c0f4c0f988fc7184ec775a84e03579588ef7e",
        "urls": [
          "bzz-raw://e202ed4715d8d537165de93b25b23c822867a9dccb9a985c0e76f802d3cd1ee0",
          "dweb:/ipfs/QmW2PBdSXbpYrWxNnPkhbyocGVmNxYsug7P8dX3HLWEt6a"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BAYCPaymaster.sol",
    "id": 53267,
    "exportedSymbols": {
      "BAYCPaymaster": [
        53266
      ],
      "BasePaymaster": [
        219
      ],
      "Context": [
        51042
      ],
      "ECDSA": [
        51963
      ],
      "EIP712": [
        52167
      ],
      "EntryPoint": [
        2443
      ],
      "Exec": [
        3945
      ],
      "IAccount": [
        3260
      ],
      "IAggregator": [
        3294
      ],
      "IERC20": [
        49165
      ],
      "IERC20Metadata": [
        49190
      ],
      "IERC5267": [
        48327
      ],
      "IERC721": [
        50645
      ],
      "IEntryPoint": [
        3498
      ],
      "INonceManager": [
        3517
      ],
      "IOracle": [
        4541
      ],
      "IPaymaster": [
        3552
      ],
      "IStakeManager": [
        3657
      ],
      "Math": [
        53069
      ],
      "NonceManager": [
        2771
      ],
      "Ownable": [
        48219
      ],
      "PimlicoERC20Paymaster": [
        4520
      ],
      "PimlicoERC20PaymasterCustom": [
        54255
      ],
      "ReentrancyGuard": [
        48500
      ],
      "SafeTransferLib": [
        4641
      ],
      "SenderCreator": [
        2818
      ],
      "ShortString": [
        51047
      ],
      "ShortStrings": [
        51258
      ],
      "SignedMath": [
        53174
      ],
      "StakeManager": [
        3243
      ],
      "StorageSlot": [
        51368
      ],
      "Strings": [
        51597
      ],
      "UserOperation": [
        3684
      ],
      "UserOperationLib": [
        3854
      ],
      "ValidationData": [
        2452
      ],
      "_intersectTimeRange": [
        2596
      ],
      "_packValidationData": [
        2633,
        2671
      ],
      "_parseValidationData": [
        2511
      ],
      "calldataKeccak": [
        2681
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:1167:62",
    "nodes": [
      {
        "id": 53197,
        "nodeType": "PragmaDirective",
        "src": "36:24:62",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 53199,
        "nodeType": "ImportDirective",
        "src": "62:72:62",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53267,
        "sourceUnit": 50530,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53198,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50645,
              "src": "70:7:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53200,
        "nodeType": "ImportDirective",
        "src": "135:48:62",
        "nodes": [],
        "absolutePath": "src/libs/PimlicoERC20PaymasterCustom.sol",
        "file": "./libs/PimlicoERC20PaymasterCustom.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53267,
        "sourceUnit": 54256,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53266,
        "nodeType": "ContractDefinition",
        "src": "305:897:62",
        "nodes": [
          {
            "id": 53204,
            "nodeType": "ErrorDefinition",
            "src": "366:20:62",
            "nodes": [],
            "errorSelector": "2c2fc84e",
            "name": "NoBAYCFound",
            "nameLocation": "372:11:62",
            "parameters": {
              "id": 53203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "383:2:62"
            }
          },
          {
            "id": 53228,
            "nodeType": "FunctionDefinition",
            "src": "396:291:62",
            "nodes": [],
            "body": {
              "id": 53227,
              "nodeType": "Block",
              "src": "685:2:62",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 53219,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53207,
                    "src": "581:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Metadata_$49190",
                      "typeString": "contract IERC20Metadata"
                    }
                  },
                  {
                    "id": 53220,
                    "name": "_entryPoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53210,
                    "src": "597:11:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$3498",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  {
                    "id": 53221,
                    "name": "_tokenOracle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53213,
                    "src": "618:12:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOracle_$4541",
                      "typeString": "contract IOracle"
                    }
                  },
                  {
                    "id": 53222,
                    "name": "_nativeAssetOracle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53216,
                    "src": "640:18:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOracle_$4541",
                      "typeString": "contract IOracle"
                    }
                  },
                  {
                    "expression": {
                      "id": 53223,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "668:3:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 53224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "672:6:62",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "668:10:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 53225,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 53218,
                  "name": "PimlicoERC20PaymasterCustom",
                  "nameLocations": [
                    "544:27:62"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54255,
                  "src": "544:27:62"
                },
                "nodeType": "ModifierInvocation",
                "src": "544:140:62"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 53217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53207,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "432:6:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 53228,
                  "src": "417:21:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Metadata_$49190",
                    "typeString": "contract IERC20Metadata"
                  },
                  "typeName": {
                    "id": 53206,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53205,
                      "name": "IERC20Metadata",
                      "nameLocations": [
                        "417:14:62"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49190,
                      "src": "417:14:62"
                    },
                    "referencedDeclaration": 49190,
                    "src": "417:14:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Metadata_$49190",
                      "typeString": "contract IERC20Metadata"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53210,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "460:11:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 53228,
                  "src": "448:23:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$3498",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 53209,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53208,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "448:11:62"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3498,
                      "src": "448:11:62"
                    },
                    "referencedDeclaration": 3498,
                    "src": "448:11:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$3498",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53213,
                  "mutability": "mutable",
                  "name": "_tokenOracle",
                  "nameLocation": "489:12:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 53228,
                  "src": "481:20:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IOracle_$4541",
                    "typeString": "contract IOracle"
                  },
                  "typeName": {
                    "id": 53212,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53211,
                      "name": "IOracle",
                      "nameLocations": [
                        "481:7:62"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4541,
                      "src": "481:7:62"
                    },
                    "referencedDeclaration": 4541,
                    "src": "481:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOracle_$4541",
                      "typeString": "contract IOracle"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53216,
                  "mutability": "mutable",
                  "name": "_nativeAssetOracle",
                  "nameLocation": "519:18:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 53228,
                  "src": "511:26:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IOracle_$4541",
                    "typeString": "contract IOracle"
                  },
                  "typeName": {
                    "id": 53215,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53214,
                      "name": "IOracle",
                      "nameLocations": [
                        "511:7:62"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4541,
                      "src": "511:7:62"
                    },
                    "referencedDeclaration": 4541,
                    "src": "511:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOracle_$4541",
                      "typeString": "contract IOracle"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "407:136:62"
            },
            "returnParameters": {
              "id": 53226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "685:0:62"
            },
            "scope": 53266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53265,
            "nodeType": "FunctionDefinition",
            "src": "693:507:62",
            "nodes": [],
            "body": {
              "id": 53264,
              "nodeType": "Block",
              "src": "924:276:62",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 53252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 53248,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1067:3:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1071:6:62",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1067:10:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307842433443413045644137363437413861423743323036316332453131384131386139333666313344",
                              "id": 53245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1013:42:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 53244,
                            "name": "IERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50645,
                            "src": "1005:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC721_$50645_$",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 53246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1005:51:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC721_$50645",
                            "typeString": "contract IERC721"
                          }
                        },
                        "id": 53247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1057:9:62",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50570,
                        "src": "1005:61:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 53250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1005:73:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 53251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1082:1:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1005:78:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53256,
                  "nodeType": "IfStatement",
                  "src": "1001:116:62",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 53253,
                        "name": "NoBAYCFound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53204,
                        "src": "1104:11:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 53254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1104:13:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 53255,
                    "nodeType": "RevertStatement",
                    "src": "1097:20:62"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53259,
                        "name": "userOp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53231,
                        "src": "1165:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOperation_$3684_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 53260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1173:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 53261,
                        "name": "requiredPreFund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53235,
                        "src": "1177:15:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UserOperation_$3684_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53257,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1134:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BAYCPaymaster_$53266_$",
                          "typeString": "type(contract super BAYCPaymaster)"
                        }
                      },
                      "id": 53258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1140:24:62",
                      "memberName": "_validatePaymasterUserOp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54014,
                      "src": "1134:30:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UserOperation_$3684_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$",
                        "typeString": "function (struct UserOperation calldata,bytes32,uint256) returns (bytes memory,uint256)"
                      }
                    },
                    "id": 53262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:59:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(bytes memory,uint256)"
                    }
                  },
                  "functionReturnParameters": 53243,
                  "id": 53263,
                  "nodeType": "Return",
                  "src": "1127:66:62"
                }
              ]
            },
            "baseFunctions": [
              54014
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validatePaymasterUserOp",
            "nameLocation": "702:24:62",
            "overrides": {
              "id": 53238,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 53237,
                  "name": "PimlicoERC20PaymasterCustom",
                  "nameLocations": [
                    "826:27:62"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54255,
                  "src": "826:27:62"
                }
              ],
              "src": "817:37:62"
            },
            "parameters": {
              "id": 53236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53231,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "750:6:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 53265,
                  "src": "727:29:62",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3684_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 53230,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53229,
                      "name": "UserOperation",
                      "nameLocations": [
                        "727:13:62"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3684,
                      "src": "727:13:62"
                    },
                    "referencedDeclaration": 3684,
                    "src": "727:13:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3684_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53233,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53265,
                  "src": "758:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53232,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53235,
                  "mutability": "mutable",
                  "name": "requiredPreFund",
                  "nameLocation": "775:15:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 53265,
                  "src": "767:23:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "726:65:62"
            },
            "returnParameters": {
              "id": 53243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53240,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "885:7:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 53265,
                  "src": "872:20:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53239,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:5:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53242,
                  "mutability": "mutable",
                  "name": "validationResult",
                  "nameLocation": "902:16:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 53265,
                  "src": "894:24:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "871:48:62"
            },
            "scope": 53266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53201,
              "name": "PimlicoERC20PaymasterCustom",
              "nameLocations": [
                "331:27:62"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54255,
              "src": "331:27:62"
            },
            "id": 53202,
            "nodeType": "InheritanceSpecifier",
            "src": "331:27:62"
          }
        ],
        "canonicalName": "BAYCPaymaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          53266,
          54255,
          219,
          48219,
          51042,
          3552
        ],
        "name": "BAYCPaymaster",
        "nameLocation": "314:13:62",
        "scope": 53267,
        "usedErrors": [
          53204
        ]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 62
}