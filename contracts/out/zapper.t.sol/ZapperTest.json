{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenInWhale",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippage",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swap",
          "name": "params",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "_failZapAndDoSomething",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenInWhale",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippage",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swap",
          "name": "params",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "_failZapAndDoSomething_eth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenInWhale",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippage",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swap",
          "name": "swap",
          "type": "tuple"
        }
      ],
      "name": "_getSwapData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenInWhale",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippage",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swap",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "_getTokenIn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_setUpVaultAndZapper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenInWhale",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippage",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swap",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "_zapAndDoSomething",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenInWhale",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippage",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swap",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "_zapAndDoSomething_eth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_failZapAndDoSomethingERC20PlusEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_fail_zapAndDoSomething_RouterFails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_inconsistantZapAndDoSomethingEthAPE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_zapAndDoSomethingEthAPE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101a0604081905260078054600160ff199182168117909255600b8054909116909117815563350d56bf60e01b90915260206101a4526101c4526a10541157d350525393915560aa1b6101e45260008051602062005ae783398151915263350d56bf610204602060405180830381865afa15801562000082573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000a891906200059e565b6001600160a01b031660805260405163350d56bf60e01b815260206004820152600b60248201526a11105257d350525393915560aa1b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa1580156200011b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014191906200059e565b6001600160a01b031660a05260405163350d56bf60e01b815260206004820152600c60248201526b1554d110d7d350525393915560a21b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa158015620001b5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001db91906200059e565b6001600160a01b031660c05260405163350d56bf60e01b815260206004820152600c60248201526b1554d11517d350525393915560a21b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa1580156200024f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200027591906200059e565b6001600160a01b031660e05260405163350d56bf60e01b815260206004820152600c60248201526b15d1551217d350525393915560a21b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa158015620002e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200030f91906200059e565b6001600160a01b03166101005260405163350d56bf60e01b815260206004820152600b60248201526a11551217d350525393915560aa1b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa15801562000383573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003a991906200059e565b6001600160a01b03166101205260405163350d56bf60e01b815260206004820152600e60248201526d15d4d511551217d350525393915560921b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa15801562000420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200044691906200059e565b6001600160a01b03166101405260405163350d56bf60e01b815260206004820152600d60248201526c14d511551217d3505253939155609a1b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa158015620004bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004e291906200059e565b6001600160a01b03166101605260405163350d56bf60e01b815260206004820152600c60248201526b15d09510d7d350525393915560a21b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa15801562000557573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200057d91906200059e565b6001600160a01b0316610180523480156200059757600080fd5b50620005d0565b600060208284031215620005b157600080fd5b81516001600160a01b0381168114620005c957600080fd5b9392505050565b60805160a05160c05160e051610100516101205161014051610160516101805161548b6200065c6000396000505060005050600081816104c70152611b9d0152600081816103860152818161061401528181610b420152611902015260005050600050506000818161049f0152611b75015260005050600081816103ae0152610b6a015261548b6000f3fe60806040523480156200001157600080fd5b5060043610620001695760003560e01c806385226c8111620000d3578063ba414fa61162000086578063ba414fa614620002a2578063c72f4a6714620002bd578063d171493f14620002d4578063db8fd47114620002eb578063e20c9f7114620002f5578063fa7626d414620002ff57600080fd5b806385226c81146200023d5780638557b1231462000256578063916a17c61462000260578063a34d30cb146200026a578063a63ac5361462000281578063b5508aa9146200029857600080fd5b80632c747b21116200012c5780632c747b2114620001c95780633e5e3c2314620001e05780633f7286f414620001ea5780633f97255914620001f457806366d9a9a014620001fe5780636df512c4146200021757600080fd5b80630a9254e4146200016e5780631e25e048146200017a5780631ed7831c146200018457806327243b4a14620001a65780632ade388014620001b0575b600080fd5b620001786200030d565b005b620001786200035b565b6200018e62000410565b6040516200019d919062003877565b60405180910390f35b6200017862000474565b620001ba620007ef565b6040516200019d91906200391a565b62000178620001da36600462003af4565b6200093d565b6200018e62000a53565b6200018e62000ab5565b6200017862000b17565b6200020862000bbf565b6040516200019d919062003b23565b6200022e6200022836600462003bda565b62000ca9565b6040516200019d919062003c2a565b62000247620011c4565b6040516200019d919062003c3f565b620001786200129e565b620002086200139b565b620001786200027b36600462003ca5565b62001485565b620001786200029236600462003ca5565b620015cd565b62000247620016f9565b620002ac620017d3565b60405190151581526020016200019d565b62000178620002ce36600462003ca5565b62001900565b62000178620002e536600462003af4565b62001a30565b6200017862001b4a565b6200018e62001bf2565b600754620002ac9060ff1681565b6040516200031b9062003834565b604051809103906000f08015801562000338573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160e081018252731111111254eeb25477b68fb85ed929f73a96058281526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660208301527f00000000000000000000000000000000000000000000000000000000000000001691810191909152670de0b6b3a7640000606082015260016080820152600060a082015261271060c08201526200040d81671bc16d674ec8000062001a30565b50565b606060148054806020026020016040519081016040528092919081815260200182805480156200046a57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200044b575b5050505050905090565b6040805160e081018252731111111254eeb25477b68fb85ed929f73a96058281526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660208301527f00000000000000000000000000000000000000000000000000000000000000008116928201929092526359682f0060608201526000196080820152600060a08201819052606460c0830152601c5491929091620005269116808462000ca9565b90507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081805190602001201462000587576000816000815181106200056f576200056f62003cc4565b60200101906001600160f81b031916908160001a9053505b620005916200129e565b6200059c8262001900565b60208201516040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015620005e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200060e919062003cda565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031684602001516001600160a01b031614620006585760006200065e565b83606001515b90506000805160206200543683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620006ae57600080fd5b505af1158015620006c3573d6000803e3d6000fd5b5050601c546020870151604080890151895160608b0151925163185d53b560e11b81526001600160a01b0390951696506330baa76a955087946200070e9493908b9060040162003cf4565b6000604051808303818588803b1580156200072857600080fd5b505af11580156200073d573d6000803e3d6000fd5b50505060208601516040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562000790573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007b6919062003cda565b9050620007e88382146040518060400160405280600a81526020016916985c0819985a5b195960b21b81525062001c54565b5050505050565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200093457600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156200091c578382906000526020600020018054620008889062003d31565b80601f0160208091040260200160405190810160405280929190818152602001828054620008b69062003d31565b8015620009075780601f10620008db5761010080835404028352916020019162000907565b820191906000526020600020905b815481529060010190602001808311620008e957829003601f168201915b50505050508152602001906001019062000866565b50505050815250508152602001906001019062000813565b50505050905090565b601c5460009062000959906001600160a01b0316808562000ca9565b9050620009656200129e565b620009708362001900565b6000805160206200543683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620009be57600080fd5b505af1158015620009d3573d6000803e3d6000fd5b5050601c5460208601516040808801518851915163185d53b560e11b81526001600160a01b0390941695506330baa76a945062000a1a939091908890889060040162003cf4565b600060405180830381600087803b15801562000a3557600080fd5b505af115801562000a4a573d6000803e3d6000fd5b50505050505050565b606060168054806020026020016040519081016040528092919081815260200182805480156200046a576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200044b575050505050905090565b606060158054806020026020016040519081016040528092919081815260200182805480156200046a576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200044b575050505050905090565b6040805160e081018252731111111254eeb25477b68fb85ed929f73a96058281526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660208301527f00000000000000000000000000000000000000000000000000000000000000001691810191909152670de0b6b3a7640000606082015260016080820152600060a082015260c860c08201526200040d81620015cd565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620009345760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000c9057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000c515790505b5050505050815250508152602001906001019062000be3565b604080516008808252610120820190925260609160009190816020015b606081526020019060019003908162000cc6579050509050604051806040016040528060048152602001636e6f646560e01b8152508160008151811062000d115762000d1162003cc4565b60200260200101819052506040518060400160405280601f81526020017f2e2f746573742f736372697074732f67657431696e636851756f74652e6a73008152508160018151811062000d685762000d6862003cc4565b6020908102919091010152604051632b65311f60e11b81526001600160a01b038616600482015260008051602062005416833981519152906356ca623e90602401600060405180830381865afa15801562000dc7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000df1919081019062003dc4565b8160028151811062000e075762000e0762003cc4565b6020908102919091010152604051632b65311f60e11b81526001600160a01b038516600482015260008051602062005416833981519152906356ca623e90602401600060405180830381865afa15801562000e66573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000e90919081019062003dc4565b8160038151811062000ea65762000ea662003cc4565b602090810291909101810191909152830151604051632b65311f60e11b81526001600160a01b03909116600482015260008051602062005416833981519152906356ca623e90602401600060405180830381865afa15801562000f0d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000f37919081019062003dc4565b8160048151811062000f4d5762000f4d62003cc4565b60209081029190910101526040838101519051632b65311f60e11b81526001600160a01b03909116600482015260008051602062005416833981519152906356ca623e90602401600060405180830381865afa15801562000fb2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000fdc919081019062003dc4565b8160058151811062000ff25762000ff262003cc4565b6020908102919091010152606083015160405163348051d760e11b815260048101919091526000805160206200541683398151915290636900a3ae90602401600060405180830381865afa1580156200104f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001079919081019062003dc4565b816006815181106200108f576200108f62003cc4565b602090810291909101015260c083015160405163348051d760e11b815260048101919091526000805160206200541683398151915290636900a3ae90602401600060405180830381865afa158015620010ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001116919081019062003dc4565b816007815181106200112c576200112c62003cc4565b6020908102919091010152604051638916046760e01b815260009060008051602062005416833981519152906389160467906200116e90859060040162003c3f565b6000604051808303816000875af11580156200118e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620011b8919081019062003dc4565b925050505b9392505050565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620009345783829060005260206000200180546200120a9062003d31565b80601f0160208091040260200160405190810160405280929190818152602001828054620012389062003d31565b8015620012895780601f106200125d5761010080835404028352916020019162001289565b820191906000526020600020905b8154815290600101906020018083116200126b57829003601f168201915b505050505081526020019060010190620011e8565b601c54604051634f378fb360e11b8152731111111254eeb25477b68fb85ed929f73a96058260048201526001600160a01b0390911690639e6f1f6690602401602060405180830381865afa158015620012fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001321919062003e12565b6200139957601c5460405162fd2eab60e11b8152731111111254eeb25477b68fb85ed929f73a96058260048201526001600160a01b03909116906301fa5d5690602401600060405180830381600087803b1580156200137f57600080fd5b505af115801562001394573d6000803e3d6000fd5b505050505b565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620009345760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200146c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200142d5790505b50505050508152505081526020019060010190620013bf565b601c54600090620014a1906001600160a01b0316808462000ca9565b9050620014ad6200129e565b620014b88262001900565b805160208201207f3a2db9fe7908dcc36d81824d2338fc3f1aff49ac357dd8c4840527fba27a5b90016200154e576000805160206200543683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200153457600080fd5b505af115801562001549573d6000803e3d6000fd5b505050505b601c54602083015160408085015185516060870151925163185d53b560e11b81526001600160a01b03909516946330baa76a94620015959490939291889060040162003cf4565b600060405180830381600087803b158015620015b057600080fd5b505af1158015620015c5573d6000803e3d6000fd5b505050505050565b601c54600090620015e9906001600160a01b0316808462000ca9565b9050620015f56200129e565b620016008262001900565b805160208201207f3a2db9fe7908dcc36d81824d2338fc3f1aff49ac357dd8c4840527fba27a5b900162001696576000805160206200543683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200167c57600080fd5b505af115801562001691573d6000803e3d6000fd5b505050505b601c54606083015160208401516040808601518651915163185d53b560e11b81526001600160a01b03909516946330baa76a9493620016df939092918590899060040162003cf4565b6000604051808303818588803b15801562000a3557600080fd5b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620009345783829060005260206000200180546200173f9062003d31565b80601f01602080910402602001604051908101604052809291908181526020018280546200176d9062003d31565b8015620017be5780601f106200179257610100808354040283529160200191620017be565b820191906000526020600020905b815481529060010190602001808311620017a057829003601f168201915b5050505050815260200190600101906200171d565b600754600090610100900460ff1615620017f65750600754610100900460ff1690565b6000600080516020620054168339815191523b15620018fb576040805160008051602062005416833981519152602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916200187d917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162003e36565b60408051601f1981840301815290829052620018999162003e69565b6000604051808303816000865af19150503d8060008114620018d8576040519150601f19603f3d011682016040523d82523d6000602084013e620018dd565b606091505b5091505080806020019051810190620018f7919062003e12565b9150505b919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681602001516001600160a01b03161462001a1b5760a08101516001600160a01b031662001971576200196b816020015130683635c9adc5dea0000062001ca2565b620019fb565b60a081015160405163ca669fa760e01b81526001600160a01b039091166004820152600080516020620054168339815191529063ca669fa790602401600060405180830381600087803b158015620019c857600080fd5b505af1158015620019dd573d6000803e3d6000fd5b50505050620019fb816020015130683635c9adc5dea0000062001cb6565b6020810151601c5462001a1b91906001600160a01b031660001962001d1b565b6200040d30683635c9adc5dea0000062001db1565b601c5460009062001a4c906001600160a01b0316808562000ca9565b905062001a586200129e565b62001a638362001900565b6000805160206200543683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001ab157600080fd5b505af115801562001ac6573d6000803e3d6000fd5b5050601c546020860151604080880151885160608a0151925163185d53b560e11b81526001600160a01b0390951696506330baa76a9550889462001b11949390899060040162003cf4565b6000604051808303818588803b15801562001b2b57600080fd5b505af115801562001b40573d6000803e3d6000fd5b5050505050505050565b6040805160e081018252731111111254eeb25477b68fb85ed929f73a96058281526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660208301527f000000000000000000000000000000000000000000000000000000000000000016918101919091526359682f006060820181905260016080830152600060a0830152601e60c08301526200040d90829062001a30565b606060138054806020026020016040519081016040528092919081815260200182805480156200046a576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200044b575050505050905090565b8162001c9e577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405162001c8b919062003e87565b60405180910390a162001c9e8262001df4565b5050565b62001cb1838383600062001e6c565b505050565b6040516001600160a01b03831660248201526044810182905262001cb190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915262002067565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905262001d6e848262002147565b62001394576040516001600160a01b03841660248201526000604482015262001da590859063095ea7b360e01b9060640162001ce3565b62001394848262002067565b60405163c88a5e6d60e01b81526001600160a01b038316600482015260248101829052600080516020620054168339815191529063c88a5e6d9060440162001595565b806200040d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001e5a9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200040d620021f9565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162001ec29162003e69565b600060405180830381855afa9150503d806000811462001eff576040519150601f19603f3d011682016040523d82523d6000602084013e62001f04565b606091505b5091505060008180602001905181019062001f20919062003cda565b905062001f5a8462001f538762001f4c6370a0823160e01b62001f45600c8d620022fd565b9062002323565b9062002341565b906200236a565b8215620015c55760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162001fa5919062003e69565b600060405180830381855afa9150503d806000811462001fe2576040519150601f19603f3d011682016040523d82523d6000602084013e62001fe7565b606091505b5091505060008180602001905181019062002003919062003cda565b9050828610156200202e576200201a868462003ece565b62002026908262003ece565b905062002049565b6200203a838762003ece565b62002046908262003ee4565b90505b62001b408162001f536318160ddd60e01b62001f45600c8d620022fd565b6000620020be826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620023769092919063ffffffff16565b9050805160001480620020e2575080806020019051810190620020e2919062003e12565b62001cb15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b6000806000846001600160a01b03168460405162002166919062003e69565b6000604051808303816000865af19150503d8060008114620021a5576040519150601f19603f3d011682016040523d82523d6000602084013e620021aa565b606091505b5091509150818015620021d8575080511580620021d8575080806020019051810190620021d8919062003e12565b8015620021ee57506001600160a01b0385163b15155b925050505b92915050565b600080516020620054168339815191523b15620022ec5760405160009060008051602062005416833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620022679083906519985a5b195960d21b9060019060200162003efa565b60408051601f198184030181529082905262002287929160200162003e36565b60408051601f1981840301815290829052620022a39162003e69565b6000604051808303816000865af19150503d8060008114620022e2576040519150601f19603f3d011682016040523d82523d6000602084013e620022e7565b606091505b505050505b6007805461ff001916610100179055565b6005820180546001600160a01b0319166001600160a01b038316179055600082620011bd565b60038201805463ffffffff191660e083901c179055600082620011bd565b6002820180546001810182556000918252602082206001600160a01b03841691015582620011bd565b62001c9e82826200238f565b6060620023878484600085620026fd565b949350505050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200240257602002820191906000526020600020905b815481526020019060010190808311620023ed575b505050505090506000836200241783620027e0565b6040516020016200242a92919062003e36565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916200247e91869188910162003f1b565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620024b957620024b78762002894565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620024fa91879189910162003f1b565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162002541919062003e69565b600060405180830381855afa9150503d80600081146200257e576040519150601f19603f3d011682016040523d82523d6000602084013e62002583565b606091505b509150620025a09050816200259a88602062003f57565b620028a1565b604051630667f9d760e41b81526001600160a01b038a1660048201526024810185905290925060009150600080516020620054168339815191529063667f9d7090604401602060405180830381865afa15801562002602573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002628919062003cda565b90508082146200264c5760405162461bcd60e51b81526004016200213e9062003f71565b6040516370ca10bb60e01b815260008051602062005416833981519152906370ca10bb9062002684908b9087908e9060040162003efa565b600060405180830381600087803b1580156200269f57600080fd5b505af1158015620026b4573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055620026e960028b01600062003842565b896004016000905550505050505050505050565b606082471015620027605760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200213e565b600080866001600160a01b031685876040516200277e919062003e69565b60006040518083038185875af1925050503d8060008114620027bd576040519150601f19603f3d011682016040523d82523d6000602084013e620027c2565b606091505b5091509150620027d5878383876200292b565b979650505050505050565b6060600082516020620027f4919062003f57565b67ffffffffffffffff8111156200280f576200280f620039e0565b6040519080825280601f01601f1916602001820160405280156200283a576020820181803683370190505b50905060005b83518110156200288d57600084828151811062002861576200286162003cc4565b60200260200101519050808260200260200184015250808062002884906200400c565b91505062002840565b5092915050565b6000620021f382620029ab565b60008060006020855111620028b8578451620028bb565b60205b905060005b818110156200292157620028d681600862003f57565b86620028e3838862003ee4565b81518110620028f657620028f662003cc4565b01602001516001600160f81b031916901c92909217918062002918816200400c565b915050620028c0565b5090949350505050565b606083156200299f57825160000362002997576001600160a01b0385163b620029975760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200213e565b508162002387565b620023878383620036da565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801562002a1d57602002820191906000526020600020905b81548152602001906001019080831162002a08575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935062002a699250859187910162003f1b565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562002b08576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162002ad891859187910162003f1b565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008362002b168362003707565b60405160200162002b2992919062003e36565b60405160208183030381529060405290506000805160206200543683398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002b8857600080fd5b505af115801562002b9d573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162002bbe919062003e69565b600060405180830381855afa9150503d806000811462002bfb576040519150601f19603f3d011682016040523d82523d6000602084013e62002c00565b606091505b50915062002c1d90508162002c1787602062003f57565b620037b4565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062005416833981519152906365bc9481906024016000604051808303816000875af115801562002c7a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002ca49190810190620040a6565b509050805160010362002f855760006000805160206200543683398151915260001c6001600160a01b031663667f9d70898460008151811062002ceb5762002ceb62003cc4565b60200260200101516040518363ffffffff1660e01b815260040162002d259291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa15801562002d43573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d69919062003cda565b90508062002dd4577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062002da95762002da962003cc4565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b80831462002df65760405162461bcd60e51b81526004016200213e9062003f71565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162002e2e92919062003f1b565b604051602081830303815290604052805190602001208560008151811062002e5a5762002e5a62003cc4565b602002602001015160001c60405162002e77949392919062004111565b60405180910390a18160008151811062002e955762002e9562003cc4565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262002ee0918a918c910162003f1b565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162002f4a918a918c910162003f1b565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff1916911515919091179055506200355d565b600181511115620034ec5760005b8151811015620034e55760006000805160206200543683398151915260001c6001600160a01b031663667f9d708a85858151811062002fd65762002fd662003cc4565b60200260200101516040518363ffffffff1660e01b8152600401620030109291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156200302e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003054919062003cda565b905080620030be577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062003093576200309362003cc4565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b838114620030cd5750620034d0565b825181199060008051602062005416833981519152906370ca10bb908c9087908790811062003100576200310062003cc4565b6020026020010151846040518463ffffffff1660e01b8152600401620031299392919062003efa565b600060405180830381600087803b1580156200314457600080fd5b505af115801562003159573d6000803e3d6000fd5b50505050600060608b6001600160a01b0316886040516200317b919062003e69565b600060405180830381855afa9150503d8060008114620031b8576040519150601f19603f3d011682016040523d82523d6000602084013e620031bd565b606091505b509092509050620031d58162002c178c602062003f57565b965050808015620031e557508186145b1562003438577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200322392919062003f1b565b604051602081830303815290604052805190602001208888815181106200324e576200324e62003cc4565b602002602001015160001c6040516200326b949392919062004111565b60405180910390a184848151811062003288576200328862003cc4565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092620032d3918d918f910162003f1b565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200336092919062003f1b565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206200543683398151915260001c6001600160a01b03166370ca10bb8c878781518110620033d257620033d262003cc4565b6020026020010151866040518463ffffffff1660e01b8152600401620033fb9392919062003efa565b600060405180830381600087803b1580156200341657600080fd5b505af11580156200342b573d6000803e3d6000fd5b50505050505050620034e5565b6000805160206200543683398151915260001c6001600160a01b03166370ca10bb8c8787815181106200346f576200346f62003cc4565b6020026020010151866040518463ffffffff1660e01b8152600401620034989392919062003efa565b600060405180830381600087803b158015620034b357600080fd5b505af1158015620034c8573d6000803e3d6000fd5b505050505050505b80620034dc816200400c565b91505062002f93565b506200355d565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e60648201526084016200213e565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620035a19188918a910162003f1b565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620036305760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b60648201526084016200213e565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200366160028a01600062003842565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620036a79188918a910162003f1b565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b815115620036eb5781518083602001fd5b8060405162461bcd60e51b81526004016200213e919062003c2a565b60606000825160206200371b919062003f57565b67ffffffffffffffff811115620037365762003736620039e0565b6040519080825280601f01601f19166020018201604052801562003761576020820181803683370190505b50905060005b83518110156200288d57600084828151811062003788576200378862003cc4565b602002602001015190508082602002602001840152508080620037ab906200400c565b91505062003767565b60008060006020855111620037cb578451620037ce565b60205b905060005b818110156200292157620037e981600862003f57565b86620037f6838862003ee4565b8151811062003809576200380962003cc4565b01602001516001600160f81b031916901c9290921791806200382b816200400c565b915050620037d3565b6112d4806200414283390190565b50805460008255906000526020600020908101906200040d91905b808211156200387357600081556001016200385d565b5090565b6020808252825182820181905260009190848201906040850190845b81811015620038ba5783516001600160a01b03168352928401929184019160010162003893565b50909695505050505050565b60005b83811015620038e3578181015183820152602001620038c9565b50506000910152565b6000815180845262003906816020860160208601620038c6565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015620039d057603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015620039b957605f19898503018352620039a6848651620038ec565b948e01949350918d019160010162003987565b505050978a01979450509188019160010162003941565b50919a9950505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171562003a225762003a22620039e0565b604052919050565b6001600160a01b03811681146200040d57600080fd5b600060e0828403121562003a5357600080fd5b60405160e0810181811067ffffffffffffffff8211171562003a795762003a79620039e0565b604052905080823562003a8c8162003a2a565b8152602083013562003a9e8162003a2a565b6020820152604083013562003ab38162003a2a565b80604083015250606083013560608201526080830135608082015260a083013562003ade8162003a2a565b60a082015260c092830135920191909152919050565b600080610100838503121562003b0957600080fd5b62003b15848462003a40565b9460e0939093013593505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562003bcb57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562003bb55783516001600160e01b0319168252928b019260019290920191908b019062003b89565b50978a0197955050509187019160010162003b4b565b50919998505050505050505050565b6000806000610120848603121562003bf157600080fd5b833562003bfe8162003a2a565b9250602084013562003c108162003a2a565b915062003c21856040860162003a40565b90509250925092565b602081526000620011bd6020830184620038ec565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562003c9857603f1988860301845262003c85858351620038ec565b9450928501929085019060010162003c66565b5092979650505050505050565b600060e0828403121562003cb857600080fd5b620011bd838362003a40565b634e487b7160e01b600052603260045260246000fd5b60006020828403121562003ced57600080fd5b5051919050565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a060808201819052600090620027d590830184620038ec565b600181811c9082168062003d4657607f821691505b60208210810362003d6757634e487b7160e01b600052602260045260246000fd5b50919050565b600067ffffffffffffffff83111562003d8a5762003d8a620039e0565b62003d9f601f8401601f1916602001620039f6565b905082815283838301111562003db457600080fd5b620011bd836020830184620038c6565b60006020828403121562003dd757600080fd5b815167ffffffffffffffff81111562003def57600080fd5b8201601f8101841362003e0157600080fd5b620023878482516020840162003d6d565b60006020828403121562003e2557600080fd5b81518015158114620011bd57600080fd5b6001600160e01b031983168152815160009062003e5b816004850160208701620038c6565b919091016004019392505050565b6000825162003e7d818460208701620038c6565b9190910192915050565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620011bd6080830184620038ec565b634e487b7160e01b600052601160045260246000fd5b81810381811115620021f357620021f362003eb8565b80820180821115620021f357620021f362003eb8565b6001600160a01b039390931683526020830191909152604082015260600190565b825160009082906020808701845b8381101562003f475781518552938201939082019060010162003f29565b5050948252509092019392505050565b8082028115828204841417620021f357620021f362003eb8565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b60006001820162004021576200402162003eb8565b5060010190565b600082601f8301126200403a57600080fd5b8151602067ffffffffffffffff821115620040595762004059620039e0565b8160051b6200406a828201620039f6565b92835284810182019282810190878511156200408557600080fd5b83870192505b84831015620027d5578251825291830191908301906200408b565b60008060408385031215620040ba57600080fd5b825167ffffffffffffffff80821115620040d357600080fd5b620040e18683870162004028565b93506020850151915080821115620040f857600080fd5b50620041078582860162004028565b9150509250929050565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe608060405234801561001057600080fd5b5061001a3361002c565b6001805460ff60a01b19169055610098565b600180546001600160a01b031916905561004581610048565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61122d806100a76000396000f3fe6080604052600436106100dd5760003560e01c80638456cb591161007f5780639e6f1f66116100595780639e6f1f6614610202578063ba72467e14610232578063e30c397814610252578063f2fde38b1461027057600080fd5b80638456cb591461019b57806389476069146101b05780638da5cb5b146101d057600080fd5b80635a18664c116100bb5780635a18664c1461012c5780635c975abb14610141578063715018a61461017157806379ba50971461018657600080fd5b806301fa5d56146100e257806330baa76a146101045780633f4ba83a14610117575b600080fd5b3480156100ee57600080fd5b506101026100fd366004611018565b610290565b005b61010261011236600461103c565b6102fd565b34801561012357600080fd5b50610102610610565b34801561013857600080fd5b50610102610622565b34801561014d57600080fd5b50600154600160a01b900460ff165b60405190151581526020015b60405180910390f35b34801561017d57600080fd5b50610102610659565b34801561019257600080fd5b5061010261066b565b3480156101a757600080fd5b506101026106e2565b3480156101bc57600080fd5b506101026101cb366004611018565b6106f2565b3480156101dc57600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610168565b34801561020e57600080fd5b5061015c61021d366004611018565b60026020526000908152604090205460ff1681565b34801561023e57600080fd5b5061010261024d3660046110ef565b610777565b34801561025e57600080fd5b506001546001600160a01b03166101ea565b34801561027c57600080fd5b5061010261028b366004611018565b6107d9565b61029861084a565b6001600160a01b038116600081815260026020908152604091829020805460ff81161560ff19909116811790915591518281529192917fd166590f22562bbdf8cfae03171c96fab89b02f3a8705085704575bb3b795cbd910160405180910390a25050565b6001600160a01b038416600090815260026020526040902054849060ff1661034857604051632462ed0960e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6103506108a4565b6000346000036103d4576040516370a0823160e01b81523060048201526001600160a01b038916906370a0823190602401602060405180830381865afa15801561039e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c29190611128565b90506103cf8689876108f1565b6103e1565b6103de3447611141565b90505b6104218685858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109a692505050565b50600034156104305747610498565b6040516370a0823160e01b81523060048201526001600160a01b038a16906370a0823190602401602060405180830381865afa158015610474573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104989190611128565b9050818111156104c557604051632db0390560e11b8152600481018390526024810182905260440161033f565b604080516001600160a01b038b81168252602082018990528916917fa27f1074fd34efb689b30aa48038ffeeae6b037d38b805f48b4b02047efa3ac3910160405180910390a26040516370a0823160e01b81523060048201526001600160a01b038916906370a0823190602401602060405180830381865afa15801561054f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105739190611128565b600003610605576040516370a0823160e01b81523060048201526001600160a01b038916906370a0823190602401602060405180830381865afa1580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e29190611128565b6040516327a64d3760e01b8152600481019190915247602482015260440161033f565b505050505050505050565b61061861084a565b610620610a76565b565b61062a61084a565b60405133904780156108fc02916000818181858888f19350505050158015610656573d6000803e3d6000fd5b50565b61066161084a565b6106206000610acb565b60015433906001600160a01b031681146106d95760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b606482015260840161033f565b61065681610acb565b6106ea61084a565b610620610ae4565b6106fa61084a565b610656336040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610742573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107669190611128565b6001600160a01b0384169190610b27565b61077f61084a565b6107956001600160a01b03831682600019610b8a565b816001600160a01b0316816001600160a01b03167fd6e8a8fc052939c88e845bbe596b2de2a07139e2fdeeed39548f594b82caaef060405160405180910390a35050565b6107e161084a565b600180546001600160a01b0383166001600160a01b031990911681179091556108126000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6000546001600160a01b031633146106205760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161033f565b600154600160a01b900460ff16156106205760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161033f565b6109066001600160a01b038316333084610c1f565b806001600160a01b03831663dd62ed3e336040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529087166024820152604401602060405180830381865afa158015610963573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109879190611128565b10156109a1576109a16001600160a01b0383168483610b8a565b505050565b6060600080846001600160a01b031634856040516109c49190611186565b60006040518083038185875af1925050503d8060008114610a01576040519150601f19603f3d011682016040523d82523d6000602084013e610a06565b606091505b509150915081610a6c57835115610a325780604051634ecb9b6d60e01b815260040161033f91906111a2565b604051634ecb9b6d60e01b815260206004820152600e60248201526d2ab735b737bbb7103932b0b9b7b760911b604482015260640161033f565b9150505b92915050565b610a7e610c57565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600180546001600160a01b031916905561065681610ca7565b610aec6108a4565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610aae3390565b6040516001600160a01b0383166024820152604481018290526109a190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610cf7565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610bdb8482610dcc565b610c19576040516001600160a01b038416602482015260006044820152610c0f90859063095ea7b360e01b90606401610b53565b610c198482610cf7565b50505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610c199085906323b872dd60e01b90608401610b53565b600154600160a01b900460ff166106205760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161033f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610d4c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e739092919063ffffffff16565b9050805160001480610d6d575080806020019051810190610d6d91906111d5565b6109a15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161033f565b6000806000846001600160a01b031684604051610de99190611186565b6000604051808303816000865af19150503d8060008114610e26576040519150601f19603f3d011682016040523d82523d6000602084013e610e2b565b606091505b5091509150818015610e55575080511580610e55575080806020019051810190610e5591906111d5565b8015610e6a57506001600160a01b0385163b15155b95945050505050565b6060610e828484600085610e8a565b949350505050565b606082471015610eeb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161033f565b600080866001600160a01b03168587604051610f079190611186565b60006040518083038185875af1925050503d8060008114610f44576040519150601f19603f3d011682016040523d82523d6000602084013e610f49565b606091505b5091509150610f5a87838387610f65565b979650505050505050565b60608315610fd4578251600003610fcd576001600160a01b0385163b610fcd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161033f565b5081610e82565b610e828383815115610fe95781518083602001fd5b8060405162461bcd60e51b815260040161033f91906111a2565b6001600160a01b038116811461065657600080fd5b60006020828403121561102a57600080fd5b813561103581611003565b9392505050565b60008060008060008060a0878903121561105557600080fd5b863561106081611003565b9550602087013561107081611003565b9450604087013561108081611003565b935060608701359250608087013567ffffffffffffffff808211156110a457600080fd5b818901915089601f8301126110b857600080fd5b8135818111156110c757600080fd5b8a60208285010111156110d957600080fd5b6020830194508093505050509295509295509295565b6000806040838503121561110257600080fd5b823561110d81611003565b9150602083013561111d81611003565b809150509250929050565b60006020828403121561113a57600080fd5b5051919050565b81810381811115610a7057634e487b7160e01b600052601160045260246000fd5b60005b8381101561117d578181015183820152602001611165565b50506000910152565b60008251611198818460208701611162565b9190910192915050565b60208152600082518060208401526111c1816040850160208701611162565b601f01601f19169190910160400192915050565b6000602082840312156111e757600080fd5b8151801515811461103557600080fdfea26469706673582212208beace2cd8104dd9ae4c6f3387086d4e888155150fdce8d4f8b325534067445e64736f6c634300081300330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220e8abb5b1a756fba80f34ec120564e398921fc9583c3d145fda39648f5bfac5b864736f6c634300081300330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d",
    "sourceMap": "3160:4808:66:-:0;;;;;1572:26:17;;;1594:4;-1:-1:-1;;1572:26:17;;;;;;;;3126:44:21;;;;;;;;;;;-1:-1:-1;;;547:28:66;;;216:2:67;547:28:66;198:21:67;235:18;228:30;-1:-1:-1;;;274:18:67;267:41;-1:-1:-1;;;;;;;;;;;547:13:66;325:18:67;547:28:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;509:67:66;;;620:28;;-1:-1:-1;;;620:28:66;;851:2:67;620:28:66;;;833:21:67;890:2;870:18;;;863:30;-1:-1:-1;;;909:18:67;;;902:41;-1:-1:-1;;;;;;;;;;;620:13:66;;;960:18:67;;620:28:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;582:67:66;;;694:29;;-1:-1:-1;;;694:29:66;;1191:2:67;694:29:66;;;1173:21:67;1230:2;1210:18;;;1203:30;-1:-1:-1;;;1249:18:67;;;1242:42;-1:-1:-1;;;;;;;;;;;694:13:66;;;1301:18:67;;694:29:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;655:69:66;;;769:29;;-1:-1:-1;;;769:29:66;;1532:2:67;769:29:66;;;1514:21:67;1571:2;1551:18;;;1544:30;-1:-1:-1;;;1590:18:67;;;1583:42;-1:-1:-1;;;;;;;;;;;769:13:66;;;1642:18:67;;769:29:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;730:69:66;;;844:29;;-1:-1:-1;;;844:29:66;;1873:2:67;844:29:66;;;1855:21:67;1912:2;1892:18;;;1885:30;-1:-1:-1;;;1931:18:67;;;1924:42;-1:-1:-1;;;;;;;;;;;844:13:66;;;1983:18:67;;844:29:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;805:69:66;;;918:28;;-1:-1:-1;;;918:28:66;;2214:2:67;918:28:66;;;2196:21:67;2253:2;2233:18;;;2226:30;-1:-1:-1;;;2272:18:67;;;2265:41;-1:-1:-1;;;;;;;;;;;918:13:66;;;2323:18:67;;918:28:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;880:67:66;;;994:31;;-1:-1:-1;;;994:31:66;;2554:2:67;994:31:66;;;2536:21:67;2593:2;2573:18;;;2566:30;-1:-1:-1;;;2612:18:67;;;2605:44;-1:-1:-1;;;;;;;;;;;994:13:66;;;2666:18:67;;994:31:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;953:73:66;;;1072:30;;-1:-1:-1;;;1072:30:66;;2897:2:67;1072:30:66;;;2879:21:67;2936:2;2916:18;;;2909:30;-1:-1:-1;;;2955:18:67;;;2948:43;-1:-1:-1;;;;;;;;;;;1072:13:66;;;3008:18:67;;1072:30:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1032:71:66;;;1148:29;;-1:-1:-1;;;1148:29:66;;3239:2:67;1148:29:66;;;3221:21:67;3278:2;3258:18;;;3251:30;-1:-1:-1;;;3297:18:67;;;3290:42;-1:-1:-1;;;;;;;;;;;1148:13:66;;;3349:18:67;;1148:29:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1109:69:66;;;3160:4808;;;;;;;;;;;;354:290:67;424:6;477:2;465:9;456:7;452:23;448:32;445:52;;;493:1;490;483:12;445:52;519:16;;-1:-1:-1;;;;;564:31:67;;554:42;;544:70;;610:1;607;600:12;544:70;633:5;354:290;-1:-1:-1;;;354:290:67:o;3037:336::-;3160:4808:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "3160:4808:66:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3366:62;;;:::i;:::-;;3879:242;;;:::i;2452:134:24:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6031:1087:66;;;:::i;3360:151:24:-;;;:::i;:::-;;;;;;;:::i;4605:440:66:-;;;;;;:::i;:::-;;:::i;3221:133:24:-;;;:::i;2922:141::-;;;:::i;3675:198:66:-;;;:::i;2738:178:24:-;;;:::i;:::-;;;;;;;:::i;1207:604:66:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2592:140:24:-;;;:::i;:::-;;;;;;;:::i;7124:233:66:-;;;:::i;3069:146:24:-;;;:::i;4127:472:66:-;;;;;;:::i;:::-;;:::i;5051:501::-;;;;;;:::i;:::-;;:::i;2157:141:24:-;;;:::i;1819:584:17:-;;;:::i;:::-;;;8406:14:67;;8399:22;8381:41;;8369:2;8354:18;1819:584:17;8241:187:67;7363:603:66;;;;;;:::i;:::-;;:::i;5558:467::-;;;;;;:::i;:::-;;:::i;3434:235::-;;;:::i;2304:142:24:-;;;:::i;1572:26:17:-;;;;;;;;;3366:62:66;3409:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3400:6:66;:21;;-1:-1:-1;;;;;;3400:21:66;-1:-1:-1;;;;;3400:21:66;;;;;;;;;;3366:62::o;3879:242::-;3971:91;;;;;;;;460:42;3971:91;;-1:-1:-1;;;;;4005:4:66;3971:91;;;;;;4019:4;3971:91;;;;;;;;4026:4;3971:91;;;;4032:1;3971:91;;;;-1:-1:-1;3971:91:66;;;;4047:5;3971:91;;;;4072:42;3971:91;4109:4;4072:26;:42::i;:::-;3938:183;3879:242::o;2452:134:24:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:24;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;6031:1087:66:-;6120:187;;;;;;;;460:42;6120:187;;-1:-1:-1;;;;;6166:5:66;6120:187;;;;;;6193:7;6120:187;;;;;;;;;6215:10;6120:187;;;;-1:-1:-1;;6120:187:66;;;;-1:-1:-1;6120:187:66;;;;;;6294:3;6120:187;;;;6362:6;;6120:187;;-1:-1:-1;;6341:54:66;;6362:6;;6120:187;6341:12;:54::i;:::-;6317:78;;6432:16;6419:8;6409:19;;;;;;:39;6405:66;;6450:21;:8;6459:1;6450:11;;;;;;;;:::i;:::-;;;;:21;-1:-1:-1;;;;;6450:21:66;;;;;;;;;6405:66;6481:22;:20;:22::i;:::-;6513:19;6525:6;6513:11;:19::i;:::-;6597:14;;;;6582:56;;-1:-1:-1;;;6582:56:66;;6632:4;6582:56;;;8711:51:67;6542:24:66;;-1:-1:-1;;;;;6582:41:66;;;;8684:18:67;;6582:56:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6542:97;;6650:13;6691:4;-1:-1:-1;;;;;6666:30:66;:6;:14;;;-1:-1:-1;;;;;6666:30:66;;:50;;6715:1;6666:50;;;6699:6;:13;;;6666:50;6650:66;;-1:-1:-1;;;;;;;;;;;309:37:18;;-1:-1:-1;;;;;6726:15:66;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6753:6:66;;6805:14;;;;6833:15;;;;;6862:13;;6889;;;;6753:181;;-1:-1:-1;;;6753:181:66;;-1:-1:-1;;;;;6753:6:66;;;;-1:-1:-1;6753:24:66;;-1:-1:-1;6785:5:66;;6753:181;;6805:14;6889:13;6916:8;;6753:181;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6998:14:66;;;;6983:56;;-1:-1:-1;;;6983:56:66;;7033:4;6983:56;;;8711:51:67;6944:23:66;;-1:-1:-1;;;;;;6983:41:66;;;;-1:-1:-1;6983:41:66;;8684:18:67;;6983:56:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6944:96;;7050:61;7080:16;7061:15;:35;7050:61;;;;;;;;;;;;;-1:-1:-1;;;7050:61:66;;;:10;:61::i;:::-;6089:1029;;;;;6031:1087::o;3360:151:24:-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;4605:440:66:-;4747:6;;4690:21;;4726:54;;-1:-1:-1;;;;;4747:6:66;;4773;4726:12;:54::i;:::-;4690:90;;4790:22;:20;:22::i;:::-;4822:19;4834:6;4822:11;:19::i;:::-;-1:-1:-1;;;;;;;;;;;309:37:18;;-1:-1:-1;;;;;4851:15:66;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4878:6:66;;4916:14;;;;4944:15;;;;;4973:13;;4878:160;;-1:-1:-1;;;4878:160:66;;-1:-1:-1;;;;;4878:6:66;;;;-1:-1:-1;4878:24:66;;-1:-1:-1;4878:160:66;;4944:15;;4973:13;5000:6;;5020:8;;4878:160;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4680:365;4605:440;;:::o;3221:133:24:-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:24;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:24;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;3675:198:66:-;3770:51;;;;;;;;460:42;3770:51;;-1:-1:-1;;;;;3784:4:66;3770:51;;;;;;3790:4;3770:51;;;;;;;;3796:4;3770:51;;;;3802:1;3770:51;;;;-1:-1:-1;3770:51:66;;;;3817:3;3770:51;;;;3831:35;3770:51;3831:22;:35::i;2738:178:24:-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1207:604:66;1358:15;;;1371:1;1358:15;;;;;;;;;1305:12;;1333:22;;1358:15;;;;;;;;;;;;;;;;;;;;;1333:40;;1383:18;;;;;;;;;;;;;-1:-1:-1;;;1383:18:66;;;:6;1390:1;1383:9;;;;;;;;:::i;:::-;;;;;;:18;;;;1411:45;;;;;;;;;;;;;;;;;:6;1418:1;1411:9;;;;;;;;:::i;:::-;;;;;;;;;;:45;1478:17;;-1:-1:-1;;;1478:17:66;;-1:-1:-1;;;;;8729:32:67;;1478:17:66;;;8711:51:67;-1:-1:-1;;;;;;;;;;;1478:11:66;;;8684:18:67;;1478:17:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1478:17:66;;;;;;;;;;;;:::i;:::-;1466:6;1473:1;1466:9;;;;;;;;:::i;:::-;;;;;;;;;;:29;1517:15;;-1:-1:-1;;;1517:15:66;;-1:-1:-1;;;;;8729:32:67;;1517:15:66;;;8711:51:67;-1:-1:-1;;;;;;;;;;;1517:11:66;;;8684:18:67;;1517:15:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1517:15:66;;;;;;;;;;;;:::i;:::-;1505:6;1512:1;1505:9;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;;1574:12;;;1554:34;;-1:-1:-1;;;1554:34:66;;-1:-1:-1;;;;;8729:32:67;;;1554:34:66;;;8711:51:67;-1:-1:-1;;;;;;;;;;;1554:11:66;;;8684:18:67;;1554:34:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1554:34:66;;;;;;;;;;;;:::i;:::-;1542:6;1549:1;1542:9;;;;;;;;:::i;:::-;;;;;;;;;;:46;1630:13;;;;;1610:35;;-1:-1:-1;;;1610:35:66;;-1:-1:-1;;;;;8729:32:67;;;1610:35:66;;;8711:51:67;-1:-1:-1;;;;;;;;;;;1610:11:66;;;8684:18:67;;1610:35:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1610:35:66;;;;;;;;;;;;:::i;:::-;1598:6;1605:1;1598:9;;;;;;;;:::i;:::-;;;;;;;;;;:47;1679:11;;;;1667:24;;-1:-1:-1;;;1667:24:66;;;;;10960:25:67;;;;-1:-1:-1;;;;;;;;;;;1667:11:66;;;10933:18:67;;1667:24:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1667:24:66;;;;;;;;;;;;:::i;:::-;1655:6;1662:1;1655:9;;;;;;;;:::i;:::-;;;;;;;;;;:36;1725:13;;;;1713:26;;-1:-1:-1;;;1713:26:66;;;;;10960:25:67;;;;-1:-1:-1;;;;;;;;;;;1713:11:66;;;10933:18:67;;1713:26:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1713:26:66;;;;;;;;;;;;:::i;:::-;1701:6;1708:1;1701:9;;;;;;;;:::i;:::-;;;;;;;;;;:38;1769:14;;-1:-1:-1;;;1769:14:66;;1750:16;;-1:-1:-1;;;;;;;;;;;1769:6:66;;;:14;;1776:6;;1769:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1769:14:66;;;;;;;;;;;;:::i;:::-;1750:33;-1:-1:-1;;;1207:604:66;;;;;;:::o;2592:140:24:-;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7124:233:66;7194:6;;:33;;-1:-1:-1;;;7194:33:66;;460:42;7194:33;;;8711:51:67;-1:-1:-1;;;;;7194:6:66;;;;:24;;8684:18:67;;7194:33:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7189:106;;7243:6;;:41;;-1:-1:-1;;;7243:41:66;;460:42;7243:41;;;8711:51:67;-1:-1:-1;;;;;7243:6:66;;;;:32;;8684:18:67;;7243:41:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7189:106;7124:233::o;3069:146:24:-;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4127:472:66;4249:6;;4192:21;;4228:54;;-1:-1:-1;;;;;4249:6:66;;4275;4228:12;:54::i;:::-;4192:90;;4292:22;:20;:22::i;:::-;4324:19;4336:6;4324:11;:19::i;:::-;4357;;;;;;:39;;4353:62;;-1:-1:-1;;;;;;;;;;;309:37:18;;-1:-1:-1;;;;;4398:15:66;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4353:62;4425:6;;4463:14;;;;4491:15;;;;;4520:13;;4547;;;;4425:167;;-1:-1:-1;;;4425:167:66;;-1:-1:-1;;;;;4425:6:66;;;;:24;;:167;;4463:14;;4491:15;4520:13;4574:8;;4425:167;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4182:417;4127:472;:::o;5051:501::-;5177:6;;5120:21;;5156:54;;-1:-1:-1;;;;;5177:6:66;;5203;5156:12;:54::i;:::-;5120:90;;5220:22;:20;:22::i;:::-;5252:19;5264:6;5252:11;:19::i;:::-;5285;;;;;;:39;;5281:62;;-1:-1:-1;;;;;;;;;;;309:37:18;;-1:-1:-1;;;;;5326:15:66;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5281:62;5353:6;;5385:13;;;;5413:14;;;;5442:15;;;;;5472:13;;5353:192;;-1:-1:-1;;;5353:192:66;;-1:-1:-1;;;;;5353:6:66;;;;:24;;5385:13;5353:192;;5413:14;;5442:15;5385:13;;5527:8;;5353:192;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;2157:141:24;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:17;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:17;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2985:55:17;3066:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:17;;;11915:51:67;;;-1:-1:-1;;;11982:18:67;;;11975:34;2196:43:17;;;;;;;;;11888:18:67;;;2196:43:17;;;-1:-1:-1;;1671:64:17;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:17;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:17:o;7363:603:66:-;7443:4;-1:-1:-1;;;;;7425:22:66;:6;:14;;;-1:-1:-1;;;;;7425:22:66;;7421:497;;7467:19;;;;-1:-1:-1;;;;;7467:33:66;7463:319;;7520:57;7533:6;:14;;;7558:4;7565:11;7520:4;:57::i;:::-;7463:319;;;7625:19;;;;7616:29;;-1:-1:-1;;;7616:29:66;;-1:-1:-1;;;;;8729:32:67;;;7616:29:66;;;8711:51:67;-1:-1:-1;;;;;;;;;;;7616:8:66;;;8684:18:67;;7616:29:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7663:104;7707:6;:14;;;7731:4;7738:11;7663:22;:104::i;:::-;7842:14;;;;7867:6;;7795:112;;7842:14;-1:-1:-1;;;;;7867:6:66;-1:-1:-1;;7795:22:66;:112::i;:::-;7927:32;7940:4;7947:11;7927:4;:32::i;5558:467::-;5704:6;;5659:21;;5683:54;;-1:-1:-1;;;;;5704:6:66;;5730;5683:12;:54::i;:::-;5659:78;;5747:22;:20;:22::i;:::-;5779:19;5791:6;5779:11;:19::i;:::-;-1:-1:-1;;;;;;;;;;;309:37:18;;-1:-1:-1;;;;;5808:15:66;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5835:6:66;;5888:14;;;;5917:15;;;;;5946:13;;5973;;;;5835:183;;-1:-1:-1;;;5835:183:66;;-1:-1:-1;;;;;5835:6:66;;;;-1:-1:-1;5835:24:66;;-1:-1:-1;5867:6:66;;5835:183;;5888:14;5973:13;6000:8;;5835:183;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5649:376;5558:467;;:::o;3434:235::-;3540:60;;;;;;;;460:42;3540:60;;-1:-1:-1;;;;;3554:5:66;3540:60;;;;;;3561:7;3540:60;;;;;;;;3570:10;3540:60;;;;;;3582:1;3540:60;;;;-1:-1:-1;3540:60:66;;;;3597:2;3540:60;;;;3610:52;;3540:60;;3610:26;:52::i;2304:142:24:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:24;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;3425:191:17:-;3504:9;3499:111;;3534:30;3560:3;3534:30;;;;;;:::i;:::-;;;;;;;;3578:21;3589:9;3578:10;:21::i;:::-;3425:191;;:::o;26925:117:22:-;27007:28;27012:5;27019:2;27023:4;27029:5;27007:4;:28::i;:::-;26925:117;;;:::o;941:175:45:-;1050:58;;-1:-1:-1;;;;;11933:32:67;;1050:58:45;;;11915:51:67;11982:18;;;11975:34;;;1023:86:45;;1043:5;;-1:-1:-1;;;1073:23:45;11888:18:67;;1050:58:45;;;;-1:-1:-1;;1050:58:45;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:45;-1:-1:-1;;;;;;1050:58:45;;;;;;;;;;1023:19;:86::i;3779:410::-;3894:62;;;-1:-1:-1;;;;;11933:32:67;;3894:62:45;;;11915:51:67;11982:18;;;;11975:34;;;3894:62:45;;;;;;;;;;11888:18:67;;;;3894:62:45;;;;;;;;-1:-1:-1;;;;;3894:62:45;-1:-1:-1;;;3894:62:45;;;3972:44;3996:5;3894:62;3972:23;:44::i;:::-;3967:216;;4059:58;;-1:-1:-1;;;;;13629:32:67;;4059:58:45;;;13611:51:67;4115:1:45;13678:18:67;;;13671:45;4032:86:45;;4052:5;;-1:-1:-1;;;4082:22:45;13584:18:67;;4059:58:45;13431:291:67;4032:86:45;4132:40;4152:5;4159:12;4132:19;:40::i;26710:91:22:-;26777:17;;-1:-1:-1;;;26777:17:22;;-1:-1:-1;;;;;11933:32:67;;26777:17:22;;;11915:51:67;11982:18;;;11975:34;;;-1:-1:-1;;;;;;;;;;;26777:7:22;;;11888:18:67;;26777:17:22;11741:274:67;3262:157:17;3322:9;3317:96;;3352:30;;;;;13929:2:67;13911:21;;;13968:2;13948:18;;;13941:30;14007:25;14002:2;13987:18;;13980:53;14065:2;14050:18;;13727:347;3352:30:17;;;;;;;;3396:6;:4;:6::i;27321:837:22:-;27491:38;;;-1:-1:-1;;;;;8729:32:67;;;27491:38:22;;;;8711:51:67;;;;27491:38:22;;;;;;;;;;8684:18:67;;;;27491:38:22;;;;;;;-1:-1:-1;;;;;27491:38:22;-1:-1:-1;;;27491:38:22;;;27474:56;;27450:20;;27474:16;;;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27447:83;;;27540:15;27569:7;27558:30;;;;;;;;;;;;:::i;:::-;27540:48;-1:-1:-1;27625:71:22;27691:4;27625:51;27673:2;27625:38;-1:-1:-1;;;27625:22:22;:8;27641:5;27625:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;27742:6;27738:414;;;27811:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27811:34:22;-1:-1:-1;;;27811:34:22;;;27794:52;;27767:23;;-1:-1:-1;;;;;27794:16:22;;;:52;;27811:34;27794:52;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27764:82;;;27860:14;27888:10;27877:33;;;;;;;;;;;;:::i;:::-;27860:50;;27935:7;27928:4;:14;27924:144;;;27973:14;27983:4;27973:7;:14;:::i;:::-;27962:26;;;;:::i;:::-;;;27924:144;;;28038:14;28045:7;28038:4;:14;:::i;:::-;28027:26;;;;:::i;:::-;;;27924:144;28081:60;28134:6;28081:38;-1:-1:-1;;;28081:22:22;:8;28097:5;28081:15;:22::i;5196:642:45:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:45;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:45;;14676:2:67;5720:111:45;;;14658:21:67;14715:2;14695:18;;;14688:30;14754:34;14734:18;;;14727:62;-1:-1:-1;;;14805:18:67;;;14798:40;14855:19;;5720:111:45;;;;;;;;6339:594;6422:4;6724:12;6738:23;6773:5;-1:-1:-1;;;;;6765:19:45;6785:4;6765:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6723:67;;;;6819:7;:69;;;;-1:-1:-1;6831:17:45;;:22;;:56;;;6868:10;6857:30;;;;;;;;;;;;:::i;:::-;6819:107;;;;-1:-1:-1;;;;;;1702:19:50;;;:23;;6892:34:45;6800:126;;;;6339:594;;;;;:::o;2409:432:17:-;-1:-1:-1;;;;;;;;;;;2985:55:17;3066:16;2452:359;;2652:67;;2489:11;;-1:-1:-1;;;;;;;;;;;1671:64:17;2586:43;;2652:67;;1671:64;;-1:-1:-1;;;2677:17:17;2712:4;;2652:67;;;:::i;:::-;;;;-1:-1:-1;;2652:67:17;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:17;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:17;2820:7;:14;;-1:-1:-1;;2820:14:17;;;;;2409:432::o;9231:156:27:-;4680:12;;;:22;;-1:-1:-1;;;;;;4680:22:27;-1:-1:-1;;;;;4680:22:27;;;;;-1:-1:-1;4680:12:27;9344:36;4574:156;9393:143;4835:9;;;:16;;-1:-1:-1;;4835:16:27;;;;;;;;-1:-1:-1;4835:9:27;9499:30;4736:143;9698:152;5151:10;;;:47;;;;;;;9772:18;5151:47;;;;;;-1:-1:-1;;;;;5175:21:27;;5151:47;;;9833:4;9809:34;5047:179;10474:120;10554:33;10568:4;10582:3;10554:13;:33::i;4108:223:50:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:50:o;10966:1095:27:-;11060:12;;;;11096:9;;;;11137:11;;;;11181:10;;;11158:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11060:12:27;;;;11096:9;;;;;;11046:11;;11158:33;;11181:10;;11158:33;;11181:10;11158:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11202:17;11239:4;11245:12;11253:3;11245:7;:12::i;:::-;11222:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11222:36:27;;;;;;;;;-1:-1:-1;;;;;11273:15:27;;;;;;:10;;;11222:36;11273:15;;;;;;-1:-1:-1;;;;;;11273:21:27;;;;;;;;;11222:36;;-1:-1:-1;11273:21:27;;:15;;11305:34;;11322:3;;11327:11;;11305:34;;:::i;:::-;;;;-1:-1:-1;;11305:34:27;;;;;;;;;11295:45;;11305:34;11295:45;;;;11273:68;;;;;;;;;;-1:-1:-1;11273:68:27;;;;11268:110;;11357:10;11362:4;11357;:10::i;:::-;;11268:110;-1:-1:-1;;;;;11410:15:27;;11387:12;11410:15;;;;;;;;;;;-1:-1:-1;;;;;;11410:21:27;;;;;;;;;11442:34;;11410:21;;11387:12;;11442:34;;11459:3;;11464:11;;11442:34;;:::i;:::-;;;;;;;;;;;;;11432:45;;;;;;11410:68;;;;;;;;;;;;11402:77;;11387:92;;11490:12;11529:17;11550:3;-1:-1:-1;;;;;11550:14:27;11565:4;11550:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11526:44:27;-1:-1:-1;11591:38:27;;-1:-1:-1;11526:44:27;11612:16;11617:11;11612:2;:16;:::i;:::-;11591:14;:38::i;:::-;11664:18;;-1:-1:-1;;;11664:18:27;;-1:-1:-1;;;;;11933:32:67;;11664:18:27;;;11915:51:67;11982:18;;;11975:34;;;11584:45:27;;-1:-1:-1;11649:12:27;;-1:-1:-1;;;;;;;;;;;;11664:7:27;;;11888:18:67;;11664::27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11649:33;;11705:4;11697;:12;11693:218;;11725:175;;-1:-1:-1;;;11725:175:27;;;;;;;:::i;:::-;11920:24;;-1:-1:-1;;;11920:24:27;;-1:-1:-1;;;;;;;;;;;11920:8:27;;;:24;;11929:3;;11934:4;;11940:3;;11920:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11961:12:27;;;11954:19;;-1:-1:-1;;;;;;11954:19:27;;;-1:-1:-1;11990:9:27;;;11983:16;;-1:-1:-1;;11983:16:27;;;12009:17;-1:-1:-1;12016:10:27;;11961:12;12009:17;:::i;:::-;12043:4;:11;;12036:18;;;11036:1025;;;;;;;;10966:1095;;:::o;5165:446:50:-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:50;;16975:2:67;5354:81:50;;;16957:21:67;17014:2;16994:18;;;16987:30;17053:34;17033:18;;;17026:62;-1:-1:-1;;;17104:18:67;;;17097:36;17150:19;;5354:81:50;16773:402:67;5354:81:50;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:50;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:50:o;13395:393:27:-;13454:12;13478:19;13510:1;:8;13521:2;13510:13;;;;:::i;:::-;13500:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13500:24:27;;13478:46;;13539:9;13534:224;13558:1;:8;13554:1;:12;13534:224;;;13587:9;13599:1;13601;13599:4;;;;;;;;:::i;:::-;;;;;;;13587:16;;13732:1;13726;13722:2;13718:10;13714:2;13710:19;13702:6;13698:32;13691:43;13673:75;13568:3;;;;;:::i;:::-;;;;13534:224;;;-1:-1:-1;13775:6:27;13395:393;-1:-1:-1;;13395:393:27:o;9110:115::-;9167:7;9193:25;9213:4;9193:19;:25::i;13034:304::-;13112:7;13131:11;13153;13178:2;13167:1;:8;:13;:29;;13188:1;:8;13167:29;;;13183:2;13167:29;13153:43;;13211:9;13206:106;13230:3;13226:1;:7;13206:106;;;13295:5;:1;13299;13295:5;:::i;:::-;13269:1;13271:10;13280:1;13271:6;:10;:::i;:::-;13269:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;13269:13:27;13261:40;;13254:47;;;;;13235:3;;;;:::i;:::-;;;;13206:106;;;-1:-1:-1;13328:3:27;;13034:304;-1:-1:-1;;;;13034:304:27:o;7671:628:50:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:50;;;8113:60;;;;-1:-1:-1;;;8113:60:50;;17522:2:67;8113:60:50;;;17504:21:67;17561:2;17541:18;;;17534:30;17600:31;17580:18;;;17573:59;17649:18;;8113:60:50;17320:353:67;8113:60:50;-1:-1:-1;8208:10:50;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;1264:3304:27:-;1354:12;;;;1390:9;;;;1431:11;;;;1475:10;;;1452:33;;;;;;;;;;;;;;;;;;;1321:7;;-1:-1:-1;;;;;1354:12:27;;1390:9;;;1431:11;1321:7;;1452:33;;1475:10;;1452:33;;;1475:10;1452:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1536:15:27;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;1536:21:27;;;;;;;;;1568:34;;1452:33;;-1:-1:-1;1536:21:27;:15;;-1:-1:-1;1568:34:27;;-1:-1:-1;1452:33:27;;1590:11;;1568:34;;:::i;:::-;;;;-1:-1:-1;;1568:34:27;;;;;;;;;1558:45;;1568:34;1558:45;;;;1536:68;;;;;;;;;;-1:-1:-1;1536:68:27;;;;1532:174;;;-1:-1:-1;;;;;1627:15:27;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;1627:21:27;;;;;;;;;1659:34;;1627:21;;:10;1659:34;;1676:3;;1681:11;;1659:34;;:::i;:::-;;;;;;;;;;;;;1649:45;;;;;;1627:68;;;;;;;;;;;;1620:75;;;;;;1264:3304;;;:::o;1532:174::-;1715:17;1752:4;1758:12;1766:3;1758:7;:12::i;:::-;1735:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1715:56;;-1:-1:-1;;;;;;;;;;;580:37:27;;-1:-1:-1;;;;;1781:9:27;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:12;1841:17;1862:3;-1:-1:-1;;;;;1862:14:27;1877:4;1862:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1838:44:27;-1:-1:-1;1903:38:27;;-1:-1:-1;1838:44:27;1924:16;1929:11;1924:2;:16;:::i;:::-;1903:14;:38::i;:::-;1990:25;;-1:-1:-1;;;1990:25:27;;-1:-1:-1;;;;;8729:32:67;;1990:25:27;;;8711:51:67;1896:45:27;;-1:-1:-1;1963:22:27;;-1:-1:-1;;;;;;;;;;;;1990:11:27;;;8684:18:67;;1990:25:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1990:25:27;;;;;;;;;;;;:::i;:::-;1962:53;;;2029:5;:12;2045:1;2029:17;2025:2167;;2062:12;-1:-1:-1;;;;;;;;;;;580:37:27;;-1:-1:-1;;;;;2077:7:27;;2085:3;2090:5;2096:1;2090:8;;;;;;;;:::i;:::-;;;;;;;2077:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;11933:32:67;;;;11915:51;;11997:2;11982:18;;11975:34;11903:2;11888:18;;11741:274;2077:22:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2062:37;-1:-1:-1;2062:37:27;2113:106;;2160:44;2181:3;2194:5;2200:1;2194:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2160:44;;;-1:-1:-1;;;;;11933:32:67;;;11915:51;;11982:18;;;11975:34;11888:18;2160:44:27;;;;;;;2113:106;2244:4;2236;:12;2232:238;;2268:187;;-1:-1:-1;;;2268:187:27;;;;;;;:::i;:::-;2488:86;2498:3;2503:4;2536:3;2541:11;2519:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2509:45;;;;;;2564:5;2570:1;2564:8;;;;;;;;:::i;:::-;;;;;;;2556:17;;2488:86;;;;;;;;;:::i;:::-;;;;;;;;2667:5;2673:1;2667:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2588:15:27;;2659:17;2588:15;;;;;;;;;;-1:-1:-1;;;;;;2588:21:27;;;;;;;;;2620:34;;2667:8;;2588:21;;2620:34;;2637:3;;2642:11;;2620:34;;:::i;:::-;;;;-1:-1:-1;;2620:34:27;;;;;;;;;2610:45;;2620:34;2610:45;;;;2588:68;;;;;;;;;;;;-1:-1:-1;2588:68:27;;;:88;;;;-1:-1:-1;;;;;2690:15:27;;;;2761:4;2690:10;;;:15;;;;;-1:-1:-1;;;;;;2690:21:27;;;;;;;;;2722:34;;2761:4;;-1:-1:-1;2722:34:27;;2739:3;;2744:11;;2722:34;;:::i;:::-;;;;;;;-1:-1:-1;;2722:34:27;;;;;;2712:45;;2722:34;2712:45;;;;2690:68;;;;;;;;;;-1:-1:-1;2690:68:27;:75;;-1:-1:-1;;2690:75:27;;;;;;;;;;-1:-1:-1;2025:2167:27;;;2801:1;2786:5;:12;:16;2782:1410;;;2823:9;2818:1259;2842:5;:12;2838:1;:16;2818:1259;;;2879:12;-1:-1:-1;;;;;;;;;;;580:37:27;;-1:-1:-1;;;;;2894:7:27;;2902:3;2907:5;2913:1;2907:8;;;;;;;;:::i;:::-;;;;;;;2894:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;11933:32:67;;;;11915:51;;11997:2;11982:18;;11975:34;11903:2;11888:18;;11741:274;2894:22:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2879:37;-1:-1:-1;2879:37:27;2934:114;;2985:44;3006:3;3019:5;3025:1;3019:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2985:44;;;-1:-1:-1;;;;;11933:32:67;;;11915:51;;11982:18;;;11975:34;11888:18;2985:44:27;;;;;;;2934:114;3077:4;3069;:12;3065:67;;3105:8;;;3065:67;3229:8;;3167:5;;;-1:-1:-1;;;;;;;;;;;3215:8:27;;;3224:3;;3229:5;;3235:1;;3229:8;;;;;;:::i;:::-;;;;;;;3239:7;3215:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3265:12;3317:17;3374:3;-1:-1:-1;;;;;3374:14:27;3389:4;3374:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3356:38:27;;-1:-1:-1;3356:38:27;-1:-1:-1;3423:38:27;3356;3444:16;3449:11;3444:2;:16;:::i;3423:38::-;3416:45;;3295:185;3502:7;:26;;;;;3521:7;3513:4;:15;3502:26;3498:518;;;3626:86;3636:3;3641:4;3674:3;3679:11;3657:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3647:45;;;;;;3702:5;3708:1;3702:8;;;;;;;;:::i;:::-;;;;;;;3694:17;;3626:86;;;;;;;;;:::i;:::-;;;;;;;;3813:5;3819:1;3813:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3734:15:27;;3805:17;3734:15;;;;;;;;;;-1:-1:-1;;;;;;3734:21:27;;;;;;;;;3766:34;;3813:8;;3734:21;;3766:34;;3783:3;;3788:11;;3766:34;;:::i;:::-;;;;;;;;;;;;;3756:45;;;;;;3734:68;;;;;;;;;;;:88;;;;3915:4;3844;:10;;:15;3855:3;-1:-1:-1;;;;;3844:15:27;-1:-1:-1;;;;;3844:15:27;;;;;;;;;;;;:21;3860:4;-1:-1:-1;;;;;3844:21:27;;-1:-1:-1;;;;;3844:21:27;;;;;;;;;;;;;:68;3893:3;3898:11;3876:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3866:45;;;;;;3844:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;580:37:27;;-1:-1:-1;;;;;3941:8:27;;3950:3;3955:5;3961:1;3955:8;;;;;;;;:::i;:::-;;;;;;;3965:4;3941:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3992:5;;;;;3498:518;-1:-1:-1;;;;;;;;;;;580:37:27;;-1:-1:-1;;;;;4033:8:27;;4042:3;4047:5;4053:1;4047:8;;;;;;;;:::i;:::-;;;;;;;4057:4;4033:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2861:1216;;;2818:1259;2856:3;;;;:::i;:::-;;;;2818:1259;;;;2782:1410;;;4107:74;;;-1:-1:-1;;;4107:74:27;;19660:2:67;4107:74:27;;;19642:21:67;19679:18;;;19672:30;;;;19738:34;19718:18;;;19711:62;19809:34;19789:18;;;19782:62;19861:19;;4107:74:27;19458:428:67;2782:1410:27;-1:-1:-1;;;;;4223:15:27;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;4223:21:27;;;;;;;;;4255:34;;4223:21;;:15;4255:34;;4272:3;;4277:11;;4255:34;;:::i;:::-;;;;-1:-1:-1;;4255:34:27;;;;;;;;;4245:45;;4255:34;4245:45;;;;4223:68;;;;;;;;;;-1:-1:-1;4223:68:27;;;;4202:162;;;;-1:-1:-1;;;4202:162:27;;20093:2:67;4202:162:27;;;20075:21:67;20132:2;20112:18;;;20105:30;20171:34;20151:18;;;20144:62;-1:-1:-1;;;20222:18:67;;;20215:45;20277:19;;4202:162:27;19891:411:67;4202:162:27;4382:12;;;4375:19;;-1:-1:-1;;;;;;4375:19:27;;;4411:9;;;4404:16;;-1:-1:-1;;4404:16:27;;;4430:17;-1:-1:-1;4437:10:27;;4382:12;4430:17;:::i;:::-;4457:18;4464:11;;;4457:18;;;-1:-1:-1;;;;;4493:15:27;;;;;;;;;;;;-1:-1:-1;;;;;;4493:21:27;;;;;;;;;4525:34;;4493:21;;4457:18;4525:34;;4542:3;;4547:11;;4525:34;;:::i;:::-;;;;;;;;;;;;;4515:45;;;;;;4493:68;;;;;;;;;;;;4486:75;;;;;;;;;1264:3304;;;:::o;8821:540:50:-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:50;;;;;;;;:::i;8473:393:27:-;8532:12;8556:19;8588:1;:8;8599:2;8588:13;;;;:::i;:::-;8578:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8578:24:27;;8556:46;;8617:9;8612:224;8636:1;:8;8632:1;:12;8612:224;;;8665:9;8677:1;8679;8677:4;;;;;;;;:::i;:::-;;;;;;;8665:16;;8810:1;8804;8800:2;8796:10;8792:2;8788:19;8780:6;8776:32;8769:43;8751:75;8646:3;;;;;:::i;:::-;;;;8612:224;;8163:304;8241:7;8260:11;8282;8307:2;8296:1;:8;:13;:29;;8317:1;:8;8296:29;;;8312:2;8296:29;8282:43;;8340:9;8335:106;8359:3;8355:1;:7;8335:106;;;8424:5;:1;8428;8424:5;:::i;:::-;8398:1;8400:10;8409:1;8400:6;:10;:::i;:::-;8398:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;8398:13:27;8390:40;;8383:47;;;;;8364:3;;;;:::i;:::-;;;;8335:106;;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:658:67:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:67;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:67;;14:658;-1:-1:-1;;;;;;14:658:67:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:67;901:16;;894:27;677:250::o;932:271::-;974:3;1012:5;1006:12;1039:6;1034:3;1027:19;1055:76;1124:6;1117:4;1112:3;1108:14;1101:4;1094:5;1090:16;1055:76;:::i;:::-;1185:2;1164:15;-1:-1:-1;;1160:29:67;1151:39;;;;1192:4;1147:50;;932:271;-1:-1:-1;;932:271:67:o;1208:1744::-;1443:2;1495:21;;;1565:13;;1468:18;;;1587:22;;;1414:4;;1443:2;1628;;1646:18;;;;1683:1;1726:15;;;1711:31;;1707:40;;1770:15;;;1414:4;;1834:1089;1850:6;1845:3;1842:15;1834:1089;;;-1:-1:-1;;1919:22:67;;;1915:36;1903:49;;1975:13;;2062:9;;-1:-1:-1;;;;;2058:35:67;2043:51;;2133:11;;2127:18;2165:15;;;2158:27;;;2246:19;;2015:15;;;2278:24;;;2459:21;;;;2325:2;2407:17;;;2395:30;;2391:39;;;2349:15;;;;2504:1;2518:296;2534:8;2529:3;2526:17;2518:296;;;2640:2;2636:7;2627:6;2619;2615:19;2611:33;2604:5;2597:48;2672:42;2707:6;2696:8;2690:15;2672:42;:::i;:::-;2743:17;;;;2662:52;-1:-1:-1;2786:14:67;;;;2562:1;2553:11;2518:296;;;-1:-1:-1;;;2901:12:67;;;;2837:6;-1:-1:-1;;2866:15:67;;;;1876:1;1867:11;1834:1089;;;-1:-1:-1;2940:6:67;;1208:1744;-1:-1:-1;;;;;;;;;;1208:1744:67:o;2957:127::-;3018:10;3013:3;3009:20;3006:1;2999:31;3049:4;3046:1;3039:15;3073:4;3070:1;3063:15;3089:275;3160:2;3154:9;3225:2;3206:13;;-1:-1:-1;;3202:27:67;3190:40;;3260:18;3245:34;;3281:22;;;3242:62;3239:88;;;3307:18;;:::i;:::-;3343:2;3336:22;3089:275;;-1:-1:-1;3089:275:67:o;3369:131::-;-1:-1:-1;;;;;3444:31:67;;3434:42;;3424:70;;3490:1;3487;3480:12;3505:1097;3556:5;3604:4;3592:9;3587:3;3583:19;3579:30;3576:50;;;3622:1;3619;3612:12;3576:50;3655:2;3649:9;3697:4;3689:6;3685:17;3768:6;3756:10;3753:22;3732:18;3720:10;3717:34;3714:62;3711:88;;;3779:18;;:::i;:::-;3815:2;3808:22;3848:6;-1:-1:-1;3848:6:67;3878:23;;3910:33;3878:23;3910:33;:::i;:::-;3952:23;;4027:2;4012:18;;3999:32;4040:33;3999:32;4040:33;:::i;:::-;4101:2;4089:15;;4082:32;4166:2;4151:18;;4138:32;4179:33;4138:32;4179:33;:::i;:::-;4245:7;4240:2;4232:6;4228:15;4221:32;;4314:2;4303:9;4299:18;4286:32;4281:2;4273:6;4269:15;4262:57;4381:3;4370:9;4366:19;4353:33;4347:3;4339:6;4335:16;4328:59;4439:3;4428:9;4424:19;4411:33;4453;4478:7;4453:33;:::i;:::-;4514:3;4502:16;;4495:33;4590:3;4575:19;;;4562:33;4544:16;;4537:59;;;;3505:1097;;-1:-1:-1;3505:1097:67:o;4607:292::-;4698:6;4706;4759:3;4747:9;4738:7;4734:23;4730:33;4727:53;;;4776:1;4773;4766:12;4727:53;4799:42;4833:7;4822:9;4799:42;:::i;:::-;4789:52;4888:3;4873:19;;;;4860:33;;-1:-1:-1;;;4607:292:67:o;4904:1569::-;5108:4;5137:2;5177;5166:9;5162:18;5207:2;5196:9;5189:21;5230:6;5265;5259:13;5296:6;5288;5281:22;5322:2;5312:12;;5355:2;5344:9;5340:18;5333:25;;5417:2;5407:6;5404:1;5400:14;5389:9;5385:30;5381:39;5455:2;5447:6;5443:15;5476:1;5497;5507:937;5523:6;5518:3;5515:15;5507:937;;;5592:22;;;-1:-1:-1;;5588:36:67;5576:49;;5648:13;;5735:9;;-1:-1:-1;;;;;5731:35:67;5716:51;;5806:11;;5800:18;5838:15;;;5831:27;;;5919:19;;5688:15;;;5951:24;;;6041:21;;;;6086:1;;6009:2;5997:15;;;6100:236;6116:8;6111:3;6108:17;6100:236;;;6197:15;;-1:-1:-1;;;;;;6193:42:67;6179:57;;6305:17;;;;6144:1;6135:11;;;;;6262:14;;;;6100:236;;;-1:-1:-1;6422:12:67;;;;6359:5;-1:-1:-1;;;6387:15:67;;;;5549:1;5540:11;5507:937;;;-1:-1:-1;6461:6:67;;4904:1569;-1:-1:-1;;;;;;;;;4904:1569:67:o;6478:499::-;6578:6;6586;6594;6647:3;6635:9;6626:7;6622:23;6618:33;6615:53;;;6664:1;6661;6654:12;6615:53;6703:9;6690:23;6722:31;6747:5;6722:31;:::i;:::-;6772:5;-1:-1:-1;6829:2:67;6814:18;;6801:32;6842:33;6801:32;6842:33;:::i;:::-;6894:7;-1:-1:-1;6920:51:67;6963:7;6958:2;6943:18;;6920:51;:::i;:::-;6910:61;;6478:499;;;;;:::o;6982:218::-;7129:2;7118:9;7111:21;7092:4;7149:45;7190:2;7179:9;7175:18;7167:6;7149:45;:::i;7205:803::-;7367:4;7396:2;7436;7425:9;7421:18;7466:2;7455:9;7448:21;7489:6;7524;7518:13;7555:6;7547;7540:22;7593:2;7582:9;7578:18;7571:25;;7655:2;7645:6;7642:1;7638:14;7627:9;7623:30;7619:39;7605:53;;7693:2;7685:6;7681:15;7714:1;7724:255;7738:6;7735:1;7732:13;7724:255;;;7831:2;7827:7;7815:9;7807:6;7803:22;7799:36;7794:3;7787:49;7859:40;7892:6;7883;7877:13;7859:40;:::i;:::-;7849:50;-1:-1:-1;7957:12:67;;;;7922:15;;;;7760:1;7753:9;7724:255;;;-1:-1:-1;7996:6:67;;7205:803;-1:-1:-1;;;;;;;7205:803:67:o;8013:223::-;8095:6;8148:3;8136:9;8127:7;8123:23;8119:33;8116:53;;;8165:1;8162;8155:12;8116:53;8188:42;8222:7;8211:9;8188:42;:::i;8433:127::-;8494:10;8489:3;8485:20;8482:1;8475:31;8525:4;8522:1;8515:15;8549:4;8546:1;8539:15;8773:184;8843:6;8896:2;8884:9;8875:7;8871:23;8867:32;8864:52;;;8912:1;8909;8902:12;8864:52;-1:-1:-1;8935:16:67;;8773:184;-1:-1:-1;8773:184:67:o;8962:602::-;-1:-1:-1;;;;;9291:15:67;;;9273:34;;9343:15;;;9338:2;9323:18;;9316:43;9395:15;;9390:2;9375:18;;9368:43;9442:2;9427:18;;9420:34;;;9253:3;9485;9470:19;;9463:32;;;9216:4;;9512:46;;9538:19;;9530:6;9512:46;:::i;9569:380::-;9648:1;9644:12;;;;9691;;;9712:61;;9766:4;9758:6;9754:17;9744:27;;9712:61;9819:2;9811:6;9808:14;9788:18;9785:38;9782:161;;9865:10;9860:3;9856:20;9853:1;9846:31;9900:4;9897:1;9890:15;9928:4;9925:1;9918:15;9782:161;;9569:380;;;:::o;9954:391::-;10030:5;10064:18;10056:6;10053:30;10050:56;;;10086:18;;:::i;:::-;10124:57;10169:2;10148:15;;-1:-1:-1;;10144:29:67;10175:4;10140:40;10124:57;:::i;:::-;10115:66;;10204:6;10197:5;10190:21;10244:3;10235:6;10230:3;10226:16;10223:25;10220:45;;;10261:1;10258;10251:12;10220:45;10274:65;10332:6;10325:4;10318:5;10314:16;10309:3;10274:65;:::i;10350:459::-;10430:6;10483:2;10471:9;10462:7;10458:23;10454:32;10451:52;;;10499:1;10496;10489:12;10451:52;10532:9;10526:16;10565:18;10557:6;10554:30;10551:50;;;10597:1;10594;10587:12;10551:50;10620:22;;10673:4;10665:13;;10661:27;-1:-1:-1;10651:55:67;;10702:1;10699;10692:12;10651:55;10725:78;10795:7;10790:2;10784:9;10779:2;10775;10771:11;10725:78;:::i;11459:277::-;11526:6;11579:2;11567:9;11558:7;11554:23;11550:32;11547:52;;;11595:1;11592;11585:12;11547:52;11627:9;11621:16;11680:5;11673:13;11666:21;11659:5;11656:32;11646:60;;11702:1;11699;11692:12;12020:384;-1:-1:-1;;;;;;12205:33:67;;12193:46;;12262:13;;12175:3;;12284:74;12262:13;12347:1;12338:11;;12331:4;12319:17;;12284:74;:::i;:::-;12378:16;;;;12396:1;12374:24;;12020:384;-1:-1:-1;;;12020:384:67:o;12409:287::-;12538:3;12576:6;12570:13;12592:66;12651:6;12646:3;12639:4;12631:6;12627:17;12592:66;:::i;:::-;12674:16;;;;;12409:287;-1:-1:-1;;12409:287:67:o;12701:446::-;12951:2;12940:9;12933:21;12990:1;12985:2;12974:9;12970:18;12963:29;-1:-1:-1;;;13023:2:67;13012:9;13008:18;13001:35;13074:3;13067:4;13056:9;13052:20;13045:33;12914:4;13095:46;13136:3;13125:9;13121:19;13113:6;13095:46;:::i;14079:127::-;14140:10;14135:3;14131:20;14128:1;14121:31;14171:4;14168:1;14161:15;14195:4;14192:1;14185:15;14211:128;14278:9;;;14299:11;;;14296:37;;;14313:18;;:::i;14344:125::-;14409:9;;;14430:10;;;14427:36;;;14443:18;;:::i;14885:345::-;-1:-1:-1;;;;;15105:32:67;;;;15087:51;;15169:2;15154:18;;15147:34;;;;15212:2;15197:18;;15190:34;15075:2;15060:18;;14885:345::o;15235:610::-;15481:13;;15424:3;;15455;;15534:4;15561:15;;;15424:3;15604:175;15618:6;15615:1;15612:13;15604:175;;;15681:13;;15667:28;;15717:14;;;;15754:15;;;;15640:1;15633:9;15604:175;;;-1:-1:-1;;15788:21:67;;;-1:-1:-1;15825:14:67;;;;;-1:-1:-1;;;15235:610:67:o;15850:168::-;15923:9;;;15954;;15971:15;;;15965:22;;15951:37;15941:71;;15992:18;;:::i;16212:556::-;16414:2;16396:21;;;16453:3;16433:18;;;16426:31;16493:34;16488:2;16473:18;;16466:62;16564:34;16559:2;16544:18;;16537:62;16636:34;16630:3;16615:19;;16608:63;-1:-1:-1;;;16702:3:67;16687:19;;16680:46;16758:3;16743:19;;16212:556::o;17180:135::-;17219:3;17240:17;;;17237:43;;17260:18;;:::i;:::-;-1:-1:-1;17307:1:67;17296:13;;17180:135::o;17678:709::-;17743:5;17796:3;17789:4;17781:6;17777:17;17773:27;17763:55;;17814:1;17811;17804:12;17763:55;17843:6;17837:13;17869:4;17892:18;17888:2;17885:26;17882:52;;;17914:18;;:::i;:::-;17960:2;17957:1;17953:10;17983:28;18007:2;18003;17999:11;17983:28;:::i;:::-;18045:15;;;18115;;;18111:24;;;18076:12;;;;18147:15;;;18144:35;;;18175:1;18172;18165:12;18144:35;18211:2;18203:6;18199:15;18188:26;;18223:135;18239:6;18234:3;18231:15;18223:135;;;18305:10;;18293:23;;18256:12;;;;18336;;;;18223:135;;18392:614;18521:6;18529;18582:2;18570:9;18561:7;18557:23;18553:32;18550:52;;;18598:1;18595;18588:12;18550:52;18631:9;18625:16;18660:18;18701:2;18693:6;18690:14;18687:34;;;18717:1;18714;18707:12;18687:34;18740:72;18804:7;18795:6;18784:9;18780:22;18740:72;:::i;:::-;18730:82;;18858:2;18847:9;18843:18;18837:25;18821:41;;18887:2;18877:8;18874:16;18871:36;;;18903:1;18900;18893:12;18871:36;;18926:74;18992:7;18981:8;18970:9;18966:24;18926:74;:::i;:::-;18916:84;;;18392:614;;;;;:::o;19011:442::-;-1:-1:-1;;;;;19258:32:67;;;;19240:51;;-1:-1:-1;;;;;;19327:33:67;;;;19322:2;19307:18;;19300:61;19392:2;19377:18;;19370:34;19435:2;19420:18;;19413:34;19227:3;19212:19;;19011:442::o",
    "linkReferences": {},
    "immutableReferences": {
      "54293": [
        {
          "start": 942,
          "length": 32
        },
        {
          "start": 2922,
          "length": 32
        }
      ],
      "54311": [
        {
          "start": 1183,
          "length": 32
        },
        {
          "start": 7029,
          "length": 32
        }
      ],
      "54338": [
        {
          "start": 902,
          "length": 32
        },
        {
          "start": 1556,
          "length": 32
        },
        {
          "start": 2882,
          "length": 32
        },
        {
          "start": 6402,
          "length": 32
        }
      ],
      "54347": [
        {
          "start": 1223,
          "length": 32
        },
        {
          "start": 7069,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "_failZapAndDoSomething((address,address,address,uint256,uint256,address,uint256),uint256)": "2c747b21",
    "_failZapAndDoSomething_eth((address,address,address,uint256,uint256,address,uint256),uint256)": "d171493f",
    "_getSwapData(address,address,(address,address,address,uint256,uint256,address,uint256))": "6df512c4",
    "_getTokenIn((address,address,address,uint256,uint256,address,uint256))": "c72f4a67",
    "_setUpVaultAndZapper()": "8557b123",
    "_zapAndDoSomething((address,address,address,uint256,uint256,address,uint256))": "a34d30cb",
    "_zapAndDoSomething_eth((address,address,address,uint256,uint256,address,uint256))": "a63ac536",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_failZapAndDoSomethingERC20PlusEth()": "db8fd471",
    "test_fail_zapAndDoSomething_RouterFails()": "27243b4a",
    "test_inconsistantZapAndDoSomethingEthAPE()": "1e25e048",
    "test_zapAndDoSomethingEthAPE()": "3f972559"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenInWhale\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"internalType\":\"struct Swap\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_failZapAndDoSomething\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenInWhale\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"internalType\":\"struct Swap\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_failZapAndDoSomething_eth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenInWhale\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"internalType\":\"struct Swap\",\"name\":\"swap\",\"type\":\"tuple\"}],\"name\":\"_getSwapData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenInWhale\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"internalType\":\"struct Swap\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"_getTokenIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_setUpVaultAndZapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenInWhale\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"internalType\":\"struct Swap\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"_zapAndDoSomething\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenInWhale\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"internalType\":\"struct Swap\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"_zapAndDoSomething_eth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_failZapAndDoSomethingERC20PlusEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_fail_zapAndDoSomething_RouterFails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_inconsistantZapAndDoSomethingEthAPE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_zapAndDoSomethingEthAPE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/zapper/zapper.t.sol\":\"ZapperTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@account-abstraction/=lib/account-abstraction/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc20-paymaster-contracts/=lib/erc20-paymaster-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1419991b2a8eb2de79b9bd2b3c5a0ceb5d7636ab9bcddde0b71701fd6ad47273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7afc962ec6e60e1ff749cd0d4c671bc3b85386c68d26b824d4a6c6e6e8255e85\",\"dweb:/ipfs/QmWwfj6Qk8QBcnGD45seGnDXtUmC9CYKuPNJCApSjLyPSj\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdc93a167a7daf54e0954410c16a1f292b4f2c81e642b7a10793c1c8d174d27b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b723060ff51e7ec5c33ea34da89d9f24631847b639f47016cba61b600efa532\",\"dweb:/ipfs/QmTAd4Jz16mcncFzpfVxic7Tfor3KprvGXt7Tjmxtwtnwu\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xde231558366826d7cb61725af8147965a61c53b77a352cc8c9af38fc5a92ac3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd55624076bf61d44af5ff351919e32dda748567acfbdd6ba3d6c7be61c758e\",\"dweb:/ipfs/QmSki4dTrf4GPm7MTpG3fk8mC7rnjwd2zMomLp6jLuF63Q\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/zapper.sol\":{\"keccak256\":\"0x767cbc4d5950d81e9178f5646a8a87a9513c7aebacaacd6695354666e3a7d3ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4f9836308fbdf570158296492f6f92edbeed7ee0a23490a54e07470b3dff898\",\"dweb:/ipfs/QmXnaaEw73XcAdmSukTpa4F6T1koup52Qw2DYd44xvBNge\"]},\"test/zapper/zapper.t.sol\":{\"keccak256\":\"0x700bed3fdabea915b7f045e89a241697348cc6c68e10f5191d636c9421711ca9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://484f2f4251e790ef053c1d5f157db57b7ff6c805b84feab5414704448aabff51\",\"dweb:/ipfs/Qme4KdnUnQeGpV4CZzAurpmohZbTaNLgs4AYP5onPRuxKz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Swap",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenInWhale",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippage",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_failZapAndDoSomething"
        },
        {
          "inputs": [
            {
              "internalType": "struct Swap",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenInWhale",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippage",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_failZapAndDoSomething_eth"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "struct Swap",
              "name": "swap",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenInWhale",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippage",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_getSwapData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Swap",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenInWhale",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippage",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_getTokenIn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_setUpVaultAndZapper"
        },
        {
          "inputs": [
            {
              "internalType": "struct Swap",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenInWhale",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippage",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_zapAndDoSomething"
        },
        {
          "inputs": [
            {
              "internalType": "struct Swap",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenInWhale",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippage",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_zapAndDoSomething_eth"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_failZapAndDoSomethingERC20PlusEth"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_fail_zapAndDoSomething_RouterFails"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_inconsistantZapAndDoSomethingEthAPE"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_zapAndDoSomethingEthAPE"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@account-abstraction/=lib/account-abstraction/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "account-abstraction/=lib/account-abstraction/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc20-paymaster-contracts/=lib/erc20-paymaster-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/zapper/zapper.t.sol": "ZapperTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x1419991b2a8eb2de79b9bd2b3c5a0ceb5d7636ab9bcddde0b71701fd6ad47273",
        "urls": [
          "bzz-raw://7afc962ec6e60e1ff749cd0d4c671bc3b85386c68d26b824d4a6c6e6e8255e85",
          "dweb:/ipfs/QmWwfj6Qk8QBcnGD45seGnDXtUmC9CYKuPNJCApSjLyPSj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdc93a167a7daf54e0954410c16a1f292b4f2c81e642b7a10793c1c8d174d27b6",
        "urls": [
          "bzz-raw://1b723060ff51e7ec5c33ea34da89d9f24631847b639f47016cba61b600efa532",
          "dweb:/ipfs/QmTAd4Jz16mcncFzpfVxic7Tfor3KprvGXt7Tjmxtwtnwu"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0xde231558366826d7cb61725af8147965a61c53b77a352cc8c9af38fc5a92ac3c",
        "urls": [
          "bzz-raw://1fd55624076bf61d44af5ff351919e32dda748567acfbdd6ba3d6c7be61c758e",
          "dweb:/ipfs/QmSki4dTrf4GPm7MTpG3fk8mC7rnjwd2zMomLp6jLuF63Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/zapper.sol": {
        "keccak256": "0x767cbc4d5950d81e9178f5646a8a87a9513c7aebacaacd6695354666e3a7d3ae",
        "urls": [
          "bzz-raw://a4f9836308fbdf570158296492f6f92edbeed7ee0a23490a54e07470b3dff898",
          "dweb:/ipfs/QmXnaaEw73XcAdmSukTpa4F6T1koup52Qw2DYd44xvBNge"
        ],
        "license": "MIT"
      },
      "test/zapper/zapper.t.sol": {
        "keccak256": "0x700bed3fdabea915b7f045e89a241697348cc6c68e10f5191d636c9421711ca9",
        "urls": [
          "bzz-raw://484f2f4251e790ef053c1d5f157db57b7ff6c805b84feab5414704448aabff51",
          "dweb:/ipfs/Qme4KdnUnQeGpV4CZzAurpmohZbTaNLgs4AYP5onPRuxKz"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/zapper/zapper.t.sol",
    "id": 55115,
    "exportedSymbols": {
      "DSTest": [
        6933
      ],
      "ERC20": [
        49087
      ],
      "IERC20": [
        49165
      ],
      "OffChainCalls": [
        54479
      ],
      "Ownable2Step": [
        48302
      ],
      "Pausable": [
        48435
      ],
      "SafeERC20": [
        49602
      ],
      "SigUtils": [
        54552
      ],
      "StdAssertions": [
        8465
      ],
      "StdChains": [
        9229
      ],
      "StdCheats": [
        12082
      ],
      "StdInvariant": [
        12407
      ],
      "StdStorage": [
        13173
      ],
      "StdStyle": [
        16023
      ],
      "StdUtils": [
        16871
      ],
      "Swap": [
        54279
      ],
      "Test": [
        16922
      ],
      "TestBase": [
        6999
      ],
      "Vm": [
        18679
      ],
      "Zapper": [
        55535
      ],
      "ZapperTest": [
        55114
      ],
      "console": [
        26743
      ],
      "console2": [
        34868
      ],
      "safeconsole": [
        48106
      ],
      "stdError": [
        12148
      ],
      "stdJson": [
        12999
      ],
      "stdMath": [
        13141
      ],
      "stdStorage": [
        14812
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7930:66",
    "nodes": [
      {
        "id": 54257,
        "nodeType": "PragmaDirective",
        "src": "39:23:66",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 54258,
        "nodeType": "ImportDirective",
        "src": "64:31:66",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55115,
        "sourceUnit": 26744,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54259,
        "nodeType": "ImportDirective",
        "src": "96:28:66",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55115,
        "sourceUnit": 16923,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54261,
        "nodeType": "ImportDirective",
        "src": "125:68:66",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55115,
        "sourceUnit": 49088,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54260,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49087,
              "src": "133:5:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54262,
        "nodeType": "ImportDirective",
        "src": "194:30:66",
        "nodes": [],
        "absolutePath": "src/zapper.sol",
        "file": "../../src/zapper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55115,
        "sourceUnit": 55536,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54279,
        "nodeType": "StructDefinition",
        "src": "227:167:66",
        "nodes": [],
        "canonicalName": "Swap",
        "members": [
          {
            "constant": false,
            "id": 54264,
            "mutability": "mutable",
            "name": "router",
            "nameLocation": "253:6:66",
            "nodeType": "VariableDeclaration",
            "scope": 54279,
            "src": "245:14:66",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 54263,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "245:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54267,
            "mutability": "mutable",
            "name": "tokenIn",
            "nameLocation": "272:7:66",
            "nodeType": "VariableDeclaration",
            "scope": 54279,
            "src": "265:14:66",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$49165",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 54266,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54265,
                "name": "IERC20",
                "nameLocations": [
                  "265:6:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49165,
                "src": "265:6:66"
              },
              "referencedDeclaration": 49165,
              "src": "265:6:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$49165",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54270,
            "mutability": "mutable",
            "name": "tokenOut",
            "nameLocation": "292:8:66",
            "nodeType": "VariableDeclaration",
            "scope": 54279,
            "src": "285:15:66",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$49165",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 54269,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54268,
                "name": "IERC20",
                "nameLocations": [
                  "285:6:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49165,
                "src": "285:6:66"
              },
              "referencedDeclaration": 49165,
              "src": "285:6:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$49165",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54272,
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "314:6:66",
            "nodeType": "VariableDeclaration",
            "scope": 54279,
            "src": "306:14:66",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 54271,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "306:7:66",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54274,
            "mutability": "mutable",
            "name": "minAmount",
            "nameLocation": "334:9:66",
            "nodeType": "VariableDeclaration",
            "scope": 54279,
            "src": "326:17:66",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 54273,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "326:7:66",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54276,
            "mutability": "mutable",
            "name": "tokenInWhale",
            "nameLocation": "357:12:66",
            "nodeType": "VariableDeclaration",
            "scope": 54279,
            "src": "349:20:66",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 54275,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "349:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54278,
            "mutability": "mutable",
            "name": "slippage",
            "nameLocation": "383:8:66",
            "nodeType": "VariableDeclaration",
            "scope": 54279,
            "src": "375:16:66",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 54277,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "375:7:66",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Swap",
        "nameLocation": "234:4:66",
        "scope": 55115,
        "visibility": "public"
      },
      {
        "id": 54479,
        "nodeType": "ContractDefinition",
        "src": "396:1417:66",
        "nodes": [
          {
            "id": 54284,
            "nodeType": "VariableDeclaration",
            "src": "433:69:66",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_router",
            "nameLocation": "450:7:66",
            "scope": 54479,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 54282,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "433:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831313131313131323534454542323534373742363866623835456439323966373341393630353832",
              "id": 54283,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "460:42:66",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1111111254EEB25477B68fb85Ed929f73A960582"
            },
            "visibility": "internal"
          },
          {
            "id": 54293,
            "nodeType": "VariableDeclaration",
            "src": "509:67:66",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_APE",
            "nameLocation": "534:4:66",
            "scope": 54479,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$49087",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 54286,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54285,
                "name": "ERC20",
                "nameLocations": [
                  "509:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49087,
                "src": "509:5:66"
              },
              "referencedDeclaration": 49087,
              "src": "509:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "4150455f4d41494e4e4554",
                      "id": 54290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "561:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a9a3a5a47ac490f06603b3c4c0098de1d04526ffe06d18c75546c33f872f29b0",
                        "typeString": "literal_string \"APE_MAINNET\""
                      },
                      "value": "APE_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_a9a3a5a47ac490f06603b3c4c0098de1d04526ffe06d18c75546c33f872f29b0",
                        "typeString": "literal_string \"APE_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 54288,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6992,
                      "src": "547:2:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$18679",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 54289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "550:10:66",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17387,
                    "src": "547:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 54291,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "547:28:66",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 54287,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 49087,
                "src": "541:5:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$49087_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 54292,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "541:35:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54302,
            "nodeType": "VariableDeclaration",
            "src": "582:67:66",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_DAI",
            "nameLocation": "607:4:66",
            "scope": 54479,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$49087",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 54295,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54294,
                "name": "ERC20",
                "nameLocations": [
                  "582:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49087,
                "src": "582:5:66"
              },
              "referencedDeclaration": 49087,
              "src": "582:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "4441495f4d41494e4e4554",
                      "id": 54299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "634:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_230177d6c3cecaf46f7e3ca090c3cb065f5914b5041f0f194adbd66f6539e257",
                        "typeString": "literal_string \"DAI_MAINNET\""
                      },
                      "value": "DAI_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_230177d6c3cecaf46f7e3ca090c3cb065f5914b5041f0f194adbd66f6539e257",
                        "typeString": "literal_string \"DAI_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 54297,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6992,
                      "src": "620:2:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$18679",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 54298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "623:10:66",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17387,
                    "src": "620:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 54300,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "620:28:66",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 54296,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 49087,
                "src": "614:5:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$49087_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 54301,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "614:35:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54311,
            "nodeType": "VariableDeclaration",
            "src": "655:69:66",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_USDC",
            "nameLocation": "680:5:66",
            "scope": 54479,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$49087",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 54304,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54303,
                "name": "ERC20",
                "nameLocations": [
                  "655:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49087,
                "src": "655:5:66"
              },
              "referencedDeclaration": 49087,
              "src": "655:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "555344435f4d41494e4e4554",
                      "id": 54308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "708:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a62d6d0bba528a84eb8a9b813ab657fc61e302f8258cdb77cace7f74c941bb76",
                        "typeString": "literal_string \"USDC_MAINNET\""
                      },
                      "value": "USDC_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_a62d6d0bba528a84eb8a9b813ab657fc61e302f8258cdb77cace7f74c941bb76",
                        "typeString": "literal_string \"USDC_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 54306,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6992,
                      "src": "694:2:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$18679",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 54307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "697:10:66",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17387,
                    "src": "694:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 54309,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "694:29:66",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 54305,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 49087,
                "src": "688:5:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$49087_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 54310,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "688:36:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54320,
            "nodeType": "VariableDeclaration",
            "src": "730:69:66",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_USDT",
            "nameLocation": "755:5:66",
            "scope": 54479,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$49087",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 54313,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54312,
                "name": "ERC20",
                "nameLocations": [
                  "730:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49087,
                "src": "730:5:66"
              },
              "referencedDeclaration": 49087,
              "src": "730:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "555344545f4d41494e4e4554",
                      "id": 54317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "783:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_da52377d5c1d564051a9ef8e9e435087de26b1ecbcf9d662c0773293bf38ed05",
                        "typeString": "literal_string \"USDT_MAINNET\""
                      },
                      "value": "USDT_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_da52377d5c1d564051a9ef8e9e435087de26b1ecbcf9d662c0773293bf38ed05",
                        "typeString": "literal_string \"USDT_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 54315,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6992,
                      "src": "769:2:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$18679",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 54316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "772:10:66",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17387,
                    "src": "769:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 54318,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "769:29:66",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 54314,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 49087,
                "src": "763:5:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$49087_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 54319,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "763:36:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54329,
            "nodeType": "VariableDeclaration",
            "src": "805:69:66",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_WETH",
            "nameLocation": "830:5:66",
            "scope": 54479,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$49087",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 54322,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54321,
                "name": "ERC20",
                "nameLocations": [
                  "805:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49087,
                "src": "805:5:66"
              },
              "referencedDeclaration": 49087,
              "src": "805:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "574554485f4d41494e4e4554",
                      "id": 54326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "858:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_07477c4b066a48b89b834b3cdac7e675f45c24ec19ef5dbf3661896a6920477a",
                        "typeString": "literal_string \"WETH_MAINNET\""
                      },
                      "value": "WETH_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_07477c4b066a48b89b834b3cdac7e675f45c24ec19ef5dbf3661896a6920477a",
                        "typeString": "literal_string \"WETH_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 54324,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6992,
                      "src": "844:2:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$18679",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 54325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "847:10:66",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17387,
                    "src": "844:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 54327,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "844:29:66",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 54323,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 49087,
                "src": "838:5:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$49087_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 54328,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "838:36:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54338,
            "nodeType": "VariableDeclaration",
            "src": "880:67:66",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_ETH",
            "nameLocation": "905:4:66",
            "scope": 54479,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$49087",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 54331,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54330,
                "name": "ERC20",
                "nameLocations": [
                  "880:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49087,
                "src": "880:5:66"
              },
              "referencedDeclaration": 49087,
              "src": "880:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "4554485f4d41494e4e4554",
                      "id": 54335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "932:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_50fa332cce764adc20517ef9e164af5ed01822aa295f2e4be9b4442976b4627b",
                        "typeString": "literal_string \"ETH_MAINNET\""
                      },
                      "value": "ETH_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_50fa332cce764adc20517ef9e164af5ed01822aa295f2e4be9b4442976b4627b",
                        "typeString": "literal_string \"ETH_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 54333,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6992,
                      "src": "918:2:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$18679",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 54334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "921:10:66",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17387,
                    "src": "918:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 54336,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "918:28:66",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 54332,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 49087,
                "src": "912:5:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$49087_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 54337,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "912:35:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54347,
            "nodeType": "VariableDeclaration",
            "src": "953:73:66",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_WSTETH",
            "nameLocation": "978:7:66",
            "scope": 54479,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$49087",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 54340,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54339,
                "name": "ERC20",
                "nameLocations": [
                  "953:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49087,
                "src": "953:5:66"
              },
              "referencedDeclaration": 49087,
              "src": "953:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "5753544554485f4d41494e4e4554",
                      "id": 54344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1008:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6d4401fefbc6647dca94492e660c4e242c84c4088f907f9b130b48a032bf98c7",
                        "typeString": "literal_string \"WSTETH_MAINNET\""
                      },
                      "value": "WSTETH_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_6d4401fefbc6647dca94492e660c4e242c84c4088f907f9b130b48a032bf98c7",
                        "typeString": "literal_string \"WSTETH_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 54342,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6992,
                      "src": "994:2:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$18679",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 54343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "997:10:66",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17387,
                    "src": "994:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 54345,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "994:31:66",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 54341,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 49087,
                "src": "988:5:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$49087_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 54346,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "988:38:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54356,
            "nodeType": "VariableDeclaration",
            "src": "1032:71:66",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_STETH",
            "nameLocation": "1057:6:66",
            "scope": 54479,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$49087",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 54349,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54348,
                "name": "ERC20",
                "nameLocations": [
                  "1032:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49087,
                "src": "1032:5:66"
              },
              "referencedDeclaration": 49087,
              "src": "1032:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "53544554485f4d41494e4e4554",
                      "id": 54353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1086:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_153525a431ee1710c2d4ad91d40e3bee712ea56e3e1caf7782d368c7ce2cd94d",
                        "typeString": "literal_string \"STETH_MAINNET\""
                      },
                      "value": "STETH_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_153525a431ee1710c2d4ad91d40e3bee712ea56e3e1caf7782d368c7ce2cd94d",
                        "typeString": "literal_string \"STETH_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 54351,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6992,
                      "src": "1072:2:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$18679",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 54352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1075:10:66",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17387,
                    "src": "1072:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 54354,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1072:30:66",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 54350,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 49087,
                "src": "1066:5:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$49087_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 54355,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1066:37:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54365,
            "nodeType": "VariableDeclaration",
            "src": "1109:69:66",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_WBTC",
            "nameLocation": "1134:5:66",
            "scope": 54479,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$49087",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 54358,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54357,
                "name": "ERC20",
                "nameLocations": [
                  "1109:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49087,
                "src": "1109:5:66"
              },
              "referencedDeclaration": 49087,
              "src": "1109:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "574254435f4d41494e4e4554",
                      "id": 54362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1162:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_8d961144252e65966b12dad3165eae993e1ccf85f0a4c309494e2dfcbac2e78e",
                        "typeString": "literal_string \"WBTC_MAINNET\""
                      },
                      "value": "WBTC_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_8d961144252e65966b12dad3165eae993e1ccf85f0a4c309494e2dfcbac2e78e",
                        "typeString": "literal_string \"WBTC_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 54360,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6992,
                      "src": "1148:2:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$18679",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 54361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1151:10:66",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17387,
                    "src": "1148:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 54363,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1148:29:66",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 54359,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 49087,
                "src": "1142:5:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$49087_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 54364,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1142:36:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$49087",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54369,
            "nodeType": "FunctionDefinition",
            "src": "1185:16:66",
            "nodes": [],
            "body": {
              "id": 54368,
              "nodeType": "Block",
              "src": "1199:2:66",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 54366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1196:2:66"
            },
            "returnParameters": {
              "id": 54367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1199:0:66"
            },
            "scope": 54479,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54478,
            "nodeType": "FunctionDefinition",
            "src": "1207:604:66",
            "nodes": [],
            "body": {
              "id": 54477,
              "nodeType": "Block",
              "src": "1323:488:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54385,
                      "mutability": "mutable",
                      "name": "inputs",
                      "nameLocation": "1349:6:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 54477,
                      "src": "1333:22:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 54383,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1333:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 54384,
                        "nodeType": "ArrayTypeName",
                        "src": "1333:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54391,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "38",
                        "id": 54389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1371:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        }
                      ],
                      "id": 54388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1358:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 54386,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1362:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 54387,
                        "nodeType": "ArrayTypeName",
                        "src": "1362:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 54390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:15:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1333:40:66"
                },
                {
                  "expression": {
                    "id": 54396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 54392,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54385,
                        "src": "1383:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 54394,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 54393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1390:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1383:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6e6f6465",
                      "id": 54395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1395:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7a7b069bdf427c3e6d24c2c55ccd9fe71f5d9a6088733138764bb52de1769157",
                        "typeString": "literal_string \"node\""
                      },
                      "value": "node"
                    },
                    "src": "1383:18:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 54397,
                  "nodeType": "ExpressionStatement",
                  "src": "1383:18:66"
                },
                {
                  "expression": {
                    "id": 54402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 54398,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54385,
                        "src": "1411:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 54400,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 54399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1418:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1411:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "2e2f746573742f736372697074732f67657431696e636851756f74652e6a73",
                      "id": 54401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1423:33:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_77a52096d9378da4f1d5cf6ffaa3bc76f280091ddb5bfd53ab95107d8aebd03c",
                        "typeString": "literal_string \"./test/scripts/get1inchQuote.js\""
                      },
                      "value": "./test/scripts/get1inchQuote.js"
                    },
                    "src": "1411:45:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 54403,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:45:66"
                },
                {
                  "expression": {
                    "id": 54411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 54404,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54385,
                        "src": "1466:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 54406,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 54405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1473:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1466:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 54409,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54371,
                          "src": "1490:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 54407,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6992,
                          "src": "1478:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$18679",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 54408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1481:8:66",
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17757,
                        "src": "1478:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (address) pure external returns (string memory)"
                        }
                      },
                      "id": 54410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1478:17:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1466:29:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 54412,
                  "nodeType": "ExpressionStatement",
                  "src": "1466:29:66"
                },
                {
                  "expression": {
                    "id": 54420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 54413,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54385,
                        "src": "1505:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 54415,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 54414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1512:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1505:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 54418,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54373,
                          "src": "1529:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 54416,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6992,
                          "src": "1517:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$18679",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 54417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1520:8:66",
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17757,
                        "src": "1517:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (address) pure external returns (string memory)"
                        }
                      },
                      "id": 54419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1517:15:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1505:27:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 54421,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:27:66"
                },
                {
                  "expression": {
                    "id": 54433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 54422,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54385,
                        "src": "1542:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 54424,
                      "indexExpression": {
                        "hexValue": "34",
                        "id": 54423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1549:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1542:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 54429,
                                "name": "swap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54376,
                                "src": "1574:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                                  "typeString": "struct Swap memory"
                                }
                              },
                              "id": 54430,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1579:7:66",
                              "memberName": "tokenIn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54267,
                              "src": "1574:12:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$49165",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$49165",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 54428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1566:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 54427,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1566:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 54431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1566:21:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 54425,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6992,
                          "src": "1554:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$18679",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 54426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1557:8:66",
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17757,
                        "src": "1554:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (address) pure external returns (string memory)"
                        }
                      },
                      "id": 54432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1554:34:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1542:46:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 54434,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:46:66"
                },
                {
                  "expression": {
                    "id": 54446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 54435,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54385,
                        "src": "1598:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 54437,
                      "indexExpression": {
                        "hexValue": "35",
                        "id": 54436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1605:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1598:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 54442,
                                "name": "swap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54376,
                                "src": "1630:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                                  "typeString": "struct Swap memory"
                                }
                              },
                              "id": 54443,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1635:8:66",
                              "memberName": "tokenOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54270,
                              "src": "1630:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$49165",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$49165",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 54441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1622:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 54440,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1622:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 54444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1622:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 54438,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6992,
                          "src": "1610:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$18679",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 54439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1613:8:66",
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17757,
                        "src": "1610:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (address) pure external returns (string memory)"
                        }
                      },
                      "id": 54445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1610:35:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1598:47:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 54447,
                  "nodeType": "ExpressionStatement",
                  "src": "1598:47:66"
                },
                {
                  "expression": {
                    "id": 54456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 54448,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54385,
                        "src": "1655:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 54450,
                      "indexExpression": {
                        "hexValue": "36",
                        "id": 54449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1662:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1655:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 54453,
                            "name": "swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54376,
                            "src": "1679:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                              "typeString": "struct Swap memory"
                            }
                          },
                          "id": 54454,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1684:6:66",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54272,
                          "src": "1679:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 54451,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6992,
                          "src": "1667:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$18679",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 54452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1670:8:66",
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17785,
                        "src": "1667:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (uint256) pure external returns (string memory)"
                        }
                      },
                      "id": 54455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1667:24:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1655:36:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 54457,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:36:66"
                },
                {
                  "expression": {
                    "id": 54466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 54458,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54385,
                        "src": "1701:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 54460,
                      "indexExpression": {
                        "hexValue": "37",
                        "id": 54459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1708:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1701:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 54463,
                            "name": "swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54376,
                            "src": "1725:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                              "typeString": "struct Swap memory"
                            }
                          },
                          "id": 54464,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1730:8:66",
                          "memberName": "slippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54278,
                          "src": "1725:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 54461,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6992,
                          "src": "1713:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$18679",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 54462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1716:8:66",
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17785,
                        "src": "1713:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (uint256) pure external returns (string memory)"
                        }
                      },
                      "id": 54465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1713:26:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1701:38:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 54467,
                  "nodeType": "ExpressionStatement",
                  "src": "1701:38:66"
                },
                {
                  "assignments": [
                    54469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54469,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "1763:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 54477,
                      "src": "1750:16:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 54468,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1750:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54474,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54472,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54385,
                        "src": "1776:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 54470,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6992,
                        "src": "1769:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18679",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 54471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1772:3:66",
                      "memberName": "ffi",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17343,
                      "src": "1769:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory[] memory) external returns (bytes memory)"
                      }
                    },
                    "id": 54473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1769:14:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1750:33:66"
                },
                {
                  "expression": {
                    "id": 54475,
                    "name": "res",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54469,
                    "src": "1801:3:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 54380,
                  "id": 54476,
                  "nodeType": "Return",
                  "src": "1794:10:66"
                }
              ]
            },
            "functionSelector": "6df512c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getSwapData",
            "nameLocation": "1216:12:66",
            "parameters": {
              "id": 54377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54371,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1237:4:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 54478,
                  "src": "1229:12:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1229:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54373,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1251:2:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 54478,
                  "src": "1243:10:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54376,
                  "mutability": "mutable",
                  "name": "swap",
                  "nameLocation": "1267:4:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 54478,
                  "src": "1255:16:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                    "typeString": "struct Swap"
                  },
                  "typeName": {
                    "id": 54375,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54374,
                      "name": "Swap",
                      "nameLocations": [
                        "1255:4:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54279,
                      "src": "1255:4:66"
                    },
                    "referencedDeclaration": 54279,
                    "src": "1255:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$54279_storage_ptr",
                      "typeString": "struct Swap"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1228:44:66"
            },
            "returnParameters": {
              "id": 54380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54379,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54478,
                  "src": "1305:12:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54378,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1304:14:66"
            },
            "scope": 54479,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54280,
              "name": "Test",
              "nameLocations": [
                "422:4:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16922,
              "src": "422:4:66"
            },
            "id": 54281,
            "nodeType": "InheritanceSpecifier",
            "src": "422:4:66"
          }
        ],
        "canonicalName": "OffChainCalls",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54479,
          16922,
          16871,
          12407,
          12082,
          11289,
          9229,
          8465,
          6933,
          6999,
          6996
        ],
        "name": "OffChainCalls",
        "nameLocation": "405:13:66",
        "scope": 55115,
        "usedErrors": []
      },
      {
        "id": 54552,
        "nodeType": "ContractDefinition",
        "src": "1815:1343:66",
        "nodes": [
          {
            "id": 54481,
            "nodeType": "VariableDeclaration",
            "src": "1839:33:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "DOMAIN_SEPARATOR",
            "nameLocation": "1856:16:66",
            "scope": 54552,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 54480,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1839:7:66",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54491,
            "nodeType": "FunctionDefinition",
            "src": "1879:92:66",
            "nodes": [],
            "body": {
              "id": 54490,
              "nodeType": "Block",
              "src": "1918:53:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 54488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54486,
                      "name": "DOMAIN_SEPARATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54481,
                      "src": "1928:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54487,
                      "name": "_DOMAIN_SEPARATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54483,
                      "src": "1947:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1928:36:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 54489,
                  "nodeType": "ExpressionStatement",
                  "src": "1928:36:66"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 54484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54483,
                  "mutability": "mutable",
                  "name": "_DOMAIN_SEPARATOR",
                  "nameLocation": "1899:17:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 54491,
                  "src": "1891:25:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 54482,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1890:27:66"
            },
            "returnParameters": {
              "id": 54485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1918:0:66"
            },
            "scope": 54552,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54494,
            "nodeType": "VariableDeclaration",
            "src": "2081:116:66",
            "nodes": [],
            "constant": true,
            "functionSelector": "30adf81f",
            "mutability": "constant",
            "name": "PERMIT_TYPEHASH",
            "nameLocation": "2105:15:66",
            "scope": 54552,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 54492,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2081:7:66",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
              "id": 54493,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2131:66:66",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
                "typeString": "int_const 4995...(69 digits omitted)...3241"
              },
              "value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
            },
            "visibility": "public"
          },
          {
            "id": 54505,
            "nodeType": "StructDefinition",
            "src": "2204:141:66",
            "nodes": [],
            "canonicalName": "SigUtils.Permit",
            "members": [
              {
                "constant": false,
                "id": 54496,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "2236:5:66",
                "nodeType": "VariableDeclaration",
                "scope": 54505,
                "src": "2228:13:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 54495,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2228:7:66",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54498,
                "mutability": "mutable",
                "name": "spender",
                "nameLocation": "2259:7:66",
                "nodeType": "VariableDeclaration",
                "scope": 54505,
                "src": "2251:15:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 54497,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2251:7:66",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54500,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "2284:5:66",
                "nodeType": "VariableDeclaration",
                "scope": 54505,
                "src": "2276:13:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54499,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2276:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54502,
                "mutability": "mutable",
                "name": "nonce",
                "nameLocation": "2307:5:66",
                "nodeType": "VariableDeclaration",
                "scope": 54505,
                "src": "2299:13:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54501,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2299:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54504,
                "mutability": "mutable",
                "name": "deadline",
                "nameLocation": "2330:8:66",
                "nodeType": "VariableDeclaration",
                "scope": 54505,
                "src": "2322:16:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54503,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2322:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Permit",
            "nameLocation": "2211:6:66",
            "scope": 54552,
            "visibility": "public"
          },
          {
            "id": 54531,
            "nodeType": "FunctionDefinition",
            "src": "2388:380:66",
            "nodes": [],
            "body": {
              "id": 54530,
              "nodeType": "Block",
              "src": "2494:274:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54516,
                            "name": "PERMIT_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54494,
                            "src": "2562:15:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 54517,
                              "name": "_permit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54508,
                              "src": "2595:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit_$54505_memory_ptr",
                                "typeString": "struct SigUtils.Permit memory"
                              }
                            },
                            "id": 54518,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2603:5:66",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54496,
                            "src": "2595:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 54519,
                              "name": "_permit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54508,
                              "src": "2626:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit_$54505_memory_ptr",
                                "typeString": "struct SigUtils.Permit memory"
                              }
                            },
                            "id": 54520,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2634:7:66",
                            "memberName": "spender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54498,
                            "src": "2626:15:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 54521,
                              "name": "_permit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54508,
                              "src": "2659:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit_$54505_memory_ptr",
                                "typeString": "struct SigUtils.Permit memory"
                              }
                            },
                            "id": 54522,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2667:5:66",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54500,
                            "src": "2659:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 54523,
                              "name": "_permit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54508,
                              "src": "2690:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit_$54505_memory_ptr",
                                "typeString": "struct SigUtils.Permit memory"
                              }
                            },
                            "id": 54524,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2698:5:66",
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54502,
                            "src": "2690:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 54525,
                              "name": "_permit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54508,
                              "src": "2721:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit_$54505_memory_ptr",
                                "typeString": "struct SigUtils.Permit memory"
                              }
                            },
                            "id": 54526,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2729:8:66",
                            "memberName": "deadline",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54504,
                            "src": "2721:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 54514,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2534:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 54515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2538:6:66",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2534:10:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 54527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2534:217:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 54513,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2511:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 54528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2511:250:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 54512,
                  "id": 54529,
                  "nodeType": "Return",
                  "src": "2504:257:66"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStructHash",
            "nameLocation": "2397:13:66",
            "parameters": {
              "id": 54509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54508,
                  "mutability": "mutable",
                  "name": "_permit",
                  "nameLocation": "2425:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 54531,
                  "src": "2411:21:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Permit_$54505_memory_ptr",
                    "typeString": "struct SigUtils.Permit"
                  },
                  "typeName": {
                    "id": 54507,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54506,
                      "name": "Permit",
                      "nameLocations": [
                        "2411:6:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54505,
                      "src": "2411:6:66"
                    },
                    "referencedDeclaration": 54505,
                    "src": "2411:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permit_$54505_storage_ptr",
                      "typeString": "struct SigUtils.Permit"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2410:23:66"
            },
            "returnParameters": {
              "id": 54512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54511,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54531,
                  "src": "2481:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 54510,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2480:9:66"
            },
            "scope": 54552,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 54551,
            "nodeType": "FunctionDefinition",
            "src": "2892:264:66",
            "nodes": [],
            "body": {
              "id": 54550,
              "nodeType": "Block",
              "src": "2999:157:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 54542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3073:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 54543,
                            "name": "DOMAIN_SEPARATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54481,
                            "src": "3085:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 54545,
                                "name": "_permit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54534,
                                "src": "3117:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Permit_$54505_memory_ptr",
                                  "typeString": "struct SigUtils.Permit memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Permit_$54505_memory_ptr",
                                  "typeString": "struct SigUtils.Permit memory"
                                }
                              ],
                              "id": 54544,
                              "name": "getStructHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54531,
                              "src": "3103:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Permit_$54505_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (struct SigUtils.Permit memory) pure returns (bytes32)"
                              }
                            },
                            "id": 54546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3103:22:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 54540,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3039:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 54541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3043:12:66",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3039:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 54547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3039:100:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 54539,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3016:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 54548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3016:133:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 54538,
                  "id": 54549,
                  "nodeType": "Return",
                  "src": "3009:140:66"
                }
              ]
            },
            "functionSelector": "ba20b89d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTypedDataHash",
            "nameLocation": "2901:16:66",
            "parameters": {
              "id": 54535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54534,
                  "mutability": "mutable",
                  "name": "_permit",
                  "nameLocation": "2932:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 54551,
                  "src": "2918:21:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Permit_$54505_memory_ptr",
                    "typeString": "struct SigUtils.Permit"
                  },
                  "typeName": {
                    "id": 54533,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54532,
                      "name": "Permit",
                      "nameLocations": [
                        "2918:6:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54505,
                      "src": "2918:6:66"
                    },
                    "referencedDeclaration": 54505,
                    "src": "2918:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permit_$54505_storage_ptr",
                      "typeString": "struct SigUtils.Permit"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2917:23:66"
            },
            "returnParameters": {
              "id": 54538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54537,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54551,
                  "src": "2986:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 54536,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2986:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2985:9:66"
            },
            "scope": 54552,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SigUtils",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54552
        ],
        "name": "SigUtils",
        "nameLocation": "1824:8:66",
        "scope": 55115,
        "usedErrors": []
      },
      {
        "id": 55114,
        "nodeType": "ContractDefinition",
        "src": "3160:4808:66",
        "nodes": [
          {
            "id": 54557,
            "nodeType": "VariableDeclaration",
            "src": "3203:13:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "zapper",
            "nameLocation": "3210:6:66",
            "scope": 55114,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Zapper_$55535",
              "typeString": "contract Zapper"
            },
            "typeName": {
              "id": 54556,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54555,
                "name": "Zapper",
                "nameLocations": [
                  "3203:6:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 55535,
                "src": "3203:6:66"
              },
              "referencedDeclaration": 55535,
              "src": "3203:6:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Zapper_$55535",
                "typeString": "contract Zapper"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54560,
            "nodeType": "VariableDeclaration",
            "src": "3222:26:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "sigUtils",
            "nameLocation": "3240:8:66",
            "scope": 55114,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SigUtils_$54552",
              "typeString": "contract SigUtils"
            },
            "typeName": {
              "id": 54559,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54558,
                "name": "SigUtils",
                "nameLocations": [
                  "3222:8:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54552,
                "src": "3222:8:66"
              },
              "referencedDeclaration": 54552,
              "src": "3222:8:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SigUtils_$54552",
                "typeString": "contract SigUtils"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54564,
            "nodeType": "UsingForDirective",
            "src": "3333:27:66",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 54561,
              "name": "SafeERC20",
              "nameLocations": [
                "3339:9:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49602,
              "src": "3339:9:66"
            },
            "typeName": {
              "id": 54563,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54562,
                "name": "IERC20",
                "nameLocations": [
                  "3353:6:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49165,
                "src": "3353:6:66"
              },
              "referencedDeclaration": 49165,
              "src": "3353:6:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$49165",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 54575,
            "nodeType": "FunctionDefinition",
            "src": "3366:62:66",
            "nodes": [],
            "body": {
              "id": 54574,
              "nodeType": "Block",
              "src": "3390:38:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 54572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54567,
                      "name": "zapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54557,
                      "src": "3400:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zapper_$55535",
                        "typeString": "contract Zapper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 54570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3409:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Zapper_$55535_$",
                          "typeString": "function () returns (contract Zapper)"
                        },
                        "typeName": {
                          "id": 54569,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 54568,
                            "name": "Zapper",
                            "nameLocations": [
                              "3413:6:66"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 55535,
                            "src": "3413:6:66"
                          },
                          "referencedDeclaration": 55535,
                          "src": "3413:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zapper_$55535",
                            "typeString": "contract Zapper"
                          }
                        }
                      },
                      "id": 54571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3409:12:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zapper_$55535",
                        "typeString": "contract Zapper"
                      }
                    },
                    "src": "3400:21:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Zapper_$55535",
                      "typeString": "contract Zapper"
                    }
                  },
                  "id": 54573,
                  "nodeType": "ExpressionStatement",
                  "src": "3400:21:66"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "3375:5:66",
            "parameters": {
              "id": 54565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3380:2:66"
            },
            "returnParameters": {
              "id": 54566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3390:0:66"
            },
            "scope": 55114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54604,
            "nodeType": "FunctionDefinition",
            "src": "3434:235:66",
            "nodes": [],
            "body": {
              "id": 54603,
              "nodeType": "Block",
              "src": "3491:178:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54580,
                      "mutability": "mutable",
                      "name": "usdcToWstEth",
                      "nameLocation": "3513:12:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 54603,
                      "src": "3501:24:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                        "typeString": "struct Swap"
                      },
                      "typeName": {
                        "id": 54579,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54578,
                          "name": "Swap",
                          "nameLocations": [
                            "3501:4:66"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54279,
                          "src": "3501:4:66"
                        },
                        "referencedDeclaration": 54279,
                        "src": "3501:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_storage_ptr",
                          "typeString": "struct Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54595,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54582,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54284,
                        "src": "3545:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54583,
                        "name": "_USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54311,
                        "src": "3554:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$49087",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 54584,
                        "name": "_WSTETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54347,
                        "src": "3561:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$49087",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        },
                        "id": 54587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31353030",
                          "id": 54585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3570:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1500_by_1",
                            "typeString": "int_const 1500"
                          },
                          "value": "1500"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316536",
                          "id": 54586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3577:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1e6"
                        },
                        "src": "3570:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 54588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3582:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 54591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3593:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 54590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3585:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54589,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3585:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3585:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 54593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3597:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$49087",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$49087",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "id": 54581,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54279,
                      "src": "3540:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$54279_storage_ptr_$",
                        "typeString": "type(struct Swap storage pointer)"
                      }
                    },
                    "id": 54594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3540:60:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                      "typeString": "struct Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3501:99:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54597,
                        "name": "usdcToWstEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54580,
                        "src": "3637:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        },
                        "id": 54600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31353030",
                          "id": 54598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3651:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1500_by_1",
                            "typeString": "int_const 1500"
                          },
                          "value": "1500"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316536",
                          "id": 54599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3658:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1e6"
                        },
                        "src": "3651:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        },
                        {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        }
                      ],
                      "id": 54596,
                      "name": "_failZapAndDoSomething_eth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54869,
                      "src": "3610:26:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$54279_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct Swap memory,uint256)"
                      }
                    },
                    "id": 54601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3610:52:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54602,
                  "nodeType": "ExpressionStatement",
                  "src": "3610:52:66"
                }
              ]
            },
            "functionSelector": "db8fd471",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_failZapAndDoSomethingERC20PlusEth",
            "nameLocation": "3443:38:66",
            "parameters": {
              "id": 54576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3481:2:66"
            },
            "returnParameters": {
              "id": 54577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3491:0:66"
            },
            "scope": 55114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54628,
            "nodeType": "FunctionDefinition",
            "src": "3675:198:66",
            "nodes": [],
            "body": {
              "id": 54627,
              "nodeType": "Block",
              "src": "3722:151:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54609,
                      "mutability": "mutable",
                      "name": "ethToWstEth",
                      "nameLocation": "3744:11:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 54627,
                      "src": "3732:23:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                        "typeString": "struct Swap"
                      },
                      "typeName": {
                        "id": 54608,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54607,
                          "name": "Swap",
                          "nameLocations": [
                            "3732:4:66"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54279,
                          "src": "3732:4:66"
                        },
                        "referencedDeclaration": 54279,
                        "src": "3732:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_storage_ptr",
                          "typeString": "struct Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54622,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54611,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54284,
                        "src": "3775:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54612,
                        "name": "_ETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54338,
                        "src": "3784:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$49087",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 54613,
                        "name": "_APE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54293,
                        "src": "3790:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$49087",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 54614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3796:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "31",
                        "id": 54615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3802:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 54618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3813:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 54617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3805:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54616,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3805:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3805:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "323030",
                        "id": 54620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3817:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$49087",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$49087",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "id": 54610,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54279,
                      "src": "3770:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$54279_storage_ptr_$",
                        "typeString": "type(struct Swap storage pointer)"
                      }
                    },
                    "id": 54621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3770:51:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                      "typeString": "struct Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3732:89:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54624,
                        "name": "ethToWstEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54609,
                        "src": "3854:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 54623,
                      "name": "_zapAndDoSomething_eth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54818,
                      "src": "3831:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$54279_memory_ptr_$returns$__$",
                        "typeString": "function (struct Swap memory)"
                      }
                    },
                    "id": 54625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3831:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54626,
                  "nodeType": "ExpressionStatement",
                  "src": "3831:35:66"
                }
              ]
            },
            "functionSelector": "3f972559",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_zapAndDoSomethingEthAPE",
            "nameLocation": "3684:28:66",
            "parameters": {
              "id": 54605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3712:2:66"
            },
            "returnParameters": {
              "id": 54606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3722:0:66"
            },
            "scope": 55114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54657,
            "nodeType": "FunctionDefinition",
            "src": "3879:242:66",
            "nodes": [],
            "body": {
              "id": 54656,
              "nodeType": "Block",
              "src": "3938:183:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54633,
                      "mutability": "mutable",
                      "name": "ethToApe",
                      "nameLocation": "3960:8:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 54656,
                      "src": "3948:20:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                        "typeString": "struct Swap"
                      },
                      "typeName": {
                        "id": 54632,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54631,
                          "name": "Swap",
                          "nameLocations": [
                            "3948:4:66"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54279,
                          "src": "3948:4:66"
                        },
                        "referencedDeclaration": 54279,
                        "src": "3948:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_storage_ptr",
                          "typeString": "struct Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54650,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54635,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54284,
                        "src": "3989:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54637,
                            "name": "_ETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54338,
                            "src": "4005:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$49087",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$49087",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 54636,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49165,
                          "src": "3998:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$49165_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 54638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3998:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54640,
                            "name": "_APE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54293,
                            "src": "4019:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$49087",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$49087",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 54639,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49165,
                          "src": "4012:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$49165_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 54641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4012:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 54642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4026:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "31",
                        "id": 54643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4032:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 54646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4043:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 54645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4035:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54644,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4035:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4035:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 54648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4047:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "id": 54634,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54279,
                      "src": "3971:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$54279_storage_ptr_$",
                        "typeString": "type(struct Swap storage pointer)"
                      }
                    },
                    "id": 54649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3971:91:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                      "typeString": "struct Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3948:114:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54652,
                        "name": "ethToApe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54633,
                        "src": "4099:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      },
                      {
                        "hexValue": "32653138",
                        "id": 54653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4109:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 54651,
                      "name": "_failZapAndDoSomething_eth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54869,
                      "src": "4072:26:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$54279_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct Swap memory,uint256)"
                      }
                    },
                    "id": 54654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4072:42:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54655,
                  "nodeType": "ExpressionStatement",
                  "src": "4072:42:66"
                }
              ]
            },
            "functionSelector": "1e25e048",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_inconsistantZapAndDoSomethingEthAPE",
            "nameLocation": "3888:40:66",
            "parameters": {
              "id": 54629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3928:2:66"
            },
            "returnParameters": {
              "id": 54630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3938:0:66"
            },
            "scope": 55114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54712,
            "nodeType": "FunctionDefinition",
            "src": "4127:472:66",
            "nodes": [],
            "body": {
              "id": 54711,
              "nodeType": "Block",
              "src": "4182:417:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54664,
                      "mutability": "mutable",
                      "name": "swapData",
                      "nameLocation": "4205:8:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 54711,
                      "src": "4192:21:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 54663,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4192:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54676,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54668,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54557,
                            "src": "4249:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 54667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4241:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54666,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4241:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4241:15:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54672,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54557,
                            "src": "4266:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 54671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4258:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54670,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4258:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4258:15:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54674,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54660,
                        "src": "4275:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 54665,
                      "name": "_getSwapData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54478,
                      "src": "4228:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Swap_$54279_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,struct Swap memory) returns (bytes memory)"
                      }
                    },
                    "id": 54675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4228:54:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4192:90:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 54677,
                      "name": "_setUpVaultAndZapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55026,
                      "src": "4292:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 54678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4292:22:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54679,
                  "nodeType": "ExpressionStatement",
                  "src": "4292:22:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54681,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54660,
                        "src": "4336:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 54680,
                      "name": "_getTokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55113,
                      "src": "4324:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$54279_memory_ptr_$returns$__$",
                        "typeString": "function (struct Swap memory)"
                      }
                    },
                    "id": 54682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4324:19:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54683,
                  "nodeType": "ExpressionStatement",
                  "src": "4324:19:66"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 54690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 54685,
                          "name": "swapData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54664,
                          "src": "4367:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 54684,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "4357:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 54686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4357:19:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "",
                          "id": 54688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "hexString",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4390:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "id": 54687,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "4380:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 54689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4380:16:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4357:39:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54696,
                  "nodeType": "IfStatement",
                  "src": "4353:62:66",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 54691,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6992,
                          "src": "4398:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$18679",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 54693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4401:12:66",
                        "memberName": "expectRevert",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18659,
                        "src": "4398:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                          "typeString": "function () external"
                        }
                      },
                      "id": 54694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4398:17:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 54695,
                    "nodeType": "ExpressionStatement",
                    "src": "4398:17:66"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54700,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54660,
                          "src": "4463:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54701,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4470:7:66",
                        "memberName": "tokenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54267,
                        "src": "4463:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 54702,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54660,
                          "src": "4491:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54703,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4498:8:66",
                        "memberName": "tokenOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54270,
                        "src": "4491:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 54704,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54660,
                          "src": "4520:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54705,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4527:6:66",
                        "memberName": "router",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54264,
                        "src": "4520:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 54706,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54660,
                          "src": "4547:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54707,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4554:6:66",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54272,
                        "src": "4547:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 54708,
                        "name": "swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54664,
                        "src": "4574:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 54697,
                        "name": "zapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54557,
                        "src": "4425:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Zapper_$55535",
                          "typeString": "contract Zapper"
                        }
                      },
                      "id": 54699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4432:17:66",
                      "memberName": "zapAndDoSomething",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55444,
                      "src": "4425:24:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$49165_$_t_contract$_IERC20_$49165_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                      }
                    },
                    "id": 54709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4425:167:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54710,
                  "nodeType": "ExpressionStatement",
                  "src": "4425:167:66"
                }
              ]
            },
            "functionSelector": "a34d30cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_zapAndDoSomething",
            "nameLocation": "4136:18:66",
            "parameters": {
              "id": 54661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54660,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4167:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 54712,
                  "src": "4155:18:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                    "typeString": "struct Swap"
                  },
                  "typeName": {
                    "id": 54659,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54658,
                      "name": "Swap",
                      "nameLocations": [
                        "4155:4:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54279,
                      "src": "4155:4:66"
                    },
                    "referencedDeclaration": 54279,
                    "src": "4155:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$54279_storage_ptr",
                      "typeString": "struct Swap"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4154:20:66"
            },
            "returnParameters": {
              "id": 54662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4182:0:66"
            },
            "scope": 55114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54760,
            "nodeType": "FunctionDefinition",
            "src": "4605:440:66",
            "nodes": [],
            "body": {
              "id": 54759,
              "nodeType": "Block",
              "src": "4680:365:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54721,
                      "mutability": "mutable",
                      "name": "swapData",
                      "nameLocation": "4703:8:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 54759,
                      "src": "4690:21:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 54720,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4690:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54733,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54725,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54557,
                            "src": "4747:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 54724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4739:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54723,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4739:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4739:15:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54729,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54557,
                            "src": "4764:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 54728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4756:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54727,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4756:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4756:15:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54731,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54715,
                        "src": "4773:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 54722,
                      "name": "_getSwapData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54478,
                      "src": "4726:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Swap_$54279_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,struct Swap memory) returns (bytes memory)"
                      }
                    },
                    "id": 54732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4726:54:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4690:90:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 54734,
                      "name": "_setUpVaultAndZapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55026,
                      "src": "4790:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 54735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4790:22:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54736,
                  "nodeType": "ExpressionStatement",
                  "src": "4790:22:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54738,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54715,
                        "src": "4834:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 54737,
                      "name": "_getTokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55113,
                      "src": "4822:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$54279_memory_ptr_$returns$__$",
                        "typeString": "function (struct Swap memory)"
                      }
                    },
                    "id": 54739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4822:19:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54740,
                  "nodeType": "ExpressionStatement",
                  "src": "4822:19:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 54741,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6992,
                        "src": "4851:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18679",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 54743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4854:12:66",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18659,
                      "src": "4851:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 54744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4851:17:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54745,
                  "nodeType": "ExpressionStatement",
                  "src": "4851:17:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54749,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54715,
                          "src": "4916:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54750,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4923:7:66",
                        "memberName": "tokenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54267,
                        "src": "4916:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 54751,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54715,
                          "src": "4944:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54752,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4951:8:66",
                        "memberName": "tokenOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54270,
                        "src": "4944:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 54753,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54715,
                          "src": "4973:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54754,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4980:6:66",
                        "memberName": "router",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54264,
                        "src": "4973:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54755,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54717,
                        "src": "5000:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 54756,
                        "name": "swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54721,
                        "src": "5020:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 54746,
                        "name": "zapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54557,
                        "src": "4878:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Zapper_$55535",
                          "typeString": "contract Zapper"
                        }
                      },
                      "id": 54748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4885:17:66",
                      "memberName": "zapAndDoSomething",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55444,
                      "src": "4878:24:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$49165_$_t_contract$_IERC20_$49165_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                      }
                    },
                    "id": 54757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4878:160:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54758,
                  "nodeType": "ExpressionStatement",
                  "src": "4878:160:66"
                }
              ]
            },
            "functionSelector": "2c747b21",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_failZapAndDoSomething",
            "nameLocation": "4614:22:66",
            "parameters": {
              "id": 54718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54715,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4649:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 54760,
                  "src": "4637:18:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                    "typeString": "struct Swap"
                  },
                  "typeName": {
                    "id": 54714,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54713,
                      "name": "Swap",
                      "nameLocations": [
                        "4637:4:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54279,
                      "src": "4637:4:66"
                    },
                    "referencedDeclaration": 54279,
                    "src": "4637:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$54279_storage_ptr",
                      "typeString": "struct Swap"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54717,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4665:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 54760,
                  "src": "4657:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4657:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4636:36:66"
            },
            "returnParameters": {
              "id": 54719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4680:0:66"
            },
            "scope": 55114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54818,
            "nodeType": "FunctionDefinition",
            "src": "5051:501:66",
            "nodes": [],
            "body": {
              "id": 54817,
              "nodeType": "Block",
              "src": "5110:442:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54767,
                      "mutability": "mutable",
                      "name": "swapData",
                      "nameLocation": "5133:8:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 54817,
                      "src": "5120:21:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 54766,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5120:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54779,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54771,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54557,
                            "src": "5177:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 54770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5169:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54769,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5169:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5169:15:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54775,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54557,
                            "src": "5194:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 54774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5186:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54773,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5186:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5186:15:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54777,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54763,
                        "src": "5203:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 54768,
                      "name": "_getSwapData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54478,
                      "src": "5156:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Swap_$54279_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,struct Swap memory) returns (bytes memory)"
                      }
                    },
                    "id": 54778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5156:54:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5120:90:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 54780,
                      "name": "_setUpVaultAndZapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55026,
                      "src": "5220:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 54781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5220:22:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54782,
                  "nodeType": "ExpressionStatement",
                  "src": "5220:22:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54784,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54763,
                        "src": "5264:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 54783,
                      "name": "_getTokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55113,
                      "src": "5252:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$54279_memory_ptr_$returns$__$",
                        "typeString": "function (struct Swap memory)"
                      }
                    },
                    "id": 54785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5252:19:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54786,
                  "nodeType": "ExpressionStatement",
                  "src": "5252:19:66"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 54793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 54788,
                          "name": "swapData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54767,
                          "src": "5295:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 54787,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "5285:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 54789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5285:19:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "",
                          "id": 54791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "hexString",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5318:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "id": 54790,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "5308:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 54792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5308:16:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5285:39:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54799,
                  "nodeType": "IfStatement",
                  "src": "5281:62:66",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 54794,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6992,
                          "src": "5326:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$18679",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 54796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5329:12:66",
                        "memberName": "expectRevert",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18659,
                        "src": "5326:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                          "typeString": "function () external"
                        }
                      },
                      "id": 54797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5326:17:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 54798,
                    "nodeType": "ExpressionStatement",
                    "src": "5326:17:66"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54806,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54763,
                          "src": "5413:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54807,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5420:7:66",
                        "memberName": "tokenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54267,
                        "src": "5413:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 54808,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54763,
                          "src": "5442:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54809,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5449:8:66",
                        "memberName": "tokenOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54270,
                        "src": "5442:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 54810,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54763,
                          "src": "5472:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54811,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5479:6:66",
                        "memberName": "router",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54264,
                        "src": "5472:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 54812,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54763,
                          "src": "5500:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54813,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5507:6:66",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54272,
                        "src": "5500:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 54814,
                        "name": "swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54767,
                        "src": "5527:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$49165",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$49165",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 54800,
                          "name": "zapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54557,
                          "src": "5353:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zapper_$55535",
                            "typeString": "contract Zapper"
                          }
                        },
                        "id": 54802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5360:17:66",
                        "memberName": "zapAndDoSomething",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55444,
                        "src": "5353:24:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$49165_$_t_contract$_IERC20_$49165_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                        }
                      },
                      "id": 54805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 54803,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54763,
                            "src": "5385:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                              "typeString": "struct Swap memory"
                            }
                          },
                          "id": 54804,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5392:6:66",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54272,
                          "src": "5385:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5353:46:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$49165_$_t_contract$_IERC20_$49165_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                      }
                    },
                    "id": 54815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5353:192:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54816,
                  "nodeType": "ExpressionStatement",
                  "src": "5353:192:66"
                }
              ]
            },
            "functionSelector": "a63ac536",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_zapAndDoSomething_eth",
            "nameLocation": "5060:22:66",
            "parameters": {
              "id": 54764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54763,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "5095:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 54818,
                  "src": "5083:18:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                    "typeString": "struct Swap"
                  },
                  "typeName": {
                    "id": 54762,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54761,
                      "name": "Swap",
                      "nameLocations": [
                        "5083:4:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54279,
                      "src": "5083:4:66"
                    },
                    "referencedDeclaration": 54279,
                    "src": "5083:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$54279_storage_ptr",
                      "typeString": "struct Swap"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5082:20:66"
            },
            "returnParameters": {
              "id": 54765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5110:0:66"
            },
            "scope": 55114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54869,
            "nodeType": "FunctionDefinition",
            "src": "5558:467:66",
            "nodes": [],
            "body": {
              "id": 54868,
              "nodeType": "Block",
              "src": "5649:376:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54827
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54827,
                      "mutability": "mutable",
                      "name": "swapData",
                      "nameLocation": "5672:8:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 54868,
                      "src": "5659:21:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 54826,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5659:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54839,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54831,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54557,
                            "src": "5704:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 54830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5696:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54829,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5696:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5696:15:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54835,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54557,
                            "src": "5721:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 54834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5713:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54833,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5713:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5713:15:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54837,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54821,
                        "src": "5730:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 54828,
                      "name": "_getSwapData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54478,
                      "src": "5683:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Swap_$54279_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,struct Swap memory) returns (bytes memory)"
                      }
                    },
                    "id": 54838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5683:54:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5659:78:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 54840,
                      "name": "_setUpVaultAndZapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55026,
                      "src": "5747:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 54841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5747:22:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54842,
                  "nodeType": "ExpressionStatement",
                  "src": "5747:22:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54844,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54821,
                        "src": "5791:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 54843,
                      "name": "_getTokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55113,
                      "src": "5779:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$54279_memory_ptr_$returns$__$",
                        "typeString": "function (struct Swap memory)"
                      }
                    },
                    "id": 54845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5779:19:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54846,
                  "nodeType": "ExpressionStatement",
                  "src": "5779:19:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 54847,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6992,
                        "src": "5808:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18679",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 54849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5811:12:66",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18659,
                      "src": "5808:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 54850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5808:17:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54851,
                  "nodeType": "ExpressionStatement",
                  "src": "5808:17:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54857,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54821,
                          "src": "5888:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54858,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5895:7:66",
                        "memberName": "tokenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54267,
                        "src": "5888:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 54859,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54821,
                          "src": "5917:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54860,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5924:8:66",
                        "memberName": "tokenOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54270,
                        "src": "5917:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 54861,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54821,
                          "src": "5946:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54862,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5953:6:66",
                        "memberName": "router",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54264,
                        "src": "5946:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 54863,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54821,
                          "src": "5973:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54864,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5980:6:66",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54272,
                        "src": "5973:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 54865,
                        "name": "swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54827,
                        "src": "6000:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$49165",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$49165",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 54852,
                          "name": "zapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54557,
                          "src": "5835:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zapper_$55535",
                            "typeString": "contract Zapper"
                          }
                        },
                        "id": 54854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5842:17:66",
                        "memberName": "zapAndDoSomething",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55444,
                        "src": "5835:24:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$49165_$_t_contract$_IERC20_$49165_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                        }
                      },
                      "id": 54856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 54855,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54823,
                          "src": "5867:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5835:39:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$49165_$_t_contract$_IERC20_$49165_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                      }
                    },
                    "id": 54866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5835:183:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54867,
                  "nodeType": "ExpressionStatement",
                  "src": "5835:183:66"
                }
              ]
            },
            "functionSelector": "d171493f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_failZapAndDoSomething_eth",
            "nameLocation": "5567:26:66",
            "parameters": {
              "id": 54824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54821,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "5606:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 54869,
                  "src": "5594:18:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                    "typeString": "struct Swap"
                  },
                  "typeName": {
                    "id": 54820,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54819,
                      "name": "Swap",
                      "nameLocations": [
                        "5594:4:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54279,
                      "src": "5594:4:66"
                    },
                    "referencedDeclaration": 54279,
                    "src": "5594:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$54279_storage_ptr",
                      "typeString": "struct Swap"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54823,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5622:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 54869,
                  "src": "5614:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5614:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5593:36:66"
            },
            "returnParameters": {
              "id": 54825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5649:0:66"
            },
            "scope": 55114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55009,
            "nodeType": "FunctionDefinition",
            "src": "6031:1087:66",
            "nodes": [],
            "body": {
              "id": 55008,
              "nodeType": "Block",
              "src": "6089:1029:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54874,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "6111:6:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 55008,
                      "src": "6099:18:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                        "typeString": "struct Swap"
                      },
                      "typeName": {
                        "id": 54873,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54872,
                          "name": "Swap",
                          "nameLocations": [
                            "6099:4:66"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54279,
                          "src": "6099:4:66"
                        },
                        "referencedDeclaration": 54279,
                        "src": "6099:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_storage_ptr",
                          "typeString": "struct Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54897,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54876,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54284,
                        "src": "6138:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54878,
                            "name": "_USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54311,
                            "src": "6166:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$49087",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$49087",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 54877,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49165,
                          "src": "6159:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$49165_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 54879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6159:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54881,
                            "name": "_WSTETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54347,
                            "src": "6193:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$49087",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$49087",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 54880,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49165,
                          "src": "6186:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$49165_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 54882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6186:15:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        },
                        "id": 54885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31353030",
                          "id": 54883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6215:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1500_by_1",
                            "typeString": "int_const 1500"
                          },
                          "value": "1500"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316536",
                          "id": 54884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6222:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1e6"
                        },
                        "src": "6215:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 54888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6244:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 54887,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6244:7:66",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 54886,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "6239:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 54889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6239:13:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 54890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "6253:3:66",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "6239:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 54893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6278:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 54892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6270:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54891,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6270:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6270:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 54895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6294:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 54875,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54279,
                      "src": "6120:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$54279_storage_ptr_$",
                        "typeString": "type(struct Swap storage pointer)"
                      }
                    },
                    "id": 54896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6120:187:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                      "typeString": "struct Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6099:208:66"
                },
                {
                  "assignments": [
                    54899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54899,
                      "mutability": "mutable",
                      "name": "swapData",
                      "nameLocation": "6330:8:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 55008,
                      "src": "6317:21:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 54898,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6317:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54911,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54903,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54557,
                            "src": "6362:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 54902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6354:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54901,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6354:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6354:15:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54907,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54557,
                            "src": "6379:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$55535",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 54906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6371:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54905,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6371:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6371:15:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54909,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54874,
                        "src": "6388:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 54900,
                      "name": "_getSwapData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54478,
                      "src": "6341:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Swap_$54279_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,struct Swap memory) returns (bytes memory)"
                      }
                    },
                    "id": 54910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6341:54:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6317:78:66"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 54918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 54913,
                          "name": "swapData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54899,
                          "src": "6419:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 54912,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "6409:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 54914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6409:19:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "",
                          "id": 54916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "hexString",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6442:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "id": 54915,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "6432:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 54917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6432:16:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6409:39:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54925,
                  "nodeType": "IfStatement",
                  "src": "6405:66:66",
                  "trueBody": {
                    "expression": {
                      "id": 54923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 54919,
                          "name": "swapData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54899,
                          "src": "6450:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 54921,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 54920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6459:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "6450:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "00",
                        "id": 54922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6464:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a",
                          "typeString": "literal_string hex\"00\""
                        },
                        "value": "\u0000"
                      },
                      "src": "6450:21:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "id": 54924,
                    "nodeType": "ExpressionStatement",
                    "src": "6450:21:66"
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 54926,
                      "name": "_setUpVaultAndZapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55026,
                      "src": "6481:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 54927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6481:22:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54928,
                  "nodeType": "ExpressionStatement",
                  "src": "6481:22:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54930,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54874,
                        "src": "6525:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 54929,
                      "name": "_getTokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55113,
                      "src": "6513:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$54279_memory_ptr_$returns$__$",
                        "typeString": "function (struct Swap memory)"
                      }
                    },
                    "id": 54931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6513:19:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54932,
                  "nodeType": "ExpressionStatement",
                  "src": "6513:19:66"
                },
                {
                  "assignments": [
                    54934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54934,
                      "mutability": "mutable",
                      "name": "beforeDepTokenIn",
                      "nameLocation": "6550:16:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 55008,
                      "src": "6542:24:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54933,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6542:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54949,
                  "initialValue": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54945,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6632:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZapperTest_$55114",
                                  "typeString": "contract ZapperTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ZapperTest_$55114",
                                  "typeString": "contract ZapperTest"
                                }
                              ],
                              "id": 54944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6624:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 54943,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6624:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6624:13:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 54938,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 54874,
                                      "src": "6597:6:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                                        "typeString": "struct Swap memory"
                                      }
                                    },
                                    "id": 54939,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6604:7:66",
                                    "memberName": "tokenIn",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 54267,
                                    "src": "6597:14:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$49165",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$49165",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 54937,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6589:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 54936,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6589:7:66",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 54940,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6589:23:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 54935,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49165,
                              "src": "6582:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$49165_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 54941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6582:31:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$49165",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 54942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6614:9:66",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49122,
                          "src": "6582:41:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6582:56:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 54948,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6581:58:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6542:97:66"
                },
                {
                  "assignments": [
                    54951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54951,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "6658:5:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 55008,
                      "src": "6650:13:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54950,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6650:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54962,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$49165",
                        "typeString": "contract IERC20"
                      },
                      "id": 54957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 54952,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54874,
                          "src": "6666:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54953,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6673:7:66",
                        "memberName": "tokenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54267,
                        "src": "6666:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 54955,
                            "name": "_ETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54338,
                            "src": "6691:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$49087",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$49087",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 54954,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49165,
                          "src": "6684:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$49165_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 54956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6684:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "6666:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 54960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6715:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 54961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6666:50:66",
                    "trueExpression": {
                      "expression": {
                        "id": 54958,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54874,
                        "src": "6699:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      },
                      "id": 54959,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6706:6:66",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54272,
                      "src": "6699:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6650:66:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 54963,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6992,
                        "src": "6726:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18679",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 54965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6729:12:66",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18659,
                      "src": "6726:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 54966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6726:17:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54967,
                  "nodeType": "ExpressionStatement",
                  "src": "6726:17:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54973,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54874,
                          "src": "6805:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54974,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6812:7:66",
                        "memberName": "tokenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54267,
                        "src": "6805:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 54975,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54874,
                          "src": "6833:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54976,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6840:8:66",
                        "memberName": "tokenOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54270,
                        "src": "6833:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 54977,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54874,
                          "src": "6862:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54978,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6869:6:66",
                        "memberName": "router",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54264,
                        "src": "6862:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 54979,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54874,
                          "src": "6889:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 54980,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6896:6:66",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54272,
                        "src": "6889:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 54981,
                        "name": "swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54899,
                        "src": "6916:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49165",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$49165",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$49165",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 54968,
                          "name": "zapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54557,
                          "src": "6753:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zapper_$55535",
                            "typeString": "contract Zapper"
                          }
                        },
                        "id": 54970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6760:17:66",
                        "memberName": "zapAndDoSomething",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55444,
                        "src": "6753:24:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$49165_$_t_contract$_IERC20_$49165_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                        }
                      },
                      "id": 54972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 54971,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54951,
                          "src": "6785:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6753:38:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$49165_$_t_contract$_IERC20_$49165_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                      }
                    },
                    "id": 54982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6753:181:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54983,
                  "nodeType": "ExpressionStatement",
                  "src": "6753:181:66"
                },
                {
                  "assignments": [
                    54985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54985,
                      "mutability": "mutable",
                      "name": "afterDepTokenIn",
                      "nameLocation": "6952:15:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 55008,
                      "src": "6944:23:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54984,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6944:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55000,
                  "initialValue": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54996,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7033:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZapperTest_$55114",
                                  "typeString": "contract ZapperTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ZapperTest_$55114",
                                  "typeString": "contract ZapperTest"
                                }
                              ],
                              "id": 54995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7025:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 54994,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7025:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7025:13:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 54989,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 54874,
                                      "src": "6998:6:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                                        "typeString": "struct Swap memory"
                                      }
                                    },
                                    "id": 54990,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7005:7:66",
                                    "memberName": "tokenIn",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 54267,
                                    "src": "6998:14:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$49165",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$49165",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 54988,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6990:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 54987,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6990:7:66",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 54991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6990:23:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 54986,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49165,
                              "src": "6983:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$49165_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 54992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6983:31:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$49165",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 54993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7015:9:66",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49122,
                          "src": "6983:41:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6983:56:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 54999,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6982:58:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6944:96:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 55004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 55002,
                          "name": "afterDepTokenIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54985,
                          "src": "7061:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 55003,
                          "name": "beforeDepTokenIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54934,
                          "src": "7080:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7061:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a6170206661696c6564",
                        "id": 55005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7098:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d4d5f5b4990041b6dc7a61de968b34c9f7a505c6ed48935b2cee6a279f47ec6",
                          "typeString": "literal_string \"Zap failed\""
                        },
                        "value": "Zap failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d4d5f5b4990041b6dc7a61de968b34c9f7a505c6ed48935b2cee6a279f47ec6",
                          "typeString": "literal_string \"Zap failed\""
                        }
                      ],
                      "id": 55001,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4911,
                        4932
                      ],
                      "referencedDeclaration": 4932,
                      "src": "7050:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 55006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7050:61:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55007,
                  "nodeType": "ExpressionStatement",
                  "src": "7050:61:66"
                }
              ]
            },
            "functionSelector": "27243b4a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_fail_zapAndDoSomething_RouterFails",
            "nameLocation": "6040:39:66",
            "parameters": {
              "id": 54870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6079:2:66"
            },
            "returnParameters": {
              "id": 54871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6089:0:66"
            },
            "scope": 55114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55026,
            "nodeType": "FunctionDefinition",
            "src": "7124:233:66",
            "nodes": [],
            "body": {
              "id": 55025,
              "nodeType": "Block",
              "src": "7179:178:66",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 55016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7193:34:66",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 55014,
                          "name": "_router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54284,
                          "src": "7219:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 55012,
                          "name": "zapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54557,
                          "src": "7194:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zapper_$55535",
                            "typeString": "contract Zapper"
                          }
                        },
                        "id": 55013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7201:17:66",
                        "memberName": "authorizedRouters",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55136,
                        "src": "7194:24:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 55015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7194:33:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55024,
                  "nodeType": "IfStatement",
                  "src": "7189:106:66",
                  "trueBody": {
                    "id": 55023,
                    "nodeType": "Block",
                    "src": "7229:66:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 55020,
                              "name": "_router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54284,
                              "src": "7276:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 55017,
                              "name": "zapper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54557,
                              "src": "7243:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Zapper_$55535",
                                "typeString": "contract Zapper"
                              }
                            },
                            "id": 55019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7250:25:66",
                            "memberName": "toggleRouterAuthorization",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55319,
                            "src": "7243:32:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 55021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7243:41:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55022,
                        "nodeType": "ExpressionStatement",
                        "src": "7243:41:66"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "8557b123",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setUpVaultAndZapper",
            "nameLocation": "7133:20:66",
            "parameters": {
              "id": 55010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7153:18:66"
            },
            "returnParameters": {
              "id": 55011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7179:0:66"
            },
            "scope": 55114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55113,
            "nodeType": "FunctionDefinition",
            "src": "7363:603:66",
            "nodes": [],
            "body": {
              "id": 55112,
              "nodeType": "Block",
              "src": "7411:555:66",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$49165",
                      "typeString": "contract IERC20"
                    },
                    "id": 55035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 55032,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55029,
                        "src": "7425:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      },
                      "id": 55033,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7432:7:66",
                      "memberName": "tokenIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54267,
                      "src": "7425:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$49165",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 55034,
                      "name": "_ETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54338,
                      "src": "7443:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$49087",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "7425:22:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55101,
                  "nodeType": "IfStatement",
                  "src": "7421:497:66",
                  "trueBody": {
                    "id": 55100,
                    "nodeType": "Block",
                    "src": "7449:469:66",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 55042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 55036,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55029,
                              "src": "7467:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                                "typeString": "struct Swap memory"
                              }
                            },
                            "id": 55037,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7474:12:66",
                            "memberName": "tokenInWhale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54276,
                            "src": "7467:19:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 55040,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7498:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 55039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7490:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 55038,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7490:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 55041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7490:10:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7467:33:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 55080,
                          "nodeType": "Block",
                          "src": "7598:184:66",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 55062,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 55029,
                                      "src": "7625:6:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                                        "typeString": "struct Swap memory"
                                      }
                                    },
                                    "id": 55063,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7632:12:66",
                                    "memberName": "tokenInWhale",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 54276,
                                    "src": "7625:19:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 55059,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6992,
                                    "src": "7616:2:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$18679",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 55061,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7619:5:66",
                                  "memberName": "prank",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 18340,
                                  "src": "7616:8:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 55064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7616:29:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 55065,
                              "nodeType": "ExpressionStatement",
                              "src": "7616:29:66"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 55069,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 55029,
                                      "src": "7707:6:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                                        "typeString": "struct Swap memory"
                                      }
                                    },
                                    "id": 55070,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7714:7:66",
                                    "memberName": "tokenIn",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 54267,
                                    "src": "7707:14:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$49165",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 55073,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "7731:4:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ZapperTest_$55114",
                                          "typeString": "contract ZapperTest"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ZapperTest_$55114",
                                          "typeString": "contract ZapperTest"
                                        }
                                      ],
                                      "id": 55072,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7723:7:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 55071,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7723:7:66",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 55074,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7723:13:66",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    },
                                    "id": 55077,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "31303030",
                                      "id": 55075,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7738:4:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "31653138",
                                      "id": 55076,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7745:4:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "value": "1e18"
                                    },
                                    "src": "7738:11:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$49165",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  ],
                                  "expression": {
                                    "id": 55066,
                                    "name": "SafeERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49602,
                                    "src": "7663:9:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_SafeERC20_$49602_$",
                                      "typeString": "type(library SafeERC20)"
                                    }
                                  },
                                  "id": 55068,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7673:12:66",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 49259,
                                  "src": "7663:22:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$49165_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 55078,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7663:104:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 55079,
                              "nodeType": "ExpressionStatement",
                              "src": "7663:104:66"
                            }
                          ]
                        },
                        "id": 55081,
                        "nodeType": "IfStatement",
                        "src": "7463:319:66",
                        "trueBody": {
                          "id": 55058,
                          "nodeType": "Block",
                          "src": "7502:90:66",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 55046,
                                          "name": "params",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 55029,
                                          "src": "7533:6:66",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                                            "typeString": "struct Swap memory"
                                          }
                                        },
                                        "id": 55047,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7540:7:66",
                                        "memberName": "tokenIn",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 54267,
                                        "src": "7533:14:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$49165",
                                          "typeString": "contract IERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20_$49165",
                                          "typeString": "contract IERC20"
                                        }
                                      ],
                                      "id": 55045,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7525:7:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 55044,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7525:7:66",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 55048,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7525:23:66",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 55051,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "7558:4:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ZapperTest_$55114",
                                          "typeString": "contract ZapperTest"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ZapperTest_$55114",
                                          "typeString": "contract ZapperTest"
                                        }
                                      ],
                                      "id": 55050,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7550:7:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 55049,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7550:7:66",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 55052,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7550:13:66",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    },
                                    "id": 55055,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "31303030",
                                      "id": 55053,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7565:4:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "31653138",
                                      "id": 55054,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7572:4:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "value": "1e18"
                                    },
                                    "src": "7565:11:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  ],
                                  "id": 55043,
                                  "name": "deal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    11584,
                                    11601,
                                    11724
                                  ],
                                  "referencedDeclaration": 11601,
                                  "src": "7520:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 55056,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7520:57:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 55057,
                              "nodeType": "ExpressionStatement",
                              "src": "7520:57:66"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 55086,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55029,
                                    "src": "7842:6:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                                      "typeString": "struct Swap memory"
                                    }
                                  },
                                  "id": 55087,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7849:7:66",
                                  "memberName": "tokenIn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54267,
                                  "src": "7842:14:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$49165",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$49165",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 55085,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49165,
                                "src": "7835:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$49165_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 55088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7835:22:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$49165",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 55091,
                                  "name": "zapper",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54557,
                                  "src": "7867:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Zapper_$55535",
                                    "typeString": "contract Zapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Zapper_$55535",
                                    "typeString": "contract Zapper"
                                  }
                                ],
                                "id": 55090,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7859:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 55089,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7859:7:66",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 55092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7859:15:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 55095,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7881:7:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 55094,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7881:7:66",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 55093,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "7876:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 55096,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7876:13:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 55097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7890:3:66",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "7876:17:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$49165",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 55082,
                              "name": "SafeERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49602,
                              "src": "7795:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeERC20_$49602_$",
                                "typeString": "type(library SafeERC20)"
                              }
                            },
                            "id": 55084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7805:12:66",
                            "memberName": "forceApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49459,
                            "src": "7795:22:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$49165_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 55098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7795:112:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55099,
                        "nodeType": "ExpressionStatement",
                        "src": "7795:112:66"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 55105,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7940:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZapperTest_$55114",
                              "typeString": "contract ZapperTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZapperTest_$55114",
                              "typeString": "contract ZapperTest"
                            }
                          ],
                          "id": 55104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7932:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55103,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7932:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7932:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 55109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 55107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7947:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 55108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7954:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "7947:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 55102,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11584,
                        11601,
                        11724
                      ],
                      "referencedDeclaration": 11584,
                      "src": "7927:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 55110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7927:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55111,
                  "nodeType": "ExpressionStatement",
                  "src": "7927:32:66"
                }
              ]
            },
            "functionSelector": "c72f4a67",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTokenIn",
            "nameLocation": "7372:11:66",
            "parameters": {
              "id": 55030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55029,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "7396:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 55113,
                  "src": "7384:18:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Swap_$54279_memory_ptr",
                    "typeString": "struct Swap"
                  },
                  "typeName": {
                    "id": 55028,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55027,
                      "name": "Swap",
                      "nameLocations": [
                        "7384:4:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54279,
                      "src": "7384:4:66"
                    },
                    "referencedDeclaration": 54279,
                    "src": "7384:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$54279_storage_ptr",
                      "typeString": "struct Swap"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7383:20:66"
            },
            "returnParameters": {
              "id": 55031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7411:0:66"
            },
            "scope": 55114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54553,
              "name": "OffChainCalls",
              "nameLocations": [
                "3183:13:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54479,
              "src": "3183:13:66"
            },
            "id": 54554,
            "nodeType": "InheritanceSpecifier",
            "src": "3183:13:66"
          }
        ],
        "canonicalName": "ZapperTest",
        "contractDependencies": [
          55535
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          55114,
          54479,
          16922,
          16871,
          12407,
          12082,
          11289,
          9229,
          8465,
          6933,
          6999,
          6996
        ],
        "name": "ZapperTest",
        "nameLocation": "3169:10:66",
        "scope": 55115,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 66
}