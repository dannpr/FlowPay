{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenInWhale",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippage",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swap",
          "name": "params",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "_failZapAndDoSomething",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenInWhale",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippage",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swap",
          "name": "params",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "_failZapAndDoSomething_eth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenInWhale",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippage",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swap",
          "name": "swap",
          "type": "tuple"
        }
      ],
      "name": "_getSwapData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenInWhale",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippage",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swap",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "_getTokenIn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_setUpVaultAndZapper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenInWhale",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippage",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swap",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "_zapAndDoSomething",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenInWhale",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippage",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swap",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "_zapAndDoSomething_eth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_failZapAndDoSomethingERC20PlusEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_fail_zapAndDoSomething_RouterFails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_inconsistantZapAndDoSomethingEthAPE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_zapAndDoSomethingEthAPE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101a0604081905260078054600160ff199182168117909255600b8054909116909117815563350d56bf60e01b90915260206101a4526101c4526a10541157d350525393915560aa1b6101e45260008051602062005ae783398151915263350d56bf610204602060405180830381865afa15801562000082573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000a891906200059e565b6001600160a01b031660805260405163350d56bf60e01b815260206004820152600b60248201526a11105257d350525393915560aa1b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa1580156200011b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014191906200059e565b6001600160a01b031660a05260405163350d56bf60e01b815260206004820152600c60248201526b1554d110d7d350525393915560a21b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa158015620001b5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001db91906200059e565b6001600160a01b031660c05260405163350d56bf60e01b815260206004820152600c60248201526b1554d11517d350525393915560a21b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa1580156200024f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200027591906200059e565b6001600160a01b031660e05260405163350d56bf60e01b815260206004820152600c60248201526b15d1551217d350525393915560a21b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa158015620002e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200030f91906200059e565b6001600160a01b03166101005260405163350d56bf60e01b815260206004820152600b60248201526a11551217d350525393915560aa1b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa15801562000383573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003a991906200059e565b6001600160a01b03166101205260405163350d56bf60e01b815260206004820152600e60248201526d15d4d511551217d350525393915560921b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa15801562000420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200044691906200059e565b6001600160a01b03166101405260405163350d56bf60e01b815260206004820152600d60248201526c14d511551217d3505253939155609a1b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa158015620004bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004e291906200059e565b6001600160a01b03166101605260405163350d56bf60e01b815260206004820152600c60248201526b15d09510d7d350525393915560a21b604482015260008051602062005ae78339815191529063350d56bf90606401602060405180830381865afa15801562000557573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200057d91906200059e565b6001600160a01b0316610180523480156200059757600080fd5b50620005d0565b600060208284031215620005b157600080fd5b81516001600160a01b0381168114620005c957600080fd5b9392505050565b60805160a05160c05160e051610100516101205161014051610160516101805161548b6200065c6000396000505060005050600081816104c70152611b9d0152600081816103860152818161061401528181610b420152611902015260005050600050506000818161049f0152611b75015260005050600081816103ae0152610b6a015261548b6000f3fe60806040523480156200001157600080fd5b5060043610620001695760003560e01c806385226c8111620000d3578063ba414fa61162000086578063ba414fa614620002a2578063c72f4a6714620002bd578063d171493f14620002d4578063db8fd47114620002eb578063e20c9f7114620002f5578063fa7626d414620002ff57600080fd5b806385226c81146200023d5780638557b1231462000256578063916a17c61462000260578063a34d30cb146200026a578063a63ac5361462000281578063b5508aa9146200029857600080fd5b80632c747b21116200012c5780632c747b2114620001c95780633e5e3c2314620001e05780633f7286f414620001ea5780633f97255914620001f457806366d9a9a014620001fe5780636df512c4146200021757600080fd5b80630a9254e4146200016e5780631e25e048146200017a5780631ed7831c146200018457806327243b4a14620001a65780632ade388014620001b0575b600080fd5b620001786200030d565b005b620001786200035b565b6200018e62000410565b6040516200019d919062003877565b60405180910390f35b6200017862000474565b620001ba620007ef565b6040516200019d91906200391a565b62000178620001da36600462003af4565b6200093d565b6200018e62000a53565b6200018e62000ab5565b6200017862000b17565b6200020862000bbf565b6040516200019d919062003b23565b6200022e6200022836600462003bda565b62000ca9565b6040516200019d919062003c2a565b62000247620011c4565b6040516200019d919062003c3f565b620001786200129e565b620002086200139b565b620001786200027b36600462003ca5565b62001485565b620001786200029236600462003ca5565b620015cd565b62000247620016f9565b620002ac620017d3565b60405190151581526020016200019d565b62000178620002ce36600462003ca5565b62001900565b62000178620002e536600462003af4565b62001a30565b6200017862001b4a565b6200018e62001bf2565b600754620002ac9060ff1681565b6040516200031b9062003834565b604051809103906000f08015801562000338573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160e081018252731111111254eeb25477b68fb85ed929f73a96058281526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660208301527f00000000000000000000000000000000000000000000000000000000000000001691810191909152670de0b6b3a7640000606082015260016080820152600060a082015261271060c08201526200040d81671bc16d674ec8000062001a30565b50565b606060148054806020026020016040519081016040528092919081815260200182805480156200046a57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200044b575b5050505050905090565b6040805160e081018252731111111254eeb25477b68fb85ed929f73a96058281526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660208301527f00000000000000000000000000000000000000000000000000000000000000008116928201929092526359682f0060608201526000196080820152600060a08201819052606460c0830152601c5491929091620005269116808462000ca9565b90507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081805190602001201462000587576000816000815181106200056f576200056f62003cc4565b60200101906001600160f81b031916908160001a9053505b620005916200129e565b6200059c8262001900565b60208201516040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015620005e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200060e919062003cda565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031684602001516001600160a01b031614620006585760006200065e565b83606001515b90506000805160206200543683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620006ae57600080fd5b505af1158015620006c3573d6000803e3d6000fd5b5050601c546020870151604080890151895160608b0151925163185d53b560e11b81526001600160a01b0390951696506330baa76a955087946200070e9493908b9060040162003cf4565b6000604051808303818588803b1580156200072857600080fd5b505af11580156200073d573d6000803e3d6000fd5b50505060208601516040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562000790573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007b6919062003cda565b9050620007e88382146040518060400160405280600a81526020016916985c0819985a5b195960b21b81525062001c54565b5050505050565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200093457600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156200091c578382906000526020600020018054620008889062003d31565b80601f0160208091040260200160405190810160405280929190818152602001828054620008b69062003d31565b8015620009075780601f10620008db5761010080835404028352916020019162000907565b820191906000526020600020905b815481529060010190602001808311620008e957829003601f168201915b50505050508152602001906001019062000866565b50505050815250508152602001906001019062000813565b50505050905090565b601c5460009062000959906001600160a01b0316808562000ca9565b9050620009656200129e565b620009708362001900565b6000805160206200543683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620009be57600080fd5b505af1158015620009d3573d6000803e3d6000fd5b5050601c5460208601516040808801518851915163185d53b560e11b81526001600160a01b0390941695506330baa76a945062000a1a939091908890889060040162003cf4565b600060405180830381600087803b15801562000a3557600080fd5b505af115801562000a4a573d6000803e3d6000fd5b50505050505050565b606060168054806020026020016040519081016040528092919081815260200182805480156200046a576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200044b575050505050905090565b606060158054806020026020016040519081016040528092919081815260200182805480156200046a576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200044b575050505050905090565b6040805160e081018252731111111254eeb25477b68fb85ed929f73a96058281526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660208301527f00000000000000000000000000000000000000000000000000000000000000001691810191909152670de0b6b3a7640000606082015260016080820152600060a082015260c860c08201526200040d81620015cd565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620009345760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000c9057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000c515790505b5050505050815250508152602001906001019062000be3565b604080516008808252610120820190925260609160009190816020015b606081526020019060019003908162000cc6579050509050604051806040016040528060048152602001636e6f646560e01b8152508160008151811062000d115762000d1162003cc4565b60200260200101819052506040518060400160405280601f81526020017f2e2f746573742f736372697074732f67657431696e636851756f74652e6a73008152508160018151811062000d685762000d6862003cc4565b6020908102919091010152604051632b65311f60e11b81526001600160a01b038616600482015260008051602062005416833981519152906356ca623e90602401600060405180830381865afa15801562000dc7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000df1919081019062003dc4565b8160028151811062000e075762000e0762003cc4565b6020908102919091010152604051632b65311f60e11b81526001600160a01b038516600482015260008051602062005416833981519152906356ca623e90602401600060405180830381865afa15801562000e66573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000e90919081019062003dc4565b8160038151811062000ea65762000ea662003cc4565b602090810291909101810191909152830151604051632b65311f60e11b81526001600160a01b03909116600482015260008051602062005416833981519152906356ca623e90602401600060405180830381865afa15801562000f0d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000f37919081019062003dc4565b8160048151811062000f4d5762000f4d62003cc4565b60209081029190910101526040838101519051632b65311f60e11b81526001600160a01b03909116600482015260008051602062005416833981519152906356ca623e90602401600060405180830381865afa15801562000fb2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000fdc919081019062003dc4565b8160058151811062000ff25762000ff262003cc4565b6020908102919091010152606083015160405163348051d760e11b815260048101919091526000805160206200541683398151915290636900a3ae90602401600060405180830381865afa1580156200104f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001079919081019062003dc4565b816006815181106200108f576200108f62003cc4565b602090810291909101015260c083015160405163348051d760e11b815260048101919091526000805160206200541683398151915290636900a3ae90602401600060405180830381865afa158015620010ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001116919081019062003dc4565b816007815181106200112c576200112c62003cc4565b6020908102919091010152604051638916046760e01b815260009060008051602062005416833981519152906389160467906200116e90859060040162003c3f565b6000604051808303816000875af11580156200118e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620011b8919081019062003dc4565b925050505b9392505050565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620009345783829060005260206000200180546200120a9062003d31565b80601f0160208091040260200160405190810160405280929190818152602001828054620012389062003d31565b8015620012895780601f106200125d5761010080835404028352916020019162001289565b820191906000526020600020905b8154815290600101906020018083116200126b57829003601f168201915b505050505081526020019060010190620011e8565b601c54604051634f378fb360e11b8152731111111254eeb25477b68fb85ed929f73a96058260048201526001600160a01b0390911690639e6f1f6690602401602060405180830381865afa158015620012fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001321919062003e12565b6200139957601c5460405162fd2eab60e11b8152731111111254eeb25477b68fb85ed929f73a96058260048201526001600160a01b03909116906301fa5d5690602401600060405180830381600087803b1580156200137f57600080fd5b505af115801562001394573d6000803e3d6000fd5b505050505b565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620009345760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200146c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200142d5790505b50505050508152505081526020019060010190620013bf565b601c54600090620014a1906001600160a01b0316808462000ca9565b9050620014ad6200129e565b620014b88262001900565b805160208201207f3a2db9fe7908dcc36d81824d2338fc3f1aff49ac357dd8c4840527fba27a5b90016200154e576000805160206200543683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200153457600080fd5b505af115801562001549573d6000803e3d6000fd5b505050505b601c54602083015160408085015185516060870151925163185d53b560e11b81526001600160a01b03909516946330baa76a94620015959490939291889060040162003cf4565b600060405180830381600087803b158015620015b057600080fd5b505af1158015620015c5573d6000803e3d6000fd5b505050505050565b601c54600090620015e9906001600160a01b0316808462000ca9565b9050620015f56200129e565b620016008262001900565b805160208201207f3a2db9fe7908dcc36d81824d2338fc3f1aff49ac357dd8c4840527fba27a5b900162001696576000805160206200543683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200167c57600080fd5b505af115801562001691573d6000803e3d6000fd5b505050505b601c54606083015160208401516040808601518651915163185d53b560e11b81526001600160a01b03909516946330baa76a9493620016df939092918590899060040162003cf4565b6000604051808303818588803b15801562000a3557600080fd5b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620009345783829060005260206000200180546200173f9062003d31565b80601f01602080910402602001604051908101604052809291908181526020018280546200176d9062003d31565b8015620017be5780601f106200179257610100808354040283529160200191620017be565b820191906000526020600020905b815481529060010190602001808311620017a057829003601f168201915b5050505050815260200190600101906200171d565b600754600090610100900460ff1615620017f65750600754610100900460ff1690565b6000600080516020620054168339815191523b15620018fb576040805160008051602062005416833981519152602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916200187d917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162003e36565b60408051601f1981840301815290829052620018999162003e69565b6000604051808303816000865af19150503d8060008114620018d8576040519150601f19603f3d011682016040523d82523d6000602084013e620018dd565b606091505b5091505080806020019051810190620018f7919062003e12565b9150505b919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681602001516001600160a01b03161462001a1b5760a08101516001600160a01b031662001971576200196b816020015130683635c9adc5dea0000062001ca2565b620019fb565b60a081015160405163ca669fa760e01b81526001600160a01b039091166004820152600080516020620054168339815191529063ca669fa790602401600060405180830381600087803b158015620019c857600080fd5b505af1158015620019dd573d6000803e3d6000fd5b50505050620019fb816020015130683635c9adc5dea0000062001cb6565b6020810151601c5462001a1b91906001600160a01b031660001962001d1b565b6200040d30683635c9adc5dea0000062001db1565b601c5460009062001a4c906001600160a01b0316808562000ca9565b905062001a586200129e565b62001a638362001900565b6000805160206200543683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001ab157600080fd5b505af115801562001ac6573d6000803e3d6000fd5b5050601c546020860151604080880151885160608a0151925163185d53b560e11b81526001600160a01b0390951696506330baa76a9550889462001b11949390899060040162003cf4565b6000604051808303818588803b15801562001b2b57600080fd5b505af115801562001b40573d6000803e3d6000fd5b5050505050505050565b6040805160e081018252731111111254eeb25477b68fb85ed929f73a96058281526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660208301527f000000000000000000000000000000000000000000000000000000000000000016918101919091526359682f006060820181905260016080830152600060a0830152601e60c08301526200040d90829062001a30565b606060138054806020026020016040519081016040528092919081815260200182805480156200046a576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200044b575050505050905090565b8162001c9e577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405162001c8b919062003e87565b60405180910390a162001c9e8262001df4565b5050565b62001cb1838383600062001e6c565b505050565b6040516001600160a01b03831660248201526044810182905262001cb190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915262002067565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905262001d6e848262002147565b62001394576040516001600160a01b03841660248201526000604482015262001da590859063095ea7b360e01b9060640162001ce3565b62001394848262002067565b60405163c88a5e6d60e01b81526001600160a01b038316600482015260248101829052600080516020620054168339815191529063c88a5e6d9060440162001595565b806200040d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001e5a9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200040d620021f9565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162001ec29162003e69565b600060405180830381855afa9150503d806000811462001eff576040519150601f19603f3d011682016040523d82523d6000602084013e62001f04565b606091505b5091505060008180602001905181019062001f20919062003cda565b905062001f5a8462001f538762001f4c6370a0823160e01b62001f45600c8d620022fd565b9062002323565b9062002341565b906200236a565b8215620015c55760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162001fa5919062003e69565b600060405180830381855afa9150503d806000811462001fe2576040519150601f19603f3d011682016040523d82523d6000602084013e62001fe7565b606091505b5091505060008180602001905181019062002003919062003cda565b9050828610156200202e576200201a868462003ece565b62002026908262003ece565b905062002049565b6200203a838762003ece565b62002046908262003ee4565b90505b62001b408162001f536318160ddd60e01b62001f45600c8d620022fd565b6000620020be826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620023769092919063ffffffff16565b9050805160001480620020e2575080806020019051810190620020e2919062003e12565b62001cb15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b6000806000846001600160a01b03168460405162002166919062003e69565b6000604051808303816000865af19150503d8060008114620021a5576040519150601f19603f3d011682016040523d82523d6000602084013e620021aa565b606091505b5091509150818015620021d8575080511580620021d8575080806020019051810190620021d8919062003e12565b8015620021ee57506001600160a01b0385163b15155b925050505b92915050565b600080516020620054168339815191523b15620022ec5760405160009060008051602062005416833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620022679083906519985a5b195960d21b9060019060200162003efa565b60408051601f198184030181529082905262002287929160200162003e36565b60408051601f1981840301815290829052620022a39162003e69565b6000604051808303816000865af19150503d8060008114620022e2576040519150601f19603f3d011682016040523d82523d6000602084013e620022e7565b606091505b505050505b6007805461ff001916610100179055565b6005820180546001600160a01b0319166001600160a01b038316179055600082620011bd565b60038201805463ffffffff191660e083901c179055600082620011bd565b6002820180546001810182556000918252602082206001600160a01b03841691015582620011bd565b62001c9e82826200238f565b6060620023878484600085620026fd565b949350505050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200240257602002820191906000526020600020905b815481526020019060010190808311620023ed575b505050505090506000836200241783620027e0565b6040516020016200242a92919062003e36565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916200247e91869188910162003f1b565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620024b957620024b78762002894565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620024fa91879189910162003f1b565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162002541919062003e69565b600060405180830381855afa9150503d80600081146200257e576040519150601f19603f3d011682016040523d82523d6000602084013e62002583565b606091505b509150620025a09050816200259a88602062003f57565b620028a1565b604051630667f9d760e41b81526001600160a01b038a1660048201526024810185905290925060009150600080516020620054168339815191529063667f9d7090604401602060405180830381865afa15801562002602573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002628919062003cda565b90508082146200264c5760405162461bcd60e51b81526004016200213e9062003f71565b6040516370ca10bb60e01b815260008051602062005416833981519152906370ca10bb9062002684908b9087908e9060040162003efa565b600060405180830381600087803b1580156200269f57600080fd5b505af1158015620026b4573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055620026e960028b01600062003842565b896004016000905550505050505050505050565b606082471015620027605760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200213e565b600080866001600160a01b031685876040516200277e919062003e69565b60006040518083038185875af1925050503d8060008114620027bd576040519150601f19603f3d011682016040523d82523d6000602084013e620027c2565b606091505b5091509150620027d5878383876200292b565b979650505050505050565b6060600082516020620027f4919062003f57565b67ffffffffffffffff8111156200280f576200280f620039e0565b6040519080825280601f01601f1916602001820160405280156200283a576020820181803683370190505b50905060005b83518110156200288d57600084828151811062002861576200286162003cc4565b60200260200101519050808260200260200184015250808062002884906200400c565b91505062002840565b5092915050565b6000620021f382620029ab565b60008060006020855111620028b8578451620028bb565b60205b905060005b818110156200292157620028d681600862003f57565b86620028e3838862003ee4565b81518110620028f657620028f662003cc4565b01602001516001600160f81b031916901c92909217918062002918816200400c565b915050620028c0565b5090949350505050565b606083156200299f57825160000362002997576001600160a01b0385163b620029975760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200213e565b508162002387565b620023878383620036da565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801562002a1d57602002820191906000526020600020905b81548152602001906001019080831162002a08575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935062002a699250859187910162003f1b565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562002b08576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162002ad891859187910162003f1b565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008362002b168362003707565b60405160200162002b2992919062003e36565b60405160208183030381529060405290506000805160206200543683398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002b8857600080fd5b505af115801562002b9d573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162002bbe919062003e69565b600060405180830381855afa9150503d806000811462002bfb576040519150601f19603f3d011682016040523d82523d6000602084013e62002c00565b606091505b50915062002c1d90508162002c1787602062003f57565b620037b4565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062005416833981519152906365bc9481906024016000604051808303816000875af115801562002c7a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002ca49190810190620040a6565b509050805160010362002f855760006000805160206200543683398151915260001c6001600160a01b031663667f9d70898460008151811062002ceb5762002ceb62003cc4565b60200260200101516040518363ffffffff1660e01b815260040162002d259291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa15801562002d43573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d69919062003cda565b90508062002dd4577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062002da95762002da962003cc4565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b80831462002df65760405162461bcd60e51b81526004016200213e9062003f71565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162002e2e92919062003f1b565b604051602081830303815290604052805190602001208560008151811062002e5a5762002e5a62003cc4565b602002602001015160001c60405162002e77949392919062004111565b60405180910390a18160008151811062002e955762002e9562003cc4565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262002ee0918a918c910162003f1b565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162002f4a918a918c910162003f1b565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff1916911515919091179055506200355d565b600181511115620034ec5760005b8151811015620034e55760006000805160206200543683398151915260001c6001600160a01b031663667f9d708a85858151811062002fd65762002fd662003cc4565b60200260200101516040518363ffffffff1660e01b8152600401620030109291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156200302e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003054919062003cda565b905080620030be577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062003093576200309362003cc4565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b838114620030cd5750620034d0565b825181199060008051602062005416833981519152906370ca10bb908c9087908790811062003100576200310062003cc4565b6020026020010151846040518463ffffffff1660e01b8152600401620031299392919062003efa565b600060405180830381600087803b1580156200314457600080fd5b505af115801562003159573d6000803e3d6000fd5b50505050600060608b6001600160a01b0316886040516200317b919062003e69565b600060405180830381855afa9150503d8060008114620031b8576040519150601f19603f3d011682016040523d82523d6000602084013e620031bd565b606091505b509092509050620031d58162002c178c602062003f57565b965050808015620031e557508186145b1562003438577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200322392919062003f1b565b604051602081830303815290604052805190602001208888815181106200324e576200324e62003cc4565b602002602001015160001c6040516200326b949392919062004111565b60405180910390a184848151811062003288576200328862003cc4565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092620032d3918d918f910162003f1b565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200336092919062003f1b565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206200543683398151915260001c6001600160a01b03166370ca10bb8c878781518110620033d257620033d262003cc4565b6020026020010151866040518463ffffffff1660e01b8152600401620033fb9392919062003efa565b600060405180830381600087803b1580156200341657600080fd5b505af11580156200342b573d6000803e3d6000fd5b50505050505050620034e5565b6000805160206200543683398151915260001c6001600160a01b03166370ca10bb8c8787815181106200346f576200346f62003cc4565b6020026020010151866040518463ffffffff1660e01b8152600401620034989392919062003efa565b600060405180830381600087803b158015620034b357600080fd5b505af1158015620034c8573d6000803e3d6000fd5b505050505050505b80620034dc816200400c565b91505062002f93565b506200355d565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e60648201526084016200213e565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620035a19188918a910162003f1b565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620036305760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b60648201526084016200213e565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200366160028a01600062003842565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620036a79188918a910162003f1b565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b815115620036eb5781518083602001fd5b8060405162461bcd60e51b81526004016200213e919062003c2a565b60606000825160206200371b919062003f57565b67ffffffffffffffff811115620037365762003736620039e0565b6040519080825280601f01601f19166020018201604052801562003761576020820181803683370190505b50905060005b83518110156200288d57600084828151811062003788576200378862003cc4565b602002602001015190508082602002602001840152508080620037ab906200400c565b91505062003767565b60008060006020855111620037cb578451620037ce565b60205b905060005b818110156200292157620037e981600862003f57565b86620037f6838862003ee4565b8151811062003809576200380962003cc4565b01602001516001600160f81b031916901c9290921791806200382b816200400c565b915050620037d3565b6112d4806200414283390190565b50805460008255906000526020600020908101906200040d91905b808211156200387357600081556001016200385d565b5090565b6020808252825182820181905260009190848201906040850190845b81811015620038ba5783516001600160a01b03168352928401929184019160010162003893565b50909695505050505050565b60005b83811015620038e3578181015183820152602001620038c9565b50506000910152565b6000815180845262003906816020860160208601620038c6565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015620039d057603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015620039b957605f19898503018352620039a6848651620038ec565b948e01949350918d019160010162003987565b505050978a01979450509188019160010162003941565b50919a9950505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171562003a225762003a22620039e0565b604052919050565b6001600160a01b03811681146200040d57600080fd5b600060e0828403121562003a5357600080fd5b60405160e0810181811067ffffffffffffffff8211171562003a795762003a79620039e0565b604052905080823562003a8c8162003a2a565b8152602083013562003a9e8162003a2a565b6020820152604083013562003ab38162003a2a565b80604083015250606083013560608201526080830135608082015260a083013562003ade8162003a2a565b60a082015260c092830135920191909152919050565b600080610100838503121562003b0957600080fd5b62003b15848462003a40565b9460e0939093013593505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562003bcb57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562003bb55783516001600160e01b0319168252928b019260019290920191908b019062003b89565b50978a0197955050509187019160010162003b4b565b50919998505050505050505050565b6000806000610120848603121562003bf157600080fd5b833562003bfe8162003a2a565b9250602084013562003c108162003a2a565b915062003c21856040860162003a40565b90509250925092565b602081526000620011bd6020830184620038ec565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562003c9857603f1988860301845262003c85858351620038ec565b9450928501929085019060010162003c66565b5092979650505050505050565b600060e0828403121562003cb857600080fd5b620011bd838362003a40565b634e487b7160e01b600052603260045260246000fd5b60006020828403121562003ced57600080fd5b5051919050565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a060808201819052600090620027d590830184620038ec565b600181811c9082168062003d4657607f821691505b60208210810362003d6757634e487b7160e01b600052602260045260246000fd5b50919050565b600067ffffffffffffffff83111562003d8a5762003d8a620039e0565b62003d9f601f8401601f1916602001620039f6565b905082815283838301111562003db457600080fd5b620011bd836020830184620038c6565b60006020828403121562003dd757600080fd5b815167ffffffffffffffff81111562003def57600080fd5b8201601f8101841362003e0157600080fd5b620023878482516020840162003d6d565b60006020828403121562003e2557600080fd5b81518015158114620011bd57600080fd5b6001600160e01b031983168152815160009062003e5b816004850160208701620038c6565b919091016004019392505050565b6000825162003e7d818460208701620038c6565b9190910192915050565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620011bd6080830184620038ec565b634e487b7160e01b600052601160045260246000fd5b81810381811115620021f357620021f362003eb8565b80820180821115620021f357620021f362003eb8565b6001600160a01b039390931683526020830191909152604082015260600190565b825160009082906020808701845b8381101562003f475781518552938201939082019060010162003f29565b5050948252509092019392505050565b8082028115828204841417620021f357620021f362003eb8565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b60006001820162004021576200402162003eb8565b5060010190565b600082601f8301126200403a57600080fd5b8151602067ffffffffffffffff821115620040595762004059620039e0565b8160051b6200406a828201620039f6565b92835284810182019282810190878511156200408557600080fd5b83870192505b84831015620027d5578251825291830191908301906200408b565b60008060408385031215620040ba57600080fd5b825167ffffffffffffffff80821115620040d357600080fd5b620040e18683870162004028565b93506020850151915080821115620040f857600080fd5b50620041078582860162004028565b9150509250929050565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe608060405234801561001057600080fd5b5061001a3361002c565b6001805460ff60a01b19169055610098565b600180546001600160a01b031916905561004581610048565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61122d806100a76000396000f3fe6080604052600436106100dd5760003560e01c80638456cb591161007f5780639e6f1f66116100595780639e6f1f6614610202578063ba72467e14610232578063e30c397814610252578063f2fde38b1461027057600080fd5b80638456cb591461019b57806389476069146101b05780638da5cb5b146101d057600080fd5b80635a18664c116100bb5780635a18664c1461012c5780635c975abb14610141578063715018a61461017157806379ba50971461018657600080fd5b806301fa5d56146100e257806330baa76a146101045780633f4ba83a14610117575b600080fd5b3480156100ee57600080fd5b506101026100fd366004611018565b610290565b005b61010261011236600461103c565b6102fd565b34801561012357600080fd5b50610102610610565b34801561013857600080fd5b50610102610622565b34801561014d57600080fd5b50600154600160a01b900460ff165b60405190151581526020015b60405180910390f35b34801561017d57600080fd5b50610102610659565b34801561019257600080fd5b5061010261066b565b3480156101a757600080fd5b506101026106e2565b3480156101bc57600080fd5b506101026101cb366004611018565b6106f2565b3480156101dc57600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610168565b34801561020e57600080fd5b5061015c61021d366004611018565b60026020526000908152604090205460ff1681565b34801561023e57600080fd5b5061010261024d3660046110ef565b610777565b34801561025e57600080fd5b506001546001600160a01b03166101ea565b34801561027c57600080fd5b5061010261028b366004611018565b6107d9565b61029861084a565b6001600160a01b038116600081815260026020908152604091829020805460ff81161560ff19909116811790915591518281529192917f3565191e968a8e6d50912daf1b5cf3c33b6aad3a2325f8026c562e9c268b74d3910160405180910390a25050565b6001600160a01b038416600090815260026020526040902054849060ff1661034857604051632462ed0960e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6103506108a4565b6000346000036103d4576040516370a0823160e01b81523060048201526001600160a01b038916906370a0823190602401602060405180830381865afa15801561039e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c29190611128565b90506103cf8689876108f1565b6103e1565b6103de3447611141565b90505b6104218685858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109a692505050565b50600034156104305747610498565b6040516370a0823160e01b81523060048201526001600160a01b038a16906370a0823190602401602060405180830381865afa158015610474573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104989190611128565b9050818111156104c557604051632db0390560e11b8152600481018390526024810182905260440161033f565b604080516001600160a01b038b81168252602082018990528916917fa27f1074fd34efb689b30aa48038ffeeae6b037d38b805f48b4b02047efa3ac3910160405180910390a26040516370a0823160e01b81523060048201526001600160a01b038916906370a0823190602401602060405180830381865afa15801561054f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105739190611128565b600003610605576040516370a0823160e01b81523060048201526001600160a01b038916906370a0823190602401602060405180830381865afa1580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e29190611128565b6040516327a64d3760e01b8152600481019190915247602482015260440161033f565b505050505050505050565b61061861084a565b610620610a76565b565b61062a61084a565b60405133904780156108fc02916000818181858888f19350505050158015610656573d6000803e3d6000fd5b50565b61066161084a565b6106206000610acb565b60015433906001600160a01b031681146106d95760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b606482015260840161033f565b61065681610acb565b6106ea61084a565b610620610ae4565b6106fa61084a565b610656336040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610742573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107669190611128565b6001600160a01b0384169190610b27565b61077f61084a565b6107956001600160a01b03831682600019610b8a565b816001600160a01b0316816001600160a01b03167fd01a1176903089ad7576f93faa5eb25da6415495d7363f6c73cb074a7ebc645a60405160405180910390a35050565b6107e161084a565b600180546001600160a01b0383166001600160a01b031990911681179091556108126000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6000546001600160a01b031633146106205760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161033f565b600154600160a01b900460ff16156106205760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161033f565b6109066001600160a01b038316333084610c1f565b806001600160a01b03831663dd62ed3e336040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529087166024820152604401602060405180830381865afa158015610963573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109879190611128565b10156109a1576109a16001600160a01b0383168483610b8a565b505050565b6060600080846001600160a01b031634856040516109c49190611186565b60006040518083038185875af1925050503d8060008114610a01576040519150601f19603f3d011682016040523d82523d6000602084013e610a06565b606091505b509150915081610a6c57835115610a325780604051634ecb9b6d60e01b815260040161033f91906111a2565b604051634ecb9b6d60e01b815260206004820152600e60248201526d2ab735b737bbb7103932b0b9b7b760911b604482015260640161033f565b9150505b92915050565b610a7e610c57565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600180546001600160a01b031916905561065681610ca7565b610aec6108a4565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610aae3390565b6040516001600160a01b0383166024820152604481018290526109a190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610cf7565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610bdb8482610dcc565b610c19576040516001600160a01b038416602482015260006044820152610c0f90859063095ea7b360e01b90606401610b53565b610c198482610cf7565b50505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610c199085906323b872dd60e01b90608401610b53565b600154600160a01b900460ff166106205760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161033f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610d4c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e739092919063ffffffff16565b9050805160001480610d6d575080806020019051810190610d6d91906111d5565b6109a15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161033f565b6000806000846001600160a01b031684604051610de99190611186565b6000604051808303816000865af19150503d8060008114610e26576040519150601f19603f3d011682016040523d82523d6000602084013e610e2b565b606091505b5091509150818015610e55575080511580610e55575080806020019051810190610e5591906111d5565b8015610e6a57506001600160a01b0385163b15155b95945050505050565b6060610e828484600085610e8a565b949350505050565b606082471015610eeb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161033f565b600080866001600160a01b03168587604051610f079190611186565b60006040518083038185875af1925050503d8060008114610f44576040519150601f19603f3d011682016040523d82523d6000602084013e610f49565b606091505b5091509150610f5a87838387610f65565b979650505050505050565b60608315610fd4578251600003610fcd576001600160a01b0385163b610fcd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161033f565b5081610e82565b610e828383815115610fe95781518083602001fd5b8060405162461bcd60e51b815260040161033f91906111a2565b6001600160a01b038116811461065657600080fd5b60006020828403121561102a57600080fd5b813561103581611003565b9392505050565b60008060008060008060a0878903121561105557600080fd5b863561106081611003565b9550602087013561107081611003565b9450604087013561108081611003565b935060608701359250608087013567ffffffffffffffff808211156110a457600080fd5b818901915089601f8301126110b857600080fd5b8135818111156110c757600080fd5b8a60208285010111156110d957600080fd5b6020830194508093505050509295509295509295565b6000806040838503121561110257600080fd5b823561110d81611003565b9150602083013561111d81611003565b809150509250929050565b60006020828403121561113a57600080fd5b5051919050565b81810381811115610a7057634e487b7160e01b600052601160045260246000fd5b60005b8381101561117d578181015183820152602001611165565b50506000910152565b60008251611198818460208701611162565b9190910192915050565b60208152600082518060208401526111c1816040850160208701611162565b601f01601f19169190910160400192915050565b6000602082840312156111e757600080fd5b8151801515811461103557600080fdfea2646970667358221220d85a7715024df7c5b5f6b0c1b8348f56b0a5d7edf71e3409b136835a39b08b8464736f6c634300081300330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220dd26a594430ca7df8ecbb98fbc1eb6902734129d7884f5ad514d93fdfd45795564736f6c634300081300330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d",
    "sourceMap": "3160:4808:59:-:0;;;;;1572:26:9;;;1594:4;-1:-1:-1;;1572:26:9;;;;;;;;3126:44:12;;;;;;;;;;;-1:-1:-1;;;547:28:59;;;216:2:60;547:28:59;198:21:60;235:18;228:30;-1:-1:-1;;;274:18:60;267:41;-1:-1:-1;;;;;;;;;;;547:13:59;325:18:60;547:28:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;509:67:59;;;620:28;;-1:-1:-1;;;620:28:59;;851:2:60;620:28:59;;;833:21:60;890:2;870:18;;;863:30;-1:-1:-1;;;909:18:60;;;902:41;-1:-1:-1;;;;;;;;;;;620:13:59;;;960:18:60;;620:28:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;582:67:59;;;694:29;;-1:-1:-1;;;694:29:59;;1191:2:60;694:29:59;;;1173:21:60;1230:2;1210:18;;;1203:30;-1:-1:-1;;;1249:18:60;;;1242:42;-1:-1:-1;;;;;;;;;;;694:13:59;;;1301:18:60;;694:29:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;655:69:59;;;769:29;;-1:-1:-1;;;769:29:59;;1532:2:60;769:29:59;;;1514:21:60;1571:2;1551:18;;;1544:30;-1:-1:-1;;;1590:18:60;;;1583:42;-1:-1:-1;;;;;;;;;;;769:13:59;;;1642:18:60;;769:29:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;730:69:59;;;844:29;;-1:-1:-1;;;844:29:59;;1873:2:60;844:29:59;;;1855:21:60;1912:2;1892:18;;;1885:30;-1:-1:-1;;;1931:18:60;;;1924:42;-1:-1:-1;;;;;;;;;;;844:13:59;;;1983:18:60;;844:29:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;805:69:59;;;918:28;;-1:-1:-1;;;918:28:59;;2214:2:60;918:28:59;;;2196:21:60;2253:2;2233:18;;;2226:30;-1:-1:-1;;;2272:18:60;;;2265:41;-1:-1:-1;;;;;;;;;;;918:13:59;;;2323:18:60;;918:28:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;880:67:59;;;994:31;;-1:-1:-1;;;994:31:59;;2554:2:60;994:31:59;;;2536:21:60;2593:2;2573:18;;;2566:30;-1:-1:-1;;;2612:18:60;;;2605:44;-1:-1:-1;;;;;;;;;;;994:13:59;;;2666:18:60;;994:31:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;953:73:59;;;1072:30;;-1:-1:-1;;;1072:30:59;;2897:2:60;1072:30:59;;;2879:21:60;2936:2;2916:18;;;2909:30;-1:-1:-1;;;2955:18:60;;;2948:43;-1:-1:-1;;;;;;;;;;;1072:13:59;;;3008:18:60;;1072:30:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1032:71:59;;;1148:29;;-1:-1:-1;;;1148:29:59;;3239:2:60;1148:29:59;;;3221:21:60;3278:2;3258:18;;;3251:30;-1:-1:-1;;;3297:18:60;;;3290:42;-1:-1:-1;;;;;;;;;;;1148:13:59;;;3349:18:60;;1148:29:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1109:69:59;;;3160:4808;;;;;;;;;;;;354:290:60;424:6;477:2;465:9;456:7;452:23;448:32;445:52;;;493:1;490;483:12;445:52;519:16;;-1:-1:-1;;;;;564:31:60;;554:42;;544:70;;610:1;607;600:12;544:70;633:5;354:290;-1:-1:-1;;;354:290:60:o;3037:336::-;3160:4808:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "3160:4808:59:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3366:62;;;:::i;:::-;;3879:242;;;:::i;2452:134:15:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6031:1087:59;;;:::i;3360:151:15:-;;;:::i;:::-;;;;;;;:::i;4605:440:59:-;;;;;;:::i;:::-;;:::i;3221:133:15:-;;;:::i;2922:141::-;;;:::i;3675:198:59:-;;;:::i;2738:178:15:-;;;:::i;:::-;;;;;;;:::i;1207:604:59:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2592:140:15:-;;;:::i;:::-;;;;;;;:::i;7124:233:59:-;;;:::i;3069:146:15:-;;;:::i;4127:472:59:-;;;;;;:::i;:::-;;:::i;5051:501::-;;;;;;:::i;:::-;;:::i;2157:141:15:-;;;:::i;1819:584:9:-;;;:::i;:::-;;;8402:14:60;;8395:22;8377:41;;8365:2;8350:18;1819:584:9;8237:187:60;7363:603:59;;;;;;:::i;:::-;;:::i;5558:467::-;;;;;;:::i;:::-;;:::i;3434:235::-;;;:::i;2304:142:15:-;;;:::i;1572:26:9:-;;;;;;;;;3366:62:59;3409:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3400:6:59;:21;;-1:-1:-1;;;;;;3400:21:59;-1:-1:-1;;;;;3400:21:59;;;;;;;;;;3366:62::o;3879:242::-;3971:91;;;;;;;;460:42;3971:91;;-1:-1:-1;;;;;4005:4:59;3971:91;;;;;;4019:4;3971:91;;;;;;;;4026:4;3971:91;;;;4032:1;3971:91;;;;-1:-1:-1;3971:91:59;;;;4047:5;3971:91;;;;4072:42;3971:91;4109:4;4072:26;:42::i;:::-;3938:183;3879:242::o;2452:134:15:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:15;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;6031:1087:59:-;6120:187;;;;;;;;460:42;6120:187;;-1:-1:-1;;;;;6166:5:59;6120:187;;;;;;6193:7;6120:187;;;;;;;;;6215:10;6120:187;;;;-1:-1:-1;;6120:187:59;;;;-1:-1:-1;6120:187:59;;;;;;6294:3;6120:187;;;;6362:6;;6120:187;;-1:-1:-1;;6341:54:59;;6362:6;;6120:187;6341:12;:54::i;:::-;6317:78;;6432:16;6419:8;6409:19;;;;;;:39;6405:66;;6450:21;:8;6459:1;6450:11;;;;;;;;:::i;:::-;;;;:21;-1:-1:-1;;;;;6450:21:59;;;;;;;;;6405:66;6481:22;:20;:22::i;:::-;6513:19;6525:6;6513:11;:19::i;:::-;6597:14;;;;6582:56;;-1:-1:-1;;;6582:56:59;;6632:4;6582:56;;;8707:51:60;6542:24:59;;-1:-1:-1;;;;;6582:41:59;;;;8680:18:60;;6582:56:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6542:97;;6650:13;6691:4;-1:-1:-1;;;;;6666:30:59;:6;:14;;;-1:-1:-1;;;;;6666:30:59;;:50;;6715:1;6666:50;;;6699:6;:13;;;6666:50;6650:66;;-1:-1:-1;;;;;;;;;;;309:37:10;;-1:-1:-1;;;;;6726:15:59;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6753:6:59;;6805:14;;;;6833:15;;;;;6862:13;;6889;;;;6753:181;;-1:-1:-1;;;6753:181:59;;-1:-1:-1;;;;;6753:6:59;;;;-1:-1:-1;6753:24:59;;-1:-1:-1;6785:5:59;;6753:181;;6805:14;6889:13;6916:8;;6753:181;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6998:14:59;;;;6983:56;;-1:-1:-1;;;6983:56:59;;7033:4;6983:56;;;8707:51:60;6944:23:59;;-1:-1:-1;;;;;;6983:41:59;;;;-1:-1:-1;6983:41:59;;8680:18:60;;6983:56:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6944:96;;7050:61;7080:16;7061:15;:35;7050:61;;;;;;;;;;;;;-1:-1:-1;;;7050:61:59;;;:10;:61::i;:::-;6089:1029;;;;;6031:1087::o;3360:151:15:-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;4605:440:59:-;4747:6;;4690:21;;4726:54;;-1:-1:-1;;;;;4747:6:59;;4773;4726:12;:54::i;:::-;4690:90;;4790:22;:20;:22::i;:::-;4822:19;4834:6;4822:11;:19::i;:::-;-1:-1:-1;;;;;;;;;;;309:37:10;;-1:-1:-1;;;;;4851:15:59;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4878:6:59;;4916:14;;;;4944:15;;;;;4973:13;;4878:160;;-1:-1:-1;;;4878:160:59;;-1:-1:-1;;;;;4878:6:59;;;;-1:-1:-1;4878:24:59;;-1:-1:-1;4878:160:59;;4944:15;;4973:13;5000:6;;5020:8;;4878:160;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4680:365;4605:440;;:::o;3221:133:15:-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:15;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:15;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;3675:198:59:-;3770:51;;;;;;;;460:42;3770:51;;-1:-1:-1;;;;;3784:4:59;3770:51;;;;;;3790:4;3770:51;;;;;;;;3796:4;3770:51;;;;3802:1;3770:51;;;;-1:-1:-1;3770:51:59;;;;3817:3;3770:51;;;;3831:35;3770:51;3831:22;:35::i;2738:178:15:-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1207:604:59;1358:15;;;1371:1;1358:15;;;;;;;;;1305:12;;1333:22;;1358:15;;;;;;;;;;;;;;;;;;;;;1333:40;;1383:18;;;;;;;;;;;;;-1:-1:-1;;;1383:18:59;;;:6;1390:1;1383:9;;;;;;;;:::i;:::-;;;;;;:18;;;;1411:45;;;;;;;;;;;;;;;;;:6;1418:1;1411:9;;;;;;;;:::i;:::-;;;;;;;;;;:45;1478:17;;-1:-1:-1;;;1478:17:59;;-1:-1:-1;;;;;8725:32:60;;1478:17:59;;;8707:51:60;-1:-1:-1;;;;;;;;;;;1478:11:59;;;8680:18:60;;1478:17:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1478:17:59;;;;;;;;;;;;:::i;:::-;1466:6;1473:1;1466:9;;;;;;;;:::i;:::-;;;;;;;;;;:29;1517:15;;-1:-1:-1;;;1517:15:59;;-1:-1:-1;;;;;8725:32:60;;1517:15:59;;;8707:51:60;-1:-1:-1;;;;;;;;;;;1517:11:59;;;8680:18:60;;1517:15:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1517:15:59;;;;;;;;;;;;:::i;:::-;1505:6;1512:1;1505:9;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;;1574:12;;;1554:34;;-1:-1:-1;;;1554:34:59;;-1:-1:-1;;;;;8725:32:60;;;1554:34:59;;;8707:51:60;-1:-1:-1;;;;;;;;;;;1554:11:59;;;8680:18:60;;1554:34:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1554:34:59;;;;;;;;;;;;:::i;:::-;1542:6;1549:1;1542:9;;;;;;;;:::i;:::-;;;;;;;;;;:46;1630:13;;;;;1610:35;;-1:-1:-1;;;1610:35:59;;-1:-1:-1;;;;;8725:32:60;;;1610:35:59;;;8707:51:60;-1:-1:-1;;;;;;;;;;;1610:11:59;;;8680:18:60;;1610:35:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1610:35:59;;;;;;;;;;;;:::i;:::-;1598:6;1605:1;1598:9;;;;;;;;:::i;:::-;;;;;;;;;;:47;1679:11;;;;1667:24;;-1:-1:-1;;;1667:24:59;;;;;10956:25:60;;;;-1:-1:-1;;;;;;;;;;;1667:11:59;;;10929:18:60;;1667:24:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1667:24:59;;;;;;;;;;;;:::i;:::-;1655:6;1662:1;1655:9;;;;;;;;:::i;:::-;;;;;;;;;;:36;1725:13;;;;1713:26;;-1:-1:-1;;;1713:26:59;;;;;10956:25:60;;;;-1:-1:-1;;;;;;;;;;;1713:11:59;;;10929:18:60;;1713:26:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1713:26:59;;;;;;;;;;;;:::i;:::-;1701:6;1708:1;1701:9;;;;;;;;:::i;:::-;;;;;;;;;;:38;1769:14;;-1:-1:-1;;;1769:14:59;;1750:16;;-1:-1:-1;;;;;;;;;;;1769:6:59;;;:14;;1776:6;;1769:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1769:14:59;;;;;;;;;;;;:::i;:::-;1750:33;-1:-1:-1;;;1207:604:59;;;;;;:::o;2592:140:15:-;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7124:233:59;7194:6;;:33;;-1:-1:-1;;;7194:33:59;;460:42;7194:33;;;8707:51:60;-1:-1:-1;;;;;7194:6:59;;;;:24;;8680:18:60;;7194:33:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7189:106;;7243:6;;:41;;-1:-1:-1;;;7243:41:59;;460:42;7243:41;;;8707:51:60;-1:-1:-1;;;;;7243:6:59;;;;:32;;8680:18:60;;7243:41:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7189:106;7124:233::o;3069:146:15:-;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4127:472:59;4249:6;;4192:21;;4228:54;;-1:-1:-1;;;;;4249:6:59;;4275;4228:12;:54::i;:::-;4192:90;;4292:22;:20;:22::i;:::-;4324:19;4336:6;4324:11;:19::i;:::-;4357;;;;;;:39;;4353:62;;-1:-1:-1;;;;;;;;;;;309:37:10;;-1:-1:-1;;;;;4398:15:59;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4353:62;4425:6;;4463:14;;;;4491:15;;;;;4520:13;;4547;;;;4425:167;;-1:-1:-1;;;4425:167:59;;-1:-1:-1;;;;;4425:6:59;;;;:24;;:167;;4463:14;;4491:15;4520:13;4574:8;;4425:167;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4182:417;4127:472;:::o;5051:501::-;5177:6;;5120:21;;5156:54;;-1:-1:-1;;;;;5177:6:59;;5203;5156:12;:54::i;:::-;5120:90;;5220:22;:20;:22::i;:::-;5252:19;5264:6;5252:11;:19::i;:::-;5285;;;;;;:39;;5281:62;;-1:-1:-1;;;;;;;;;;;309:37:10;;-1:-1:-1;;;;;5326:15:59;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5281:62;5353:6;;5385:13;;;;5413:14;;;;5442:15;;;;;5472:13;;5353:192;;-1:-1:-1;;;5353:192:59;;-1:-1:-1;;;;;5353:6:59;;;;:24;;5385:13;5353:192;;5413:14;;5442:15;5385:13;;5527:8;;5353:192;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;2157:141:15;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:9;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:9;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2985:55:9;3066:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:9;;;11911:51:60;;;-1:-1:-1;;;11978:18:60;;;11971:34;2196:43:9;;;;;;;;;11884:18:60;;;2196:43:9;;;-1:-1:-1;;1671:64:9;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:9;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:9:o;7363:603:59:-;7443:4;-1:-1:-1;;;;;7425:22:59;:6;:14;;;-1:-1:-1;;;;;7425:22:59;;7421:497;;7467:19;;;;-1:-1:-1;;;;;7467:33:59;7463:319;;7520:57;7533:6;:14;;;7558:4;7565:11;7520:4;:57::i;:::-;7463:319;;;7625:19;;;;7616:29;;-1:-1:-1;;;7616:29:59;;-1:-1:-1;;;;;8725:32:60;;;7616:29:59;;;8707:51:60;-1:-1:-1;;;;;;;;;;;7616:8:59;;;8680:18:60;;7616:29:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7663:104;7707:6;:14;;;7731:4;7738:11;7663:22;:104::i;:::-;7842:14;;;;7867:6;;7795:112;;7842:14;-1:-1:-1;;;;;7867:6:59;-1:-1:-1;;7795:22:59;:112::i;:::-;7927:32;7940:4;7947:11;7927:4;:32::i;5558:467::-;5704:6;;5659:21;;5683:54;;-1:-1:-1;;;;;5704:6:59;;5730;5683:12;:54::i;:::-;5659:78;;5747:22;:20;:22::i;:::-;5779:19;5791:6;5779:11;:19::i;:::-;-1:-1:-1;;;;;;;;;;;309:37:10;;-1:-1:-1;;;;;5808:15:59;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5835:6:59;;5888:14;;;;5917:15;;;;;5946:13;;5973;;;;5835:183;;-1:-1:-1;;;5835:183:59;;-1:-1:-1;;;;;5835:6:59;;;;-1:-1:-1;5835:24:59;;-1:-1:-1;5867:6:59;;5835:183;;5888:14;5973:13;6000:8;;5835:183;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5649:376;5558:467;;:::o;3434:235::-;3540:60;;;;;;;;460:42;3540:60;;-1:-1:-1;;;;;3554:5:59;3540:60;;;;;;3561:7;3540:60;;;;;;;;3570:10;3540:60;;;;;;3582:1;3540:60;;;;-1:-1:-1;3540:60:59;;;;3597:2;3540:60;;;;3610:52;;3540:60;;3610:26;:52::i;2304:142:15:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:15;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;3425:191:9:-;3504:9;3499:111;;3534:30;3560:3;3534:30;;;;;;:::i;:::-;;;;;;;;3578:21;3589:9;3578:10;:21::i;:::-;3425:191;;:::o;26925:117:13:-;27007:28;27012:5;27019:2;27023:4;27029:5;27007:4;:28::i;:::-;26925:117;;;:::o;941:175:43:-;1050:58;;-1:-1:-1;;;;;11929:32:60;;1050:58:43;;;11911:51:60;11978:18;;;11971:34;;;1023:86:43;;1043:5;;-1:-1:-1;;;1073:23:43;11884:18:60;;1050:58:43;;;;-1:-1:-1;;1050:58:43;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:43;-1:-1:-1;;;;;;1050:58:43;;;;;;;;;;1023:19;:86::i;3779:410::-;3894:62;;;-1:-1:-1;;;;;11929:32:60;;3894:62:43;;;11911:51:60;11978:18;;;;11971:34;;;3894:62:43;;;;;;;;;;11884:18:60;;;;3894:62:43;;;;;;;;-1:-1:-1;;;;;3894:62:43;-1:-1:-1;;;3894:62:43;;;3972:44;3996:5;3894:62;3972:23;:44::i;:::-;3967:216;;4059:58;;-1:-1:-1;;;;;13625:32:60;;4059:58:43;;;13607:51:60;4115:1:43;13674:18:60;;;13667:45;4032:86:43;;4052:5;;-1:-1:-1;;;4082:22:43;13580:18:60;;4059:58:43;13427:291:60;4032:86:43;4132:40;4152:5;4159:12;4132:19;:40::i;26710:91:13:-;26777:17;;-1:-1:-1;;;26777:17:13;;-1:-1:-1;;;;;11929:32:60;;26777:17:13;;;11911:51:60;11978:18;;;11971:34;;;-1:-1:-1;;;;;;;;;;;26777:7:13;;;11884:18:60;;26777:17:13;11737:274:60;3262:157:9;3322:9;3317:96;;3352:30;;;;;13925:2:60;13907:21;;;13964:2;13944:18;;;13937:30;14003:25;13998:2;13983:18;;13976:53;14061:2;14046:18;;13723:347;3352:30:9;;;;;;;;3396:6;:4;:6::i;27321:837:13:-;27491:38;;;-1:-1:-1;;;;;8725:32:60;;;27491:38:13;;;;8707:51:60;;;;27491:38:13;;;;;;;;;;8680:18:60;;;;27491:38:13;;;;;;;-1:-1:-1;;;;;27491:38:13;-1:-1:-1;;;27491:38:13;;;27474:56;;27450:20;;27474:16;;;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27447:83;;;27540:15;27569:7;27558:30;;;;;;;;;;;;:::i;:::-;27540:48;-1:-1:-1;27625:71:13;27691:4;27625:51;27673:2;27625:38;-1:-1:-1;;;27625:22:13;:8;27641:5;27625:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;27742:6;27738:414;;;27811:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27811:34:13;-1:-1:-1;;;27811:34:13;;;27794:52;;27767:23;;-1:-1:-1;;;;;27794:16:13;;;:52;;27811:34;27794:52;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27764:82;;;27860:14;27888:10;27877:33;;;;;;;;;;;;:::i;:::-;27860:50;;27935:7;27928:4;:14;27924:144;;;27973:14;27983:4;27973:7;:14;:::i;:::-;27962:26;;;;:::i;:::-;;;27924:144;;;28038:14;28045:7;28038:4;:14;:::i;:::-;28027:26;;;;:::i;:::-;;;27924:144;28081:60;28134:6;28081:38;-1:-1:-1;;;28081:22:13;:8;28097:5;28081:15;:22::i;5196:642:43:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:43;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:43;;14672:2:60;5720:111:43;;;14654:21:60;14711:2;14691:18;;;14684:30;14750:34;14730:18;;;14723:62;-1:-1:-1;;;14801:18:60;;;14794:40;14851:19;;5720:111:43;;;;;;;;6339:594;6422:4;6724:12;6738:23;6773:5;-1:-1:-1;;;;;6765:19:43;6785:4;6765:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6723:67;;;;6819:7;:69;;;;-1:-1:-1;6831:17:43;;:22;;:56;;;6868:10;6857:30;;;;;;;;;;;;:::i;:::-;6819:107;;;;-1:-1:-1;;;;;;1702:19:46;;;:23;;6892:34:43;6800:126;;;;6339:594;;;;;:::o;2409:432:9:-;-1:-1:-1;;;;;;;;;;;2985:55:9;3066:16;2452:359;;2652:67;;2489:11;;-1:-1:-1;;;;;;;;;;;1671:64:9;2586:43;;2652:67;;1671:64;;-1:-1:-1;;;2677:17:9;2712:4;;2652:67;;;:::i;:::-;;;;-1:-1:-1;;2652:67:9;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:9;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:9;2820:7;:14;;-1:-1:-1;;2820:14:9;;;;;2409:432::o;9231:156:18:-;4680:12;;;:22;;-1:-1:-1;;;;;;4680:22:18;-1:-1:-1;;;;;4680:22:18;;;;;-1:-1:-1;4680:12:18;9344:36;4574:156;9393:143;4835:9;;;:16;;-1:-1:-1;;4835:16:18;;;;;;;;-1:-1:-1;4835:9:18;9499:30;4736:143;9698:152;5151:10;;;:47;;;;;;;9772:18;5151:47;;;;;;-1:-1:-1;;;;;5175:21:18;;5151:47;;;9833:4;9809:34;5047:179;10474:120;10554:33;10568:4;10582:3;10554:13;:33::i;4108:223:46:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:46:o;10966:1095:18:-;11060:12;;;;11096:9;;;;11137:11;;;;11181:10;;;11158:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11060:12:18;;;;11096:9;;;;;;11046:11;;11158:33;;11181:10;;11158:33;;11181:10;11158:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11202:17;11239:4;11245:12;11253:3;11245:7;:12::i;:::-;11222:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11222:36:18;;;;;;;;;-1:-1:-1;;;;;11273:15:18;;;;;;:10;;;11222:36;11273:15;;;;;;-1:-1:-1;;;;;;11273:21:18;;;;;;;;;11222:36;;-1:-1:-1;11273:21:18;;:15;;11305:34;;11322:3;;11327:11;;11305:34;;:::i;:::-;;;;-1:-1:-1;;11305:34:18;;;;;;;;;11295:45;;11305:34;11295:45;;;;11273:68;;;;;;;;;;-1:-1:-1;11273:68:18;;;;11268:110;;11357:10;11362:4;11357;:10::i;:::-;;11268:110;-1:-1:-1;;;;;11410:15:18;;11387:12;11410:15;;;;;;;;;;;-1:-1:-1;;;;;;11410:21:18;;;;;;;;;11442:34;;11410:21;;11387:12;;11442:34;;11459:3;;11464:11;;11442:34;;:::i;:::-;;;;;;;;;;;;;11432:45;;;;;;11410:68;;;;;;;;;;;;11402:77;;11387:92;;11490:12;11529:17;11550:3;-1:-1:-1;;;;;11550:14:18;11565:4;11550:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11526:44:18;-1:-1:-1;11591:38:18;;-1:-1:-1;11526:44:18;11612:16;11617:11;11612:2;:16;:::i;:::-;11591:14;:38::i;:::-;11664:18;;-1:-1:-1;;;11664:18:18;;-1:-1:-1;;;;;11929:32:60;;11664:18:18;;;11911:51:60;11978:18;;;11971:34;;;11584:45:18;;-1:-1:-1;11649:12:18;;-1:-1:-1;;;;;;;;;;;;11664:7:18;;;11884:18:60;;11664::18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11649:33;;11705:4;11697;:12;11693:218;;11725:175;;-1:-1:-1;;;11725:175:18;;;;;;;:::i;:::-;11920:24;;-1:-1:-1;;;11920:24:18;;-1:-1:-1;;;;;;;;;;;11920:8:18;;;:24;;11929:3;;11934:4;;11940:3;;11920:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11961:12:18;;;11954:19;;-1:-1:-1;;;;;;11954:19:18;;;-1:-1:-1;11990:9:18;;;11983:16;;-1:-1:-1;;11983:16:18;;;12009:17;-1:-1:-1;12016:10:18;;11961:12;12009:17;:::i;:::-;12043:4;:11;;12036:18;;;11036:1025;;;;;;;;10966:1095;;:::o;5165:446:46:-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:46;;16971:2:60;5354:81:46;;;16953:21:60;17010:2;16990:18;;;16983:30;17049:34;17029:18;;;17022:62;-1:-1:-1;;;17100:18:60;;;17093:36;17146:19;;5354:81:46;16769:402:60;5354:81:46;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:46;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:46:o;13395:393:18:-;13454:12;13478:19;13510:1;:8;13521:2;13510:13;;;;:::i;:::-;13500:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13500:24:18;;13478:46;;13539:9;13534:224;13558:1;:8;13554:1;:12;13534:224;;;13587:9;13599:1;13601;13599:4;;;;;;;;:::i;:::-;;;;;;;13587:16;;13732:1;13726;13722:2;13718:10;13714:2;13710:19;13702:6;13698:32;13691:43;13673:75;13568:3;;;;;:::i;:::-;;;;13534:224;;;-1:-1:-1;13775:6:18;13395:393;-1:-1:-1;;13395:393:18:o;9110:115::-;9167:7;9193:25;9213:4;9193:19;:25::i;13034:304::-;13112:7;13131:11;13153;13178:2;13167:1;:8;:13;:29;;13188:1;:8;13167:29;;;13183:2;13167:29;13153:43;;13211:9;13206:106;13230:3;13226:1;:7;13206:106;;;13295:5;:1;13299;13295:5;:::i;:::-;13269:1;13271:10;13280:1;13271:6;:10;:::i;:::-;13269:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;13269:13:18;13261:40;;13254:47;;;;;13235:3;;;;:::i;:::-;;;;13206:106;;;-1:-1:-1;13328:3:18;;13034:304;-1:-1:-1;;;;13034:304:18:o;7671:628:46:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:46;;;8113:60;;;;-1:-1:-1;;;8113:60:46;;17518:2:60;8113:60:46;;;17500:21:60;17557:2;17537:18;;;17530:30;17596:31;17576:18;;;17569:59;17645:18;;8113:60:46;17316:353:60;8113:60:46;-1:-1:-1;8208:10:46;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;1264:3304:18:-;1354:12;;;;1390:9;;;;1431:11;;;;1475:10;;;1452:33;;;;;;;;;;;;;;;;;;;1321:7;;-1:-1:-1;;;;;1354:12:18;;1390:9;;;1431:11;1321:7;;1452:33;;1475:10;;1452:33;;;1475:10;1452:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1536:15:18;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;1536:21:18;;;;;;;;;1568:34;;1452:33;;-1:-1:-1;1536:21:18;:15;;-1:-1:-1;1568:34:18;;-1:-1:-1;1452:33:18;;1590:11;;1568:34;;:::i;:::-;;;;-1:-1:-1;;1568:34:18;;;;;;;;;1558:45;;1568:34;1558:45;;;;1536:68;;;;;;;;;;-1:-1:-1;1536:68:18;;;;1532:174;;;-1:-1:-1;;;;;1627:15:18;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;1627:21:18;;;;;;;;;1659:34;;1627:21;;:10;1659:34;;1676:3;;1681:11;;1659:34;;:::i;:::-;;;;;;;;;;;;;1649:45;;;;;;1627:68;;;;;;;;;;;;1620:75;;;;;;1264:3304;;;:::o;1532:174::-;1715:17;1752:4;1758:12;1766:3;1758:7;:12::i;:::-;1735:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1715:56;;-1:-1:-1;;;;;;;;;;;580:37:18;;-1:-1:-1;;;;;1781:9:18;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:12;1841:17;1862:3;-1:-1:-1;;;;;1862:14:18;1877:4;1862:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1838:44:18;-1:-1:-1;1903:38:18;;-1:-1:-1;1838:44:18;1924:16;1929:11;1924:2;:16;:::i;:::-;1903:14;:38::i;:::-;1990:25;;-1:-1:-1;;;1990:25:18;;-1:-1:-1;;;;;8725:32:60;;1990:25:18;;;8707:51:60;1896:45:18;;-1:-1:-1;1963:22:18;;-1:-1:-1;;;;;;;;;;;;1990:11:18;;;8680:18:60;;1990:25:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1990:25:18;;;;;;;;;;;;:::i;:::-;1962:53;;;2029:5;:12;2045:1;2029:17;2025:2167;;2062:12;-1:-1:-1;;;;;;;;;;;580:37:18;;-1:-1:-1;;;;;2077:7:18;;2085:3;2090:5;2096:1;2090:8;;;;;;;;:::i;:::-;;;;;;;2077:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;11929:32:60;;;;11911:51;;11993:2;11978:18;;11971:34;11899:2;11884:18;;11737:274;2077:22:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2062:37;-1:-1:-1;2062:37:18;2113:106;;2160:44;2181:3;2194:5;2200:1;2194:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2160:44;;;-1:-1:-1;;;;;11929:32:60;;;11911:51;;11978:18;;;11971:34;11884:18;2160:44:18;;;;;;;2113:106;2244:4;2236;:12;2232:238;;2268:187;;-1:-1:-1;;;2268:187:18;;;;;;;:::i;:::-;2488:86;2498:3;2503:4;2536:3;2541:11;2519:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2509:45;;;;;;2564:5;2570:1;2564:8;;;;;;;;:::i;:::-;;;;;;;2556:17;;2488:86;;;;;;;;;:::i;:::-;;;;;;;;2667:5;2673:1;2667:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2588:15:18;;2659:17;2588:15;;;;;;;;;;-1:-1:-1;;;;;;2588:21:18;;;;;;;;;2620:34;;2667:8;;2588:21;;2620:34;;2637:3;;2642:11;;2620:34;;:::i;:::-;;;;-1:-1:-1;;2620:34:18;;;;;;;;;2610:45;;2620:34;2610:45;;;;2588:68;;;;;;;;;;;;-1:-1:-1;2588:68:18;;;:88;;;;-1:-1:-1;;;;;2690:15:18;;;;2761:4;2690:10;;;:15;;;;;-1:-1:-1;;;;;;2690:21:18;;;;;;;;;2722:34;;2761:4;;-1:-1:-1;2722:34:18;;2739:3;;2744:11;;2722:34;;:::i;:::-;;;;;;;-1:-1:-1;;2722:34:18;;;;;;2712:45;;2722:34;2712:45;;;;2690:68;;;;;;;;;;-1:-1:-1;2690:68:18;:75;;-1:-1:-1;;2690:75:18;;;;;;;;;;-1:-1:-1;2025:2167:18;;;2801:1;2786:5;:12;:16;2782:1410;;;2823:9;2818:1259;2842:5;:12;2838:1;:16;2818:1259;;;2879:12;-1:-1:-1;;;;;;;;;;;580:37:18;;-1:-1:-1;;;;;2894:7:18;;2902:3;2907:5;2913:1;2907:8;;;;;;;;:::i;:::-;;;;;;;2894:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;11929:32:60;;;;11911:51;;11993:2;11978:18;;11971:34;11899:2;11884:18;;11737:274;2894:22:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2879:37;-1:-1:-1;2879:37:18;2934:114;;2985:44;3006:3;3019:5;3025:1;3019:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2985:44;;;-1:-1:-1;;;;;11929:32:60;;;11911:51;;11978:18;;;11971:34;11884:18;2985:44:18;;;;;;;2934:114;3077:4;3069;:12;3065:67;;3105:8;;;3065:67;3229:8;;3167:5;;;-1:-1:-1;;;;;;;;;;;3215:8:18;;;3224:3;;3229:5;;3235:1;;3229:8;;;;;;:::i;:::-;;;;;;;3239:7;3215:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3265:12;3317:17;3374:3;-1:-1:-1;;;;;3374:14:18;3389:4;3374:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3356:38:18;;-1:-1:-1;3356:38:18;-1:-1:-1;3423:38:18;3356;3444:16;3449:11;3444:2;:16;:::i;3423:38::-;3416:45;;3295:185;3502:7;:26;;;;;3521:7;3513:4;:15;3502:26;3498:518;;;3626:86;3636:3;3641:4;3674:3;3679:11;3657:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3647:45;;;;;;3702:5;3708:1;3702:8;;;;;;;;:::i;:::-;;;;;;;3694:17;;3626:86;;;;;;;;;:::i;:::-;;;;;;;;3813:5;3819:1;3813:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3734:15:18;;3805:17;3734:15;;;;;;;;;;-1:-1:-1;;;;;;3734:21:18;;;;;;;;;3766:34;;3813:8;;3734:21;;3766:34;;3783:3;;3788:11;;3766:34;;:::i;:::-;;;;;;;;;;;;;3756:45;;;;;;3734:68;;;;;;;;;;;:88;;;;3915:4;3844;:10;;:15;3855:3;-1:-1:-1;;;;;3844:15:18;-1:-1:-1;;;;;3844:15:18;;;;;;;;;;;;:21;3860:4;-1:-1:-1;;;;;3844:21:18;;-1:-1:-1;;;;;3844:21:18;;;;;;;;;;;;;:68;3893:3;3898:11;3876:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3866:45;;;;;;3844:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;580:37:18;;-1:-1:-1;;;;;3941:8:18;;3950:3;3955:5;3961:1;3955:8;;;;;;;;:::i;:::-;;;;;;;3965:4;3941:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3992:5;;;;;3498:518;-1:-1:-1;;;;;;;;;;;580:37:18;;-1:-1:-1;;;;;4033:8:18;;4042:3;4047:5;4053:1;4047:8;;;;;;;;:::i;:::-;;;;;;;4057:4;4033:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2861:1216;;;2818:1259;2856:3;;;;:::i;:::-;;;;2818:1259;;;;2782:1410;;;4107:74;;;-1:-1:-1;;;4107:74:18;;19656:2:60;4107:74:18;;;19638:21:60;19675:18;;;19668:30;;;;19734:34;19714:18;;;19707:62;19805:34;19785:18;;;19778:62;19857:19;;4107:74:18;19454:428:60;2782:1410:18;-1:-1:-1;;;;;4223:15:18;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;4223:21:18;;;;;;;;;4255:34;;4223:21;;:15;4255:34;;4272:3;;4277:11;;4255:34;;:::i;:::-;;;;-1:-1:-1;;4255:34:18;;;;;;;;;4245:45;;4255:34;4245:45;;;;4223:68;;;;;;;;;;-1:-1:-1;4223:68:18;;;;4202:162;;;;-1:-1:-1;;;4202:162:18;;20089:2:60;4202:162:18;;;20071:21:60;20128:2;20108:18;;;20101:30;20167:34;20147:18;;;20140:62;-1:-1:-1;;;20218:18:60;;;20211:45;20273:19;;4202:162:18;19887:411:60;4202:162:18;4382:12;;;4375:19;;-1:-1:-1;;;;;;4375:19:18;;;4411:9;;;4404:16;;-1:-1:-1;;4404:16:18;;;4430:17;-1:-1:-1;4437:10:18;;4382:12;4430:17;:::i;:::-;4457:18;4464:11;;;4457:18;;;-1:-1:-1;;;;;4493:15:18;;;;;;;;;;;;-1:-1:-1;;;;;;4493:21:18;;;;;;;;;4525:34;;4493:21;;4457:18;4525:34;;4542:3;;4547:11;;4525:34;;:::i;:::-;;;;;;;;;;;;;4515:45;;;;;;4493:68;;;;;;;;;;;;4486:75;;;;;;;;;1264:3304;;;:::o;8821:540:46:-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:46;;;;;;;;:::i;8473:393:18:-;8532:12;8556:19;8588:1;:8;8599:2;8588:13;;;;:::i;:::-;8578:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8578:24:18;;8556:46;;8617:9;8612:224;8636:1;:8;8632:1;:12;8612:224;;;8665:9;8677:1;8679;8677:4;;;;;;;;:::i;:::-;;;;;;;8665:16;;8810:1;8804;8800:2;8796:10;8792:2;8788:19;8780:6;8776:32;8769:43;8751:75;8646:3;;;;;:::i;:::-;;;;8612:224;;8163:304;8241:7;8260:11;8282;8307:2;8296:1;:8;:13;:29;;8317:1;:8;8296:29;;;8312:2;8296:29;8282:43;;8340:9;8335:106;8359:3;8355:1;:7;8335:106;;;8424:5;:1;8428;8424:5;:::i;:::-;8398:1;8400:10;8409:1;8400:6;:10;:::i;:::-;8398:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;8398:13:18;8390:40;;8383:47;;;;;8364:3;;;;:::i;:::-;;;;8335:106;;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:658:60:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:60;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:60;;14:658;-1:-1:-1;;;;;;14:658:60:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:60;901:16;;894:27;677:250::o;932:271::-;974:3;1012:5;1006:12;1039:6;1034:3;1027:19;1055:76;1124:6;1117:4;1112:3;1108:14;1101:4;1094:5;1090:16;1055:76;:::i;:::-;1185:2;1164:15;-1:-1:-1;;1160:29:60;1151:39;;;;1192:4;1147:50;;932:271;-1:-1:-1;;932:271:60:o;1208:1742::-;1441:2;1493:21;;;1563:13;;1466:18;;;1585:22;;;1412:4;;1441:2;1626;;1644:18;;;;1681:1;1724:15;;;1709:31;;1705:40;;1768:15;;;1412:4;;1832:1089;1848:6;1843:3;1840:15;1832:1089;;;-1:-1:-1;;1917:22:60;;;1913:36;1901:49;;1973:13;;2060:9;;-1:-1:-1;;;;;2056:35:60;2041:51;;2131:11;;2125:18;2163:15;;;2156:27;;;2244:19;;2013:15;;;2276:24;;;2457:21;;;;2323:2;2405:17;;;2393:30;;2389:39;;;2347:15;;;;2502:1;2516:296;2532:8;2527:3;2524:17;2516:296;;;2638:2;2634:7;2625:6;2617;2613:19;2609:33;2602:5;2595:48;2670:42;2705:6;2694:8;2688:15;2670:42;:::i;:::-;2741:17;;;;2660:52;-1:-1:-1;2784:14:60;;;;2560:1;2551:11;2516:296;;;-1:-1:-1;;;2899:12:60;;;;2835:6;-1:-1:-1;;2864:15:60;;;;1874:1;1865:11;1832:1089;;;-1:-1:-1;2938:6:60;;1208:1742;-1:-1:-1;;;;;;;;;;1208:1742:60:o;2955:127::-;3016:10;3011:3;3007:20;3004:1;2997:31;3047:4;3044:1;3037:15;3071:4;3068:1;3061:15;3087:275;3158:2;3152:9;3223:2;3204:13;;-1:-1:-1;;3200:27:60;3188:40;;3258:18;3243:34;;3279:22;;;3240:62;3237:88;;;3305:18;;:::i;:::-;3341:2;3334:22;3087:275;;-1:-1:-1;3087:275:60:o;3367:131::-;-1:-1:-1;;;;;3442:31:60;;3432:42;;3422:70;;3488:1;3485;3478:12;3503:1097;3554:5;3602:4;3590:9;3585:3;3581:19;3577:30;3574:50;;;3620:1;3617;3610:12;3574:50;3653:2;3647:9;3695:4;3687:6;3683:17;3766:6;3754:10;3751:22;3730:18;3718:10;3715:34;3712:62;3709:88;;;3777:18;;:::i;:::-;3813:2;3806:22;3846:6;-1:-1:-1;3846:6:60;3876:23;;3908:33;3876:23;3908:33;:::i;:::-;3950:23;;4025:2;4010:18;;3997:32;4038:33;3997:32;4038:33;:::i;:::-;4099:2;4087:15;;4080:32;4164:2;4149:18;;4136:32;4177:33;4136:32;4177:33;:::i;:::-;4243:7;4238:2;4230:6;4226:15;4219:32;;4312:2;4301:9;4297:18;4284:32;4279:2;4271:6;4267:15;4260:57;4379:3;4368:9;4364:19;4351:33;4345:3;4337:6;4333:16;4326:59;4437:3;4426:9;4422:19;4409:33;4451;4476:7;4451:33;:::i;:::-;4512:3;4500:16;;4493:33;4588:3;4573:19;;;4560:33;4542:16;;4535:59;;;;3503:1097;;-1:-1:-1;3503:1097:60:o;4605:292::-;4696:6;4704;4757:3;4745:9;4736:7;4732:23;4728:33;4725:53;;;4774:1;4771;4764:12;4725:53;4797:42;4831:7;4820:9;4797:42;:::i;:::-;4787:52;4886:3;4871:19;;;;4858:33;;-1:-1:-1;;;4605:292:60:o;4902:1567::-;5104:4;5133:2;5173;5162:9;5158:18;5203:2;5192:9;5185:21;5226:6;5261;5255:13;5292:6;5284;5277:22;5318:2;5308:12;;5351:2;5340:9;5336:18;5329:25;;5413:2;5403:6;5400:1;5396:14;5385:9;5381:30;5377:39;5451:2;5443:6;5439:15;5472:1;5493;5503:937;5519:6;5514:3;5511:15;5503:937;;;5588:22;;;-1:-1:-1;;5584:36:60;5572:49;;5644:13;;5731:9;;-1:-1:-1;;;;;5727:35:60;5712:51;;5802:11;;5796:18;5834:15;;;5827:27;;;5915:19;;5684:15;;;5947:24;;;6037:21;;;;6082:1;;6005:2;5993:15;;;6096:236;6112:8;6107:3;6104:17;6096:236;;;6193:15;;-1:-1:-1;;;;;;6189:42:60;6175:57;;6301:17;;;;6140:1;6131:11;;;;;6258:14;;;;6096:236;;;-1:-1:-1;6418:12:60;;;;6355:5;-1:-1:-1;;;6383:15:60;;;;5545:1;5536:11;5503:937;;;-1:-1:-1;6457:6:60;;4902:1567;-1:-1:-1;;;;;;;;;4902:1567:60:o;6474:499::-;6574:6;6582;6590;6643:3;6631:9;6622:7;6618:23;6614:33;6611:53;;;6660:1;6657;6650:12;6611:53;6699:9;6686:23;6718:31;6743:5;6718:31;:::i;:::-;6768:5;-1:-1:-1;6825:2:60;6810:18;;6797:32;6838:33;6797:32;6838:33;:::i;:::-;6890:7;-1:-1:-1;6916:51:60;6959:7;6954:2;6939:18;;6916:51;:::i;:::-;6906:61;;6474:499;;;;;:::o;6978:218::-;7125:2;7114:9;7107:21;7088:4;7145:45;7186:2;7175:9;7171:18;7163:6;7145:45;:::i;7201:803::-;7363:4;7392:2;7432;7421:9;7417:18;7462:2;7451:9;7444:21;7485:6;7520;7514:13;7551:6;7543;7536:22;7589:2;7578:9;7574:18;7567:25;;7651:2;7641:6;7638:1;7634:14;7623:9;7619:30;7615:39;7601:53;;7689:2;7681:6;7677:15;7710:1;7720:255;7734:6;7731:1;7728:13;7720:255;;;7827:2;7823:7;7811:9;7803:6;7799:22;7795:36;7790:3;7783:49;7855:40;7888:6;7879;7873:13;7855:40;:::i;:::-;7845:50;-1:-1:-1;7953:12:60;;;;7918:15;;;;7756:1;7749:9;7720:255;;;-1:-1:-1;7992:6:60;;7201:803;-1:-1:-1;;;;;;;7201:803:60:o;8009:223::-;8091:6;8144:3;8132:9;8123:7;8119:23;8115:33;8112:53;;;8161:1;8158;8151:12;8112:53;8184:42;8218:7;8207:9;8184:42;:::i;8429:127::-;8490:10;8485:3;8481:20;8478:1;8471:31;8521:4;8518:1;8511:15;8545:4;8542:1;8535:15;8769:184;8839:6;8892:2;8880:9;8871:7;8867:23;8863:32;8860:52;;;8908:1;8905;8898:12;8860:52;-1:-1:-1;8931:16:60;;8769:184;-1:-1:-1;8769:184:60:o;8958:602::-;-1:-1:-1;;;;;9287:15:60;;;9269:34;;9339:15;;;9334:2;9319:18;;9312:43;9391:15;;9386:2;9371:18;;9364:43;9438:2;9423:18;;9416:34;;;9249:3;9481;9466:19;;9459:32;;;9212:4;;9508:46;;9534:19;;9526:6;9508:46;:::i;9565:380::-;9644:1;9640:12;;;;9687;;;9708:61;;9762:4;9754:6;9750:17;9740:27;;9708:61;9815:2;9807:6;9804:14;9784:18;9781:38;9778:161;;9861:10;9856:3;9852:20;9849:1;9842:31;9896:4;9893:1;9886:15;9924:4;9921:1;9914:15;9778:161;;9565:380;;;:::o;9950:391::-;10026:5;10060:18;10052:6;10049:30;10046:56;;;10082:18;;:::i;:::-;10120:57;10165:2;10144:15;;-1:-1:-1;;10140:29:60;10171:4;10136:40;10120:57;:::i;:::-;10111:66;;10200:6;10193:5;10186:21;10240:3;10231:6;10226:3;10222:16;10219:25;10216:45;;;10257:1;10254;10247:12;10216:45;10270:65;10328:6;10321:4;10314:5;10310:16;10305:3;10270:65;:::i;10346:459::-;10426:6;10479:2;10467:9;10458:7;10454:23;10450:32;10447:52;;;10495:1;10492;10485:12;10447:52;10528:9;10522:16;10561:18;10553:6;10550:30;10547:50;;;10593:1;10590;10583:12;10547:50;10616:22;;10669:4;10661:13;;10657:27;-1:-1:-1;10647:55:60;;10698:1;10695;10688:12;10647:55;10721:78;10791:7;10786:2;10780:9;10775:2;10771;10767:11;10721:78;:::i;11455:277::-;11522:6;11575:2;11563:9;11554:7;11550:23;11546:32;11543:52;;;11591:1;11588;11581:12;11543:52;11623:9;11617:16;11676:5;11669:13;11662:21;11655:5;11652:32;11642:60;;11698:1;11695;11688:12;12016:384;-1:-1:-1;;;;;;12201:33:60;;12189:46;;12258:13;;12171:3;;12280:74;12258:13;12343:1;12334:11;;12327:4;12315:17;;12280:74;:::i;:::-;12374:16;;;;12392:1;12370:24;;12016:384;-1:-1:-1;;;12016:384:60:o;12405:287::-;12534:3;12572:6;12566:13;12588:66;12647:6;12642:3;12635:4;12627:6;12623:17;12588:66;:::i;:::-;12670:16;;;;;12405:287;-1:-1:-1;;12405:287:60:o;12697:446::-;12947:2;12936:9;12929:21;12986:1;12981:2;12970:9;12966:18;12959:29;-1:-1:-1;;;13019:2:60;13008:9;13004:18;12997:35;13070:3;13063:4;13052:9;13048:20;13041:33;12910:4;13091:46;13132:3;13121:9;13117:19;13109:6;13091:46;:::i;14075:127::-;14136:10;14131:3;14127:20;14124:1;14117:31;14167:4;14164:1;14157:15;14191:4;14188:1;14181:15;14207:128;14274:9;;;14295:11;;;14292:37;;;14309:18;;:::i;14340:125::-;14405:9;;;14426:10;;;14423:36;;;14439:18;;:::i;14881:345::-;-1:-1:-1;;;;;15101:32:60;;;;15083:51;;15165:2;15150:18;;15143:34;;;;15208:2;15193:18;;15186:34;15071:2;15056:18;;14881:345::o;15231:610::-;15477:13;;15420:3;;15451;;15530:4;15557:15;;;15420:3;15600:175;15614:6;15611:1;15608:13;15600:175;;;15677:13;;15663:28;;15713:14;;;;15750:15;;;;15636:1;15629:9;15600:175;;;-1:-1:-1;;15784:21:60;;;-1:-1:-1;15821:14:60;;;;;-1:-1:-1;;;15231:610:60:o;15846:168::-;15919:9;;;15950;;15967:15;;;15961:22;;15947:37;15937:71;;15988:18;;:::i;16208:556::-;16410:2;16392:21;;;16449:3;16429:18;;;16422:31;16489:34;16484:2;16469:18;;16462:62;16560:34;16555:2;16540:18;;16533:62;16632:34;16626:3;16611:19;;16604:63;-1:-1:-1;;;16698:3:60;16683:19;;16676:46;16754:3;16739:19;;16208:556::o;17176:135::-;17215:3;17236:17;;;17233:43;;17256:18;;:::i;:::-;-1:-1:-1;17303:1:60;17292:13;;17176:135::o;17674:709::-;17739:5;17792:3;17785:4;17777:6;17773:17;17769:27;17759:55;;17810:1;17807;17800:12;17759:55;17839:6;17833:13;17865:4;17888:18;17884:2;17881:26;17878:52;;;17910:18;;:::i;:::-;17956:2;17953:1;17949:10;17979:28;18003:2;17999;17995:11;17979:28;:::i;:::-;18041:15;;;18111;;;18107:24;;;18072:12;;;;18143:15;;;18140:35;;;18171:1;18168;18161:12;18140:35;18207:2;18199:6;18195:15;18184:26;;18219:135;18235:6;18230:3;18227:15;18219:135;;;18301:10;;18289:23;;18252:12;;;;18332;;;;18219:135;;18388:614;18517:6;18525;18578:2;18566:9;18557:7;18553:23;18549:32;18546:52;;;18594:1;18591;18584:12;18546:52;18627:9;18621:16;18656:18;18697:2;18689:6;18686:14;18683:34;;;18713:1;18710;18703:12;18683:34;18736:72;18800:7;18791:6;18780:9;18776:22;18736:72;:::i;:::-;18726:82;;18854:2;18843:9;18839:18;18833:25;18817:41;;18883:2;18873:8;18870:16;18867:36;;;18899:1;18896;18889:12;18867:36;;18922:74;18988:7;18977:8;18966:9;18962:24;18922:74;:::i;:::-;18912:84;;;18388:614;;;;;:::o;19007:442::-;-1:-1:-1;;;;;19254:32:60;;;;19236:51;;-1:-1:-1;;;;;;19323:33:60;;;;19318:2;19303:18;;19296:61;19388:2;19373:18;;19366:34;19431:2;19416:18;;19409:34;19223:3;19208:19;;19007:442::o",
    "linkReferences": {},
    "immutableReferences": {
      "49831": [
        {
          "start": 942,
          "length": 32
        },
        {
          "start": 2922,
          "length": 32
        }
      ],
      "49849": [
        {
          "start": 1183,
          "length": 32
        },
        {
          "start": 7029,
          "length": 32
        }
      ],
      "49876": [
        {
          "start": 902,
          "length": 32
        },
        {
          "start": 1556,
          "length": 32
        },
        {
          "start": 2882,
          "length": 32
        },
        {
          "start": 6402,
          "length": 32
        }
      ],
      "49885": [
        {
          "start": 1223,
          "length": 32
        },
        {
          "start": 7069,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "_failZapAndDoSomething((address,address,address,uint256,uint256,address,uint256),uint256)": "2c747b21",
    "_failZapAndDoSomething_eth((address,address,address,uint256,uint256,address,uint256),uint256)": "d171493f",
    "_getSwapData(address,address,(address,address,address,uint256,uint256,address,uint256))": "6df512c4",
    "_getTokenIn((address,address,address,uint256,uint256,address,uint256))": "c72f4a67",
    "_setUpVaultAndZapper()": "8557b123",
    "_zapAndDoSomething((address,address,address,uint256,uint256,address,uint256))": "a34d30cb",
    "_zapAndDoSomething_eth((address,address,address,uint256,uint256,address,uint256))": "a63ac536",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_failZapAndDoSomethingERC20PlusEth()": "db8fd471",
    "test_fail_zapAndDoSomething_RouterFails()": "27243b4a",
    "test_inconsistantZapAndDoSomethingEthAPE()": "1e25e048",
    "test_zapAndDoSomethingEthAPE()": "3f972559"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenInWhale\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"internalType\":\"struct Swap\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_failZapAndDoSomething\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenInWhale\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"internalType\":\"struct Swap\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_failZapAndDoSomething_eth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenInWhale\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"internalType\":\"struct Swap\",\"name\":\"swap\",\"type\":\"tuple\"}],\"name\":\"_getSwapData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenInWhale\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"internalType\":\"struct Swap\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"_getTokenIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_setUpVaultAndZapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenInWhale\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"internalType\":\"struct Swap\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"_zapAndDoSomething\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenInWhale\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"internalType\":\"struct Swap\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"_zapAndDoSomething_eth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_failZapAndDoSomethingERC20PlusEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_fail_zapAndDoSomething_RouterFails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_inconsistantZapAndDoSomethingEthAPE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_zapAndDoSomethingEthAPE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/zapper/zapper.t.sol\":\"ZapperTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@account-abstraction/=lib/account-abstraction/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc20-paymaster-contracts/=lib/erc20-paymaster-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1419991b2a8eb2de79b9bd2b3c5a0ceb5d7636ab9bcddde0b71701fd6ad47273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7afc962ec6e60e1ff749cd0d4c671bc3b85386c68d26b824d4a6c6e6e8255e85\",\"dweb:/ipfs/QmWwfj6Qk8QBcnGD45seGnDXtUmC9CYKuPNJCApSjLyPSj\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdc93a167a7daf54e0954410c16a1f292b4f2c81e642b7a10793c1c8d174d27b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b723060ff51e7ec5c33ea34da89d9f24631847b639f47016cba61b600efa532\",\"dweb:/ipfs/QmTAd4Jz16mcncFzpfVxic7Tfor3KprvGXt7Tjmxtwtnwu\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xde231558366826d7cb61725af8147965a61c53b77a352cc8c9af38fc5a92ac3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd55624076bf61d44af5ff351919e32dda748567acfbdd6ba3d6c7be61c758e\",\"dweb:/ipfs/QmSki4dTrf4GPm7MTpG3fk8mC7rnjwd2zMomLp6jLuF63Q\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/zapper.sol\":{\"keccak256\":\"0x05d6dbfcdddc64e3023fb594d2ad444abbfe4e2269b97282d1d3012611d9fd82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f211a813fc109fbb464275418f42f16f302b8188138143a335a969c9bfa917bd\",\"dweb:/ipfs/QmZYcL1iymZnJ8Mi6dijU8gbNJWpe1hx4cEhLyhuweXqkc\"]},\"test/zapper/zapper.t.sol\":{\"keccak256\":\"0x700bed3fdabea915b7f045e89a241697348cc6c68e10f5191d636c9421711ca9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://484f2f4251e790ef053c1d5f157db57b7ff6c805b84feab5414704448aabff51\",\"dweb:/ipfs/Qme4KdnUnQeGpV4CZzAurpmohZbTaNLgs4AYP5onPRuxKz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Swap",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenInWhale",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippage",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_failZapAndDoSomething"
        },
        {
          "inputs": [
            {
              "internalType": "struct Swap",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenInWhale",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippage",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_failZapAndDoSomething_eth"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "struct Swap",
              "name": "swap",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenInWhale",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippage",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_getSwapData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Swap",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenInWhale",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippage",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_getTokenIn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_setUpVaultAndZapper"
        },
        {
          "inputs": [
            {
              "internalType": "struct Swap",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenInWhale",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippage",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_zapAndDoSomething"
        },
        {
          "inputs": [
            {
              "internalType": "struct Swap",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenInWhale",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippage",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_zapAndDoSomething_eth"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_failZapAndDoSomethingERC20PlusEth"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_fail_zapAndDoSomething_RouterFails"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_inconsistantZapAndDoSomethingEthAPE"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_zapAndDoSomethingEthAPE"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@account-abstraction/=lib/account-abstraction/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "account-abstraction/=lib/account-abstraction/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc20-paymaster-contracts/=lib/erc20-paymaster-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/zapper/zapper.t.sol": "ZapperTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x1419991b2a8eb2de79b9bd2b3c5a0ceb5d7636ab9bcddde0b71701fd6ad47273",
        "urls": [
          "bzz-raw://7afc962ec6e60e1ff749cd0d4c671bc3b85386c68d26b824d4a6c6e6e8255e85",
          "dweb:/ipfs/QmWwfj6Qk8QBcnGD45seGnDXtUmC9CYKuPNJCApSjLyPSj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdc93a167a7daf54e0954410c16a1f292b4f2c81e642b7a10793c1c8d174d27b6",
        "urls": [
          "bzz-raw://1b723060ff51e7ec5c33ea34da89d9f24631847b639f47016cba61b600efa532",
          "dweb:/ipfs/QmTAd4Jz16mcncFzpfVxic7Tfor3KprvGXt7Tjmxtwtnwu"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0xde231558366826d7cb61725af8147965a61c53b77a352cc8c9af38fc5a92ac3c",
        "urls": [
          "bzz-raw://1fd55624076bf61d44af5ff351919e32dda748567acfbdd6ba3d6c7be61c758e",
          "dweb:/ipfs/QmSki4dTrf4GPm7MTpG3fk8mC7rnjwd2zMomLp6jLuF63Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/zapper.sol": {
        "keccak256": "0x05d6dbfcdddc64e3023fb594d2ad444abbfe4e2269b97282d1d3012611d9fd82",
        "urls": [
          "bzz-raw://f211a813fc109fbb464275418f42f16f302b8188138143a335a969c9bfa917bd",
          "dweb:/ipfs/QmZYcL1iymZnJ8Mi6dijU8gbNJWpe1hx4cEhLyhuweXqkc"
        ],
        "license": "MIT"
      },
      "test/zapper/zapper.t.sol": {
        "keccak256": "0x700bed3fdabea915b7f045e89a241697348cc6c68e10f5191d636c9421711ca9",
        "urls": [
          "bzz-raw://484f2f4251e790ef053c1d5f157db57b7ff6c805b84feab5414704448aabff51",
          "dweb:/ipfs/Qme4KdnUnQeGpV4CZzAurpmohZbTaNLgs4AYP5onPRuxKz"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/zapper/zapper.t.sol",
    "id": 50653,
    "exportedSymbols": {
      "DSTest": [
        3371
      ],
      "ERC20": [
        46156
      ],
      "IERC20": [
        46234
      ],
      "OffChainCalls": [
        50017
      ],
      "Ownable2Step": [
        44701
      ],
      "Pausable": [
        45528
      ],
      "SafeERC20": [
        46671
      ],
      "SigUtils": [
        50090
      ],
      "StdAssertions": [
        4864
      ],
      "StdChains": [
        5628
      ],
      "StdCheats": [
        8481
      ],
      "StdInvariant": [
        8806
      ],
      "StdStorage": [
        9572
      ],
      "StdStyle": [
        12422
      ],
      "StdUtils": [
        13270
      ],
      "Swap": [
        49817
      ],
      "Test": [
        13321
      ],
      "TestBase": [
        3437
      ],
      "Vm": [
        15078
      ],
      "Zapper": [
        51073
      ],
      "ZapperTest": [
        50652
      ],
      "console": [
        23142
      ],
      "console2": [
        31267
      ],
      "safeconsole": [
        44505
      ],
      "stdError": [
        8547
      ],
      "stdJson": [
        9398
      ],
      "stdMath": [
        9540
      ],
      "stdStorage": [
        11211
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7930:59",
    "nodes": [
      {
        "id": 49795,
        "nodeType": "PragmaDirective",
        "src": "39:23:59",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 49796,
        "nodeType": "ImportDirective",
        "src": "64:31:59",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50653,
        "sourceUnit": 23143,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49797,
        "nodeType": "ImportDirective",
        "src": "96:28:59",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50653,
        "sourceUnit": 13322,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49799,
        "nodeType": "ImportDirective",
        "src": "125:68:59",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50653,
        "sourceUnit": 46157,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49798,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46156,
              "src": "133:5:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49800,
        "nodeType": "ImportDirective",
        "src": "194:30:59",
        "nodes": [],
        "absolutePath": "src/zapper.sol",
        "file": "../../src/zapper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50653,
        "sourceUnit": 51074,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49817,
        "nodeType": "StructDefinition",
        "src": "227:167:59",
        "nodes": [],
        "canonicalName": "Swap",
        "members": [
          {
            "constant": false,
            "id": 49802,
            "mutability": "mutable",
            "name": "router",
            "nameLocation": "253:6:59",
            "nodeType": "VariableDeclaration",
            "scope": 49817,
            "src": "245:14:59",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49801,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "245:7:59",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 49805,
            "mutability": "mutable",
            "name": "tokenIn",
            "nameLocation": "272:7:59",
            "nodeType": "VariableDeclaration",
            "scope": 49817,
            "src": "265:14:59",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$46234",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 49804,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49803,
                "name": "IERC20",
                "nameLocations": [
                  "265:6:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46234,
                "src": "265:6:59"
              },
              "referencedDeclaration": 46234,
              "src": "265:6:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$46234",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 49808,
            "mutability": "mutable",
            "name": "tokenOut",
            "nameLocation": "292:8:59",
            "nodeType": "VariableDeclaration",
            "scope": 49817,
            "src": "285:15:59",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$46234",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 49807,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49806,
                "name": "IERC20",
                "nameLocations": [
                  "285:6:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46234,
                "src": "285:6:59"
              },
              "referencedDeclaration": 46234,
              "src": "285:6:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$46234",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 49810,
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "314:6:59",
            "nodeType": "VariableDeclaration",
            "scope": 49817,
            "src": "306:14:59",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 49809,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "306:7:59",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 49812,
            "mutability": "mutable",
            "name": "minAmount",
            "nameLocation": "334:9:59",
            "nodeType": "VariableDeclaration",
            "scope": 49817,
            "src": "326:17:59",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 49811,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "326:7:59",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 49814,
            "mutability": "mutable",
            "name": "tokenInWhale",
            "nameLocation": "357:12:59",
            "nodeType": "VariableDeclaration",
            "scope": 49817,
            "src": "349:20:59",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49813,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "349:7:59",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 49816,
            "mutability": "mutable",
            "name": "slippage",
            "nameLocation": "383:8:59",
            "nodeType": "VariableDeclaration",
            "scope": 49817,
            "src": "375:16:59",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 49815,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "375:7:59",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Swap",
        "nameLocation": "234:4:59",
        "scope": 50653,
        "visibility": "public"
      },
      {
        "id": 50017,
        "nodeType": "ContractDefinition",
        "src": "396:1417:59",
        "nodes": [
          {
            "id": 49822,
            "nodeType": "VariableDeclaration",
            "src": "433:69:59",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_router",
            "nameLocation": "450:7:59",
            "scope": 50017,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49820,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "433:7:59",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831313131313131323534454542323534373742363866623835456439323966373341393630353832",
              "id": 49821,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "460:42:59",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1111111254EEB25477B68fb85Ed929f73A960582"
            },
            "visibility": "internal"
          },
          {
            "id": 49831,
            "nodeType": "VariableDeclaration",
            "src": "509:67:59",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_APE",
            "nameLocation": "534:4:59",
            "scope": 50017,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$46156",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 49824,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49823,
                "name": "ERC20",
                "nameLocations": [
                  "509:5:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46156,
                "src": "509:5:59"
              },
              "referencedDeclaration": 46156,
              "src": "509:5:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "4150455f4d41494e4e4554",
                      "id": 49828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "561:13:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a9a3a5a47ac490f06603b3c4c0098de1d04526ffe06d18c75546c33f872f29b0",
                        "typeString": "literal_string \"APE_MAINNET\""
                      },
                      "value": "APE_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_a9a3a5a47ac490f06603b3c4c0098de1d04526ffe06d18c75546c33f872f29b0",
                        "typeString": "literal_string \"APE_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 49826,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3430,
                      "src": "547:2:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$15078",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 49827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "550:10:59",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13786,
                    "src": "547:13:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 49829,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "547:28:59",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 49825,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 46156,
                "src": "541:5:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$46156_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 49830,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "541:35:59",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 49840,
            "nodeType": "VariableDeclaration",
            "src": "582:67:59",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_DAI",
            "nameLocation": "607:4:59",
            "scope": 50017,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$46156",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 49833,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49832,
                "name": "ERC20",
                "nameLocations": [
                  "582:5:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46156,
                "src": "582:5:59"
              },
              "referencedDeclaration": 46156,
              "src": "582:5:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "4441495f4d41494e4e4554",
                      "id": 49837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "634:13:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_230177d6c3cecaf46f7e3ca090c3cb065f5914b5041f0f194adbd66f6539e257",
                        "typeString": "literal_string \"DAI_MAINNET\""
                      },
                      "value": "DAI_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_230177d6c3cecaf46f7e3ca090c3cb065f5914b5041f0f194adbd66f6539e257",
                        "typeString": "literal_string \"DAI_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 49835,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3430,
                      "src": "620:2:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$15078",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 49836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "623:10:59",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13786,
                    "src": "620:13:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 49838,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "620:28:59",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 49834,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 46156,
                "src": "614:5:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$46156_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 49839,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "614:35:59",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 49849,
            "nodeType": "VariableDeclaration",
            "src": "655:69:59",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_USDC",
            "nameLocation": "680:5:59",
            "scope": 50017,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$46156",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 49842,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49841,
                "name": "ERC20",
                "nameLocations": [
                  "655:5:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46156,
                "src": "655:5:59"
              },
              "referencedDeclaration": 46156,
              "src": "655:5:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "555344435f4d41494e4e4554",
                      "id": 49846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "708:14:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a62d6d0bba528a84eb8a9b813ab657fc61e302f8258cdb77cace7f74c941bb76",
                        "typeString": "literal_string \"USDC_MAINNET\""
                      },
                      "value": "USDC_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_a62d6d0bba528a84eb8a9b813ab657fc61e302f8258cdb77cace7f74c941bb76",
                        "typeString": "literal_string \"USDC_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 49844,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3430,
                      "src": "694:2:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$15078",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 49845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "697:10:59",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13786,
                    "src": "694:13:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 49847,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "694:29:59",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 49843,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 46156,
                "src": "688:5:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$46156_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 49848,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "688:36:59",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 49858,
            "nodeType": "VariableDeclaration",
            "src": "730:69:59",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_USDT",
            "nameLocation": "755:5:59",
            "scope": 50017,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$46156",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 49851,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49850,
                "name": "ERC20",
                "nameLocations": [
                  "730:5:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46156,
                "src": "730:5:59"
              },
              "referencedDeclaration": 46156,
              "src": "730:5:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "555344545f4d41494e4e4554",
                      "id": 49855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "783:14:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_da52377d5c1d564051a9ef8e9e435087de26b1ecbcf9d662c0773293bf38ed05",
                        "typeString": "literal_string \"USDT_MAINNET\""
                      },
                      "value": "USDT_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_da52377d5c1d564051a9ef8e9e435087de26b1ecbcf9d662c0773293bf38ed05",
                        "typeString": "literal_string \"USDT_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 49853,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3430,
                      "src": "769:2:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$15078",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 49854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "772:10:59",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13786,
                    "src": "769:13:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 49856,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "769:29:59",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 49852,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 46156,
                "src": "763:5:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$46156_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 49857,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "763:36:59",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 49867,
            "nodeType": "VariableDeclaration",
            "src": "805:69:59",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_WETH",
            "nameLocation": "830:5:59",
            "scope": 50017,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$46156",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 49860,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49859,
                "name": "ERC20",
                "nameLocations": [
                  "805:5:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46156,
                "src": "805:5:59"
              },
              "referencedDeclaration": 46156,
              "src": "805:5:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "574554485f4d41494e4e4554",
                      "id": 49864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "858:14:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_07477c4b066a48b89b834b3cdac7e675f45c24ec19ef5dbf3661896a6920477a",
                        "typeString": "literal_string \"WETH_MAINNET\""
                      },
                      "value": "WETH_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_07477c4b066a48b89b834b3cdac7e675f45c24ec19ef5dbf3661896a6920477a",
                        "typeString": "literal_string \"WETH_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 49862,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3430,
                      "src": "844:2:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$15078",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 49863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "847:10:59",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13786,
                    "src": "844:13:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 49865,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "844:29:59",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 49861,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 46156,
                "src": "838:5:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$46156_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 49866,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "838:36:59",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 49876,
            "nodeType": "VariableDeclaration",
            "src": "880:67:59",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_ETH",
            "nameLocation": "905:4:59",
            "scope": 50017,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$46156",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 49869,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49868,
                "name": "ERC20",
                "nameLocations": [
                  "880:5:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46156,
                "src": "880:5:59"
              },
              "referencedDeclaration": 46156,
              "src": "880:5:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "4554485f4d41494e4e4554",
                      "id": 49873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "932:13:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_50fa332cce764adc20517ef9e164af5ed01822aa295f2e4be9b4442976b4627b",
                        "typeString": "literal_string \"ETH_MAINNET\""
                      },
                      "value": "ETH_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_50fa332cce764adc20517ef9e164af5ed01822aa295f2e4be9b4442976b4627b",
                        "typeString": "literal_string \"ETH_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 49871,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3430,
                      "src": "918:2:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$15078",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 49872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "921:10:59",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13786,
                    "src": "918:13:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 49874,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "918:28:59",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 49870,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 46156,
                "src": "912:5:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$46156_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 49875,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "912:35:59",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 49885,
            "nodeType": "VariableDeclaration",
            "src": "953:73:59",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_WSTETH",
            "nameLocation": "978:7:59",
            "scope": 50017,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$46156",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 49878,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49877,
                "name": "ERC20",
                "nameLocations": [
                  "953:5:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46156,
                "src": "953:5:59"
              },
              "referencedDeclaration": 46156,
              "src": "953:5:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "5753544554485f4d41494e4e4554",
                      "id": 49882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1008:16:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6d4401fefbc6647dca94492e660c4e242c84c4088f907f9b130b48a032bf98c7",
                        "typeString": "literal_string \"WSTETH_MAINNET\""
                      },
                      "value": "WSTETH_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_6d4401fefbc6647dca94492e660c4e242c84c4088f907f9b130b48a032bf98c7",
                        "typeString": "literal_string \"WSTETH_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 49880,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3430,
                      "src": "994:2:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$15078",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 49881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "997:10:59",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13786,
                    "src": "994:13:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 49883,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "994:31:59",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 49879,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 46156,
                "src": "988:5:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$46156_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 49884,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "988:38:59",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 49894,
            "nodeType": "VariableDeclaration",
            "src": "1032:71:59",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_STETH",
            "nameLocation": "1057:6:59",
            "scope": 50017,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$46156",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 49887,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49886,
                "name": "ERC20",
                "nameLocations": [
                  "1032:5:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46156,
                "src": "1032:5:59"
              },
              "referencedDeclaration": 46156,
              "src": "1032:5:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "53544554485f4d41494e4e4554",
                      "id": 49891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1086:15:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_153525a431ee1710c2d4ad91d40e3bee712ea56e3e1caf7782d368c7ce2cd94d",
                        "typeString": "literal_string \"STETH_MAINNET\""
                      },
                      "value": "STETH_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_153525a431ee1710c2d4ad91d40e3bee712ea56e3e1caf7782d368c7ce2cd94d",
                        "typeString": "literal_string \"STETH_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 49889,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3430,
                      "src": "1072:2:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$15078",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 49890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1075:10:59",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13786,
                    "src": "1072:13:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 49892,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1072:30:59",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 49888,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 46156,
                "src": "1066:5:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$46156_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 49893,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1066:37:59",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 49903,
            "nodeType": "VariableDeclaration",
            "src": "1109:69:59",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_WBTC",
            "nameLocation": "1134:5:59",
            "scope": 50017,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$46156",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 49896,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49895,
                "name": "ERC20",
                "nameLocations": [
                  "1109:5:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46156,
                "src": "1109:5:59"
              },
              "referencedDeclaration": 46156,
              "src": "1109:5:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "574254435f4d41494e4e4554",
                      "id": 49900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1162:14:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_8d961144252e65966b12dad3165eae993e1ccf85f0a4c309494e2dfcbac2e78e",
                        "typeString": "literal_string \"WBTC_MAINNET\""
                      },
                      "value": "WBTC_MAINNET"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_8d961144252e65966b12dad3165eae993e1ccf85f0a4c309494e2dfcbac2e78e",
                        "typeString": "literal_string \"WBTC_MAINNET\""
                      }
                    ],
                    "expression": {
                      "id": 49898,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3430,
                      "src": "1148:2:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$15078",
                        "typeString": "contract Vm"
                      }
                    },
                    "id": 49899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1151:10:59",
                    "memberName": "envAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13786,
                    "src": "1148:13:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                      "typeString": "function (string memory) view external returns (address)"
                    }
                  },
                  "id": 49901,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1148:29:59",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 49897,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 46156,
                "src": "1142:5:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$46156_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 49902,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1142:36:59",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46156",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 49907,
            "nodeType": "FunctionDefinition",
            "src": "1185:16:59",
            "nodes": [],
            "body": {
              "id": 49906,
              "nodeType": "Block",
              "src": "1199:2:59",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 49904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1196:2:59"
            },
            "returnParameters": {
              "id": 49905,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1199:0:59"
            },
            "scope": 50017,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50016,
            "nodeType": "FunctionDefinition",
            "src": "1207:604:59",
            "nodes": [],
            "body": {
              "id": 50015,
              "nodeType": "Block",
              "src": "1323:488:59",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    49923
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49923,
                      "mutability": "mutable",
                      "name": "inputs",
                      "nameLocation": "1349:6:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 50015,
                      "src": "1333:22:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49921,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1333:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 49922,
                        "nodeType": "ArrayTypeName",
                        "src": "1333:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49929,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "38",
                        "id": 49927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1371:1:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        }
                      ],
                      "id": 49926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1358:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49924,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1362:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 49925,
                        "nodeType": "ArrayTypeName",
                        "src": "1362:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 49928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:15:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1333:40:59"
                },
                {
                  "expression": {
                    "id": 49934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49930,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49923,
                        "src": "1383:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 49932,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 49931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1390:1:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1383:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6e6f6465",
                      "id": 49933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1395:6:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7a7b069bdf427c3e6d24c2c55ccd9fe71f5d9a6088733138764bb52de1769157",
                        "typeString": "literal_string \"node\""
                      },
                      "value": "node"
                    },
                    "src": "1383:18:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 49935,
                  "nodeType": "ExpressionStatement",
                  "src": "1383:18:59"
                },
                {
                  "expression": {
                    "id": 49940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49936,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49923,
                        "src": "1411:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 49938,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 49937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1418:1:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1411:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "2e2f746573742f736372697074732f67657431696e636851756f74652e6a73",
                      "id": 49939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1423:33:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_77a52096d9378da4f1d5cf6ffaa3bc76f280091ddb5bfd53ab95107d8aebd03c",
                        "typeString": "literal_string \"./test/scripts/get1inchQuote.js\""
                      },
                      "value": "./test/scripts/get1inchQuote.js"
                    },
                    "src": "1411:45:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 49941,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:45:59"
                },
                {
                  "expression": {
                    "id": 49949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49942,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49923,
                        "src": "1466:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 49944,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 49943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1473:1:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1466:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 49947,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49909,
                          "src": "1490:4:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49945,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3430,
                          "src": "1478:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$15078",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 49946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1481:8:59",
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14156,
                        "src": "1478:11:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (address) pure external returns (string memory)"
                        }
                      },
                      "id": 49948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1478:17:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1466:29:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 49950,
                  "nodeType": "ExpressionStatement",
                  "src": "1466:29:59"
                },
                {
                  "expression": {
                    "id": 49958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49951,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49923,
                        "src": "1505:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 49953,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 49952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1512:1:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1505:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 49956,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49911,
                          "src": "1529:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49954,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3430,
                          "src": "1517:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$15078",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 49955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1520:8:59",
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14156,
                        "src": "1517:11:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (address) pure external returns (string memory)"
                        }
                      },
                      "id": 49957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1517:15:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1505:27:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 49959,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:27:59"
                },
                {
                  "expression": {
                    "id": 49971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49960,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49923,
                        "src": "1542:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 49962,
                      "indexExpression": {
                        "hexValue": "34",
                        "id": 49961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1549:1:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1542:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 49967,
                                "name": "swap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49914,
                                "src": "1574:4:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                                  "typeString": "struct Swap memory"
                                }
                              },
                              "id": 49968,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1579:7:59",
                              "memberName": "tokenIn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 49805,
                              "src": "1574:12:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$46234",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$46234",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 49966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1566:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49965,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1566:7:59",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1566:21:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49963,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3430,
                          "src": "1554:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$15078",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 49964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1557:8:59",
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14156,
                        "src": "1554:11:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (address) pure external returns (string memory)"
                        }
                      },
                      "id": 49970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1554:34:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1542:46:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 49972,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:46:59"
                },
                {
                  "expression": {
                    "id": 49984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49973,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49923,
                        "src": "1598:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 49975,
                      "indexExpression": {
                        "hexValue": "35",
                        "id": 49974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1605:1:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1598:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 49980,
                                "name": "swap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49914,
                                "src": "1630:4:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                                  "typeString": "struct Swap memory"
                                }
                              },
                              "id": 49981,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1635:8:59",
                              "memberName": "tokenOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 49808,
                              "src": "1630:13:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$46234",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$46234",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 49979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1622:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49978,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1622:7:59",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1622:22:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49976,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3430,
                          "src": "1610:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$15078",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 49977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1613:8:59",
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14156,
                        "src": "1610:11:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (address) pure external returns (string memory)"
                        }
                      },
                      "id": 49983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1610:35:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1598:47:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 49985,
                  "nodeType": "ExpressionStatement",
                  "src": "1598:47:59"
                },
                {
                  "expression": {
                    "id": 49994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49986,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49923,
                        "src": "1655:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 49988,
                      "indexExpression": {
                        "hexValue": "36",
                        "id": 49987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1662:1:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1655:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 49991,
                            "name": "swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49914,
                            "src": "1679:4:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                              "typeString": "struct Swap memory"
                            }
                          },
                          "id": 49992,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1684:6:59",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49810,
                          "src": "1679:11:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 49989,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3430,
                          "src": "1667:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$15078",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 49990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1670:8:59",
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14184,
                        "src": "1667:11:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (uint256) pure external returns (string memory)"
                        }
                      },
                      "id": 49993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1667:24:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1655:36:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 49995,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:36:59"
                },
                {
                  "expression": {
                    "id": 50004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49996,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49923,
                        "src": "1701:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 49998,
                      "indexExpression": {
                        "hexValue": "37",
                        "id": 49997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1708:1:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1701:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 50001,
                            "name": "swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49914,
                            "src": "1725:4:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                              "typeString": "struct Swap memory"
                            }
                          },
                          "id": 50002,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1730:8:59",
                          "memberName": "slippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49816,
                          "src": "1725:13:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 49999,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3430,
                          "src": "1713:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$15078",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 50000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1716:8:59",
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14184,
                        "src": "1713:11:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (uint256) pure external returns (string memory)"
                        }
                      },
                      "id": 50003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1713:26:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1701:38:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 50005,
                  "nodeType": "ExpressionStatement",
                  "src": "1701:38:59"
                },
                {
                  "assignments": [
                    50007
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50007,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "1763:3:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 50015,
                      "src": "1750:16:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 50006,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1750:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50012,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50010,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49923,
                        "src": "1776:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 50008,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3430,
                        "src": "1769:2:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15078",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1772:3:59",
                      "memberName": "ffi",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13742,
                      "src": "1769:6:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory[] memory) external returns (bytes memory)"
                      }
                    },
                    "id": 50011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1769:14:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1750:33:59"
                },
                {
                  "expression": {
                    "id": 50013,
                    "name": "res",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50007,
                    "src": "1801:3:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 49918,
                  "id": 50014,
                  "nodeType": "Return",
                  "src": "1794:10:59"
                }
              ]
            },
            "functionSelector": "6df512c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getSwapData",
            "nameLocation": "1216:12:59",
            "parameters": {
              "id": 49915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49909,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1237:4:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 50016,
                  "src": "1229:12:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49908,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1229:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49911,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1251:2:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 50016,
                  "src": "1243:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49914,
                  "mutability": "mutable",
                  "name": "swap",
                  "nameLocation": "1267:4:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 50016,
                  "src": "1255:16:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                    "typeString": "struct Swap"
                  },
                  "typeName": {
                    "id": 49913,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49912,
                      "name": "Swap",
                      "nameLocations": [
                        "1255:4:59"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49817,
                      "src": "1255:4:59"
                    },
                    "referencedDeclaration": 49817,
                    "src": "1255:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$49817_storage_ptr",
                      "typeString": "struct Swap"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1228:44:59"
            },
            "returnParameters": {
              "id": 49918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49917,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50016,
                  "src": "1305:12:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49916,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:5:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1304:14:59"
            },
            "scope": 50017,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 49818,
              "name": "Test",
              "nameLocations": [
                "422:4:59"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13321,
              "src": "422:4:59"
            },
            "id": 49819,
            "nodeType": "InheritanceSpecifier",
            "src": "422:4:59"
          }
        ],
        "canonicalName": "OffChainCalls",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50017,
          13321,
          13270,
          8806,
          8481,
          7688,
          5628,
          4864,
          3371,
          3437,
          3434
        ],
        "name": "OffChainCalls",
        "nameLocation": "405:13:59",
        "scope": 50653,
        "usedErrors": []
      },
      {
        "id": 50090,
        "nodeType": "ContractDefinition",
        "src": "1815:1343:59",
        "nodes": [
          {
            "id": 50019,
            "nodeType": "VariableDeclaration",
            "src": "1839:33:59",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "DOMAIN_SEPARATOR",
            "nameLocation": "1856:16:59",
            "scope": 50090,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 50018,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1839:7:59",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 50029,
            "nodeType": "FunctionDefinition",
            "src": "1879:92:59",
            "nodes": [],
            "body": {
              "id": 50028,
              "nodeType": "Block",
              "src": "1918:53:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50024,
                      "name": "DOMAIN_SEPARATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50019,
                      "src": "1928:16:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50025,
                      "name": "_DOMAIN_SEPARATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50021,
                      "src": "1947:17:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1928:36:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 50027,
                  "nodeType": "ExpressionStatement",
                  "src": "1928:36:59"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 50022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50021,
                  "mutability": "mutable",
                  "name": "_DOMAIN_SEPARATOR",
                  "nameLocation": "1899:17:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 50029,
                  "src": "1891:25:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50020,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1890:27:59"
            },
            "returnParameters": {
              "id": 50023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1918:0:59"
            },
            "scope": 50090,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50032,
            "nodeType": "VariableDeclaration",
            "src": "2081:116:59",
            "nodes": [],
            "constant": true,
            "functionSelector": "30adf81f",
            "mutability": "constant",
            "name": "PERMIT_TYPEHASH",
            "nameLocation": "2105:15:59",
            "scope": 50090,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 50030,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2081:7:59",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
              "id": 50031,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2131:66:59",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
                "typeString": "int_const 4995...(69 digits omitted)...3241"
              },
              "value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
            },
            "visibility": "public"
          },
          {
            "id": 50043,
            "nodeType": "StructDefinition",
            "src": "2204:141:59",
            "nodes": [],
            "canonicalName": "SigUtils.Permit",
            "members": [
              {
                "constant": false,
                "id": 50034,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "2236:5:59",
                "nodeType": "VariableDeclaration",
                "scope": 50043,
                "src": "2228:13:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 50033,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2228:7:59",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50036,
                "mutability": "mutable",
                "name": "spender",
                "nameLocation": "2259:7:59",
                "nodeType": "VariableDeclaration",
                "scope": 50043,
                "src": "2251:15:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 50035,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2251:7:59",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50038,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "2284:5:59",
                "nodeType": "VariableDeclaration",
                "scope": 50043,
                "src": "2276:13:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 50037,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2276:7:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50040,
                "mutability": "mutable",
                "name": "nonce",
                "nameLocation": "2307:5:59",
                "nodeType": "VariableDeclaration",
                "scope": 50043,
                "src": "2299:13:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 50039,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2299:7:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50042,
                "mutability": "mutable",
                "name": "deadline",
                "nameLocation": "2330:8:59",
                "nodeType": "VariableDeclaration",
                "scope": 50043,
                "src": "2322:16:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 50041,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2322:7:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Permit",
            "nameLocation": "2211:6:59",
            "scope": 50090,
            "visibility": "public"
          },
          {
            "id": 50069,
            "nodeType": "FunctionDefinition",
            "src": "2388:380:59",
            "nodes": [],
            "body": {
              "id": 50068,
              "nodeType": "Block",
              "src": "2494:274:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50054,
                            "name": "PERMIT_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50032,
                            "src": "2562:15:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 50055,
                              "name": "_permit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50046,
                              "src": "2595:7:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit_$50043_memory_ptr",
                                "typeString": "struct SigUtils.Permit memory"
                              }
                            },
                            "id": 50056,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2603:5:59",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50034,
                            "src": "2595:13:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 50057,
                              "name": "_permit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50046,
                              "src": "2626:7:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit_$50043_memory_ptr",
                                "typeString": "struct SigUtils.Permit memory"
                              }
                            },
                            "id": 50058,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2634:7:59",
                            "memberName": "spender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50036,
                            "src": "2626:15:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 50059,
                              "name": "_permit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50046,
                              "src": "2659:7:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit_$50043_memory_ptr",
                                "typeString": "struct SigUtils.Permit memory"
                              }
                            },
                            "id": 50060,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2667:5:59",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50038,
                            "src": "2659:13:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 50061,
                              "name": "_permit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50046,
                              "src": "2690:7:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit_$50043_memory_ptr",
                                "typeString": "struct SigUtils.Permit memory"
                              }
                            },
                            "id": 50062,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2698:5:59",
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50040,
                            "src": "2690:13:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 50063,
                              "name": "_permit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50046,
                              "src": "2721:7:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit_$50043_memory_ptr",
                                "typeString": "struct SigUtils.Permit memory"
                              }
                            },
                            "id": 50064,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2729:8:59",
                            "memberName": "deadline",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50042,
                            "src": "2721:16:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 50052,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2534:3:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 50053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2538:6:59",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2534:10:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 50065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2534:217:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 50051,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2511:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 50066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2511:250:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 50050,
                  "id": 50067,
                  "nodeType": "Return",
                  "src": "2504:257:59"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStructHash",
            "nameLocation": "2397:13:59",
            "parameters": {
              "id": 50047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50046,
                  "mutability": "mutable",
                  "name": "_permit",
                  "nameLocation": "2425:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 50069,
                  "src": "2411:21:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Permit_$50043_memory_ptr",
                    "typeString": "struct SigUtils.Permit"
                  },
                  "typeName": {
                    "id": 50045,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50044,
                      "name": "Permit",
                      "nameLocations": [
                        "2411:6:59"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50043,
                      "src": "2411:6:59"
                    },
                    "referencedDeclaration": 50043,
                    "src": "2411:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permit_$50043_storage_ptr",
                      "typeString": "struct SigUtils.Permit"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2410:23:59"
            },
            "returnParameters": {
              "id": 50050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50049,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50069,
                  "src": "2481:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50048,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2480:9:59"
            },
            "scope": 50090,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 50089,
            "nodeType": "FunctionDefinition",
            "src": "2892:264:59",
            "nodes": [],
            "body": {
              "id": 50088,
              "nodeType": "Block",
              "src": "2999:157:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 50080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3073:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 50081,
                            "name": "DOMAIN_SEPARATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50019,
                            "src": "3085:16:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 50083,
                                "name": "_permit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50072,
                                "src": "3117:7:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Permit_$50043_memory_ptr",
                                  "typeString": "struct SigUtils.Permit memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Permit_$50043_memory_ptr",
                                  "typeString": "struct SigUtils.Permit memory"
                                }
                              ],
                              "id": 50082,
                              "name": "getStructHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50069,
                              "src": "3103:13:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Permit_$50043_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (struct SigUtils.Permit memory) pure returns (bytes32)"
                              }
                            },
                            "id": 50084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3103:22:59",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 50078,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3039:3:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 50079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3043:12:59",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3039:16:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 50085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3039:100:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 50077,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3016:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 50086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3016:133:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 50076,
                  "id": 50087,
                  "nodeType": "Return",
                  "src": "3009:140:59"
                }
              ]
            },
            "functionSelector": "ba20b89d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTypedDataHash",
            "nameLocation": "2901:16:59",
            "parameters": {
              "id": 50073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50072,
                  "mutability": "mutable",
                  "name": "_permit",
                  "nameLocation": "2932:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 50089,
                  "src": "2918:21:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Permit_$50043_memory_ptr",
                    "typeString": "struct SigUtils.Permit"
                  },
                  "typeName": {
                    "id": 50071,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50070,
                      "name": "Permit",
                      "nameLocations": [
                        "2918:6:59"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50043,
                      "src": "2918:6:59"
                    },
                    "referencedDeclaration": 50043,
                    "src": "2918:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permit_$50043_storage_ptr",
                      "typeString": "struct SigUtils.Permit"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2917:23:59"
            },
            "returnParameters": {
              "id": 50076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50075,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50089,
                  "src": "2986:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50074,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2986:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2985:9:59"
            },
            "scope": 50090,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SigUtils",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50090
        ],
        "name": "SigUtils",
        "nameLocation": "1824:8:59",
        "scope": 50653,
        "usedErrors": []
      },
      {
        "id": 50652,
        "nodeType": "ContractDefinition",
        "src": "3160:4808:59",
        "nodes": [
          {
            "id": 50095,
            "nodeType": "VariableDeclaration",
            "src": "3203:13:59",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "zapper",
            "nameLocation": "3210:6:59",
            "scope": 50652,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Zapper_$51073",
              "typeString": "contract Zapper"
            },
            "typeName": {
              "id": 50094,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50093,
                "name": "Zapper",
                "nameLocations": [
                  "3203:6:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51073,
                "src": "3203:6:59"
              },
              "referencedDeclaration": 51073,
              "src": "3203:6:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Zapper_$51073",
                "typeString": "contract Zapper"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 50098,
            "nodeType": "VariableDeclaration",
            "src": "3222:26:59",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "sigUtils",
            "nameLocation": "3240:8:59",
            "scope": 50652,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SigUtils_$50090",
              "typeString": "contract SigUtils"
            },
            "typeName": {
              "id": 50097,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50096,
                "name": "SigUtils",
                "nameLocations": [
                  "3222:8:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50090,
                "src": "3222:8:59"
              },
              "referencedDeclaration": 50090,
              "src": "3222:8:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SigUtils_$50090",
                "typeString": "contract SigUtils"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 50102,
            "nodeType": "UsingForDirective",
            "src": "3333:27:59",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 50099,
              "name": "SafeERC20",
              "nameLocations": [
                "3339:9:59"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46671,
              "src": "3339:9:59"
            },
            "typeName": {
              "id": 50101,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50100,
                "name": "IERC20",
                "nameLocations": [
                  "3353:6:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46234,
                "src": "3353:6:59"
              },
              "referencedDeclaration": 46234,
              "src": "3353:6:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$46234",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 50113,
            "nodeType": "FunctionDefinition",
            "src": "3366:62:59",
            "nodes": [],
            "body": {
              "id": 50112,
              "nodeType": "Block",
              "src": "3390:38:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50105,
                      "name": "zapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50095,
                      "src": "3400:6:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zapper_$51073",
                        "typeString": "contract Zapper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 50108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3409:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Zapper_$51073_$",
                          "typeString": "function () returns (contract Zapper)"
                        },
                        "typeName": {
                          "id": 50107,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 50106,
                            "name": "Zapper",
                            "nameLocations": [
                              "3413:6:59"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 51073,
                            "src": "3413:6:59"
                          },
                          "referencedDeclaration": 51073,
                          "src": "3413:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zapper_$51073",
                            "typeString": "contract Zapper"
                          }
                        }
                      },
                      "id": 50109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3409:12:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zapper_$51073",
                        "typeString": "contract Zapper"
                      }
                    },
                    "src": "3400:21:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Zapper_$51073",
                      "typeString": "contract Zapper"
                    }
                  },
                  "id": 50111,
                  "nodeType": "ExpressionStatement",
                  "src": "3400:21:59"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "3375:5:59",
            "parameters": {
              "id": 50103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3380:2:59"
            },
            "returnParameters": {
              "id": 50104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3390:0:59"
            },
            "scope": 50652,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50142,
            "nodeType": "FunctionDefinition",
            "src": "3434:235:59",
            "nodes": [],
            "body": {
              "id": 50141,
              "nodeType": "Block",
              "src": "3491:178:59",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50118,
                      "mutability": "mutable",
                      "name": "usdcToWstEth",
                      "nameLocation": "3513:12:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 50141,
                      "src": "3501:24:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                        "typeString": "struct Swap"
                      },
                      "typeName": {
                        "id": 50117,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50116,
                          "name": "Swap",
                          "nameLocations": [
                            "3501:4:59"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49817,
                          "src": "3501:4:59"
                        },
                        "referencedDeclaration": 49817,
                        "src": "3501:4:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_storage_ptr",
                          "typeString": "struct Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50133,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50120,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49822,
                        "src": "3545:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50121,
                        "name": "_USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49849,
                        "src": "3554:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$46156",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 50122,
                        "name": "_WSTETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49885,
                        "src": "3561:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$46156",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        },
                        "id": 50125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31353030",
                          "id": 50123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3570:4:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1500_by_1",
                            "typeString": "int_const 1500"
                          },
                          "value": "1500"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316536",
                          "id": 50124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3577:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1e6"
                        },
                        "src": "3570:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 50126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3582:1:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3593:1:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3585:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50127,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3585:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3585:10:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 50131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3597:2:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$46156",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$46156",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "id": 50119,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49817,
                      "src": "3540:4:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$49817_storage_ptr_$",
                        "typeString": "type(struct Swap storage pointer)"
                      }
                    },
                    "id": 50132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3540:60:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                      "typeString": "struct Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3501:99:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50135,
                        "name": "usdcToWstEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50118,
                        "src": "3637:12:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        },
                        "id": 50138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31353030",
                          "id": 50136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3651:4:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1500_by_1",
                            "typeString": "int_const 1500"
                          },
                          "value": "1500"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316536",
                          "id": 50137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3658:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1e6"
                        },
                        "src": "3651:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        },
                        {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        }
                      ],
                      "id": 50134,
                      "name": "_failZapAndDoSomething_eth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50407,
                      "src": "3610:26:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$49817_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct Swap memory,uint256)"
                      }
                    },
                    "id": 50139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3610:52:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50140,
                  "nodeType": "ExpressionStatement",
                  "src": "3610:52:59"
                }
              ]
            },
            "functionSelector": "db8fd471",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_failZapAndDoSomethingERC20PlusEth",
            "nameLocation": "3443:38:59",
            "parameters": {
              "id": 50114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3481:2:59"
            },
            "returnParameters": {
              "id": 50115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3491:0:59"
            },
            "scope": 50652,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50166,
            "nodeType": "FunctionDefinition",
            "src": "3675:198:59",
            "nodes": [],
            "body": {
              "id": 50165,
              "nodeType": "Block",
              "src": "3722:151:59",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50147,
                      "mutability": "mutable",
                      "name": "ethToWstEth",
                      "nameLocation": "3744:11:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 50165,
                      "src": "3732:23:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                        "typeString": "struct Swap"
                      },
                      "typeName": {
                        "id": 50146,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50145,
                          "name": "Swap",
                          "nameLocations": [
                            "3732:4:59"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49817,
                          "src": "3732:4:59"
                        },
                        "referencedDeclaration": 49817,
                        "src": "3732:4:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_storage_ptr",
                          "typeString": "struct Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50160,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50149,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49822,
                        "src": "3775:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50150,
                        "name": "_ETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49876,
                        "src": "3784:4:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$46156",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 50151,
                        "name": "_APE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49831,
                        "src": "3790:4:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$46156",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 50152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3796:4:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "31",
                        "id": 50153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3802:1:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3813:1:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3805:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50154,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3805:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3805:10:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "323030",
                        "id": 50158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3817:3:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$46156",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$46156",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "id": 50148,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49817,
                      "src": "3770:4:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$49817_storage_ptr_$",
                        "typeString": "type(struct Swap storage pointer)"
                      }
                    },
                    "id": 50159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3770:51:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                      "typeString": "struct Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3732:89:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50162,
                        "name": "ethToWstEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50147,
                        "src": "3854:11:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 50161,
                      "name": "_zapAndDoSomething_eth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50356,
                      "src": "3831:22:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$49817_memory_ptr_$returns$__$",
                        "typeString": "function (struct Swap memory)"
                      }
                    },
                    "id": 50163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3831:35:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50164,
                  "nodeType": "ExpressionStatement",
                  "src": "3831:35:59"
                }
              ]
            },
            "functionSelector": "3f972559",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_zapAndDoSomethingEthAPE",
            "nameLocation": "3684:28:59",
            "parameters": {
              "id": 50143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3712:2:59"
            },
            "returnParameters": {
              "id": 50144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3722:0:59"
            },
            "scope": 50652,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50195,
            "nodeType": "FunctionDefinition",
            "src": "3879:242:59",
            "nodes": [],
            "body": {
              "id": 50194,
              "nodeType": "Block",
              "src": "3938:183:59",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50171,
                      "mutability": "mutable",
                      "name": "ethToApe",
                      "nameLocation": "3960:8:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 50194,
                      "src": "3948:20:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                        "typeString": "struct Swap"
                      },
                      "typeName": {
                        "id": 50170,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50169,
                          "name": "Swap",
                          "nameLocations": [
                            "3948:4:59"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49817,
                          "src": "3948:4:59"
                        },
                        "referencedDeclaration": 49817,
                        "src": "3948:4:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_storage_ptr",
                          "typeString": "struct Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50188,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50173,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49822,
                        "src": "3989:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50175,
                            "name": "_ETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49876,
                            "src": "4005:4:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$46156",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$46156",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 50174,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46234,
                          "src": "3998:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$46234_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 50176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3998:12:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50178,
                            "name": "_APE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49831,
                            "src": "4019:4:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$46156",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$46156",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 50177,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46234,
                          "src": "4012:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$46234_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 50179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4012:12:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 50180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4026:4:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "31",
                        "id": 50181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4032:1:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4043:1:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4035:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50182,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4035:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4035:10:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 50186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4047:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "id": 50172,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49817,
                      "src": "3971:4:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$49817_storage_ptr_$",
                        "typeString": "type(struct Swap storage pointer)"
                      }
                    },
                    "id": 50187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3971:91:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                      "typeString": "struct Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3948:114:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50190,
                        "name": "ethToApe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50171,
                        "src": "4099:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      },
                      {
                        "hexValue": "32653138",
                        "id": 50191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4109:4:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 50189,
                      "name": "_failZapAndDoSomething_eth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50407,
                      "src": "4072:26:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$49817_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct Swap memory,uint256)"
                      }
                    },
                    "id": 50192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4072:42:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50193,
                  "nodeType": "ExpressionStatement",
                  "src": "4072:42:59"
                }
              ]
            },
            "functionSelector": "1e25e048",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_inconsistantZapAndDoSomethingEthAPE",
            "nameLocation": "3888:40:59",
            "parameters": {
              "id": 50167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3928:2:59"
            },
            "returnParameters": {
              "id": 50168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3938:0:59"
            },
            "scope": 50652,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50250,
            "nodeType": "FunctionDefinition",
            "src": "4127:472:59",
            "nodes": [],
            "body": {
              "id": 50249,
              "nodeType": "Block",
              "src": "4182:417:59",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50202,
                      "mutability": "mutable",
                      "name": "swapData",
                      "nameLocation": "4205:8:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 50249,
                      "src": "4192:21:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 50201,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4192:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50214,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50206,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50095,
                            "src": "4249:6:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 50205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4241:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50204,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4241:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4241:15:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50210,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50095,
                            "src": "4266:6:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 50209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4258:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50208,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4258:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4258:15:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50212,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50198,
                        "src": "4275:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 50203,
                      "name": "_getSwapData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50016,
                      "src": "4228:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Swap_$49817_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,struct Swap memory) returns (bytes memory)"
                      }
                    },
                    "id": 50213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4228:54:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4192:90:59"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50215,
                      "name": "_setUpVaultAndZapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50564,
                      "src": "4292:20:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4292:22:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50217,
                  "nodeType": "ExpressionStatement",
                  "src": "4292:22:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50219,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50198,
                        "src": "4336:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 50218,
                      "name": "_getTokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50651,
                      "src": "4324:11:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$49817_memory_ptr_$returns$__$",
                        "typeString": "function (struct Swap memory)"
                      }
                    },
                    "id": 50220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4324:19:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50221,
                  "nodeType": "ExpressionStatement",
                  "src": "4324:19:59"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 50228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 50223,
                          "name": "swapData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50202,
                          "src": "4367:8:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 50222,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "4357:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 50224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4357:19:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "",
                          "id": 50226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "hexString",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4390:5:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "id": 50225,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "4380:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 50227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4380:16:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4357:39:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50234,
                  "nodeType": "IfStatement",
                  "src": "4353:62:59",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 50229,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3430,
                          "src": "4398:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$15078",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 50231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4401:12:59",
                        "memberName": "expectRevert",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15058,
                        "src": "4398:15:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                          "typeString": "function () external"
                        }
                      },
                      "id": 50232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4398:17:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 50233,
                    "nodeType": "ExpressionStatement",
                    "src": "4398:17:59"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50238,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50198,
                          "src": "4463:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50239,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4470:7:59",
                        "memberName": "tokenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49805,
                        "src": "4463:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 50240,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50198,
                          "src": "4491:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50241,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4498:8:59",
                        "memberName": "tokenOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49808,
                        "src": "4491:15:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 50242,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50198,
                          "src": "4520:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50243,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4527:6:59",
                        "memberName": "router",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49802,
                        "src": "4520:13:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 50244,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50198,
                          "src": "4547:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50245,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4554:6:59",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49810,
                        "src": "4547:13:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50246,
                        "name": "swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50202,
                        "src": "4574:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 50235,
                        "name": "zapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50095,
                        "src": "4425:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Zapper_$51073",
                          "typeString": "contract Zapper"
                        }
                      },
                      "id": 50237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4432:17:59",
                      "memberName": "zapAndDoSomething",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50982,
                      "src": "4425:24:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$46234_$_t_contract$_IERC20_$46234_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                      }
                    },
                    "id": 50247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4425:167:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50248,
                  "nodeType": "ExpressionStatement",
                  "src": "4425:167:59"
                }
              ]
            },
            "functionSelector": "a34d30cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_zapAndDoSomething",
            "nameLocation": "4136:18:59",
            "parameters": {
              "id": 50199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50198,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4167:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 50250,
                  "src": "4155:18:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                    "typeString": "struct Swap"
                  },
                  "typeName": {
                    "id": 50197,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50196,
                      "name": "Swap",
                      "nameLocations": [
                        "4155:4:59"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49817,
                      "src": "4155:4:59"
                    },
                    "referencedDeclaration": 49817,
                    "src": "4155:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$49817_storage_ptr",
                      "typeString": "struct Swap"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4154:20:59"
            },
            "returnParameters": {
              "id": 50200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4182:0:59"
            },
            "scope": 50652,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50298,
            "nodeType": "FunctionDefinition",
            "src": "4605:440:59",
            "nodes": [],
            "body": {
              "id": 50297,
              "nodeType": "Block",
              "src": "4680:365:59",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50259,
                      "mutability": "mutable",
                      "name": "swapData",
                      "nameLocation": "4703:8:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 50297,
                      "src": "4690:21:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 50258,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4690:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50271,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50263,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50095,
                            "src": "4747:6:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 50262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4739:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50261,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4739:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4739:15:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50267,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50095,
                            "src": "4764:6:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 50266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4756:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50265,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4756:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4756:15:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50269,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50253,
                        "src": "4773:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 50260,
                      "name": "_getSwapData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50016,
                      "src": "4726:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Swap_$49817_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,struct Swap memory) returns (bytes memory)"
                      }
                    },
                    "id": 50270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4726:54:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4690:90:59"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50272,
                      "name": "_setUpVaultAndZapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50564,
                      "src": "4790:20:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4790:22:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50274,
                  "nodeType": "ExpressionStatement",
                  "src": "4790:22:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50276,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50253,
                        "src": "4834:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 50275,
                      "name": "_getTokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50651,
                      "src": "4822:11:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$49817_memory_ptr_$returns$__$",
                        "typeString": "function (struct Swap memory)"
                      }
                    },
                    "id": 50277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4822:19:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50278,
                  "nodeType": "ExpressionStatement",
                  "src": "4822:19:59"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50279,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3430,
                        "src": "4851:2:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15078",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4854:12:59",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15058,
                      "src": "4851:15:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 50282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4851:17:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50283,
                  "nodeType": "ExpressionStatement",
                  "src": "4851:17:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50287,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50253,
                          "src": "4916:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50288,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4923:7:59",
                        "memberName": "tokenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49805,
                        "src": "4916:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 50289,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50253,
                          "src": "4944:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50290,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4951:8:59",
                        "memberName": "tokenOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49808,
                        "src": "4944:15:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 50291,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50253,
                          "src": "4973:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50292,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4980:6:59",
                        "memberName": "router",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49802,
                        "src": "4973:13:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50293,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50255,
                        "src": "5000:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50294,
                        "name": "swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50259,
                        "src": "5020:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 50284,
                        "name": "zapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50095,
                        "src": "4878:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Zapper_$51073",
                          "typeString": "contract Zapper"
                        }
                      },
                      "id": 50286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4885:17:59",
                      "memberName": "zapAndDoSomething",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50982,
                      "src": "4878:24:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$46234_$_t_contract$_IERC20_$46234_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                      }
                    },
                    "id": 50295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4878:160:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50296,
                  "nodeType": "ExpressionStatement",
                  "src": "4878:160:59"
                }
              ]
            },
            "functionSelector": "2c747b21",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_failZapAndDoSomething",
            "nameLocation": "4614:22:59",
            "parameters": {
              "id": 50256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50253,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4649:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 50298,
                  "src": "4637:18:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                    "typeString": "struct Swap"
                  },
                  "typeName": {
                    "id": 50252,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50251,
                      "name": "Swap",
                      "nameLocations": [
                        "4637:4:59"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49817,
                      "src": "4637:4:59"
                    },
                    "referencedDeclaration": 49817,
                    "src": "4637:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$49817_storage_ptr",
                      "typeString": "struct Swap"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50255,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4665:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 50298,
                  "src": "4657:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4657:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4636:36:59"
            },
            "returnParameters": {
              "id": 50257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4680:0:59"
            },
            "scope": 50652,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50356,
            "nodeType": "FunctionDefinition",
            "src": "5051:501:59",
            "nodes": [],
            "body": {
              "id": 50355,
              "nodeType": "Block",
              "src": "5110:442:59",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50305,
                      "mutability": "mutable",
                      "name": "swapData",
                      "nameLocation": "5133:8:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 50355,
                      "src": "5120:21:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 50304,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5120:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50317,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50309,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50095,
                            "src": "5177:6:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 50308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5169:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50307,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5169:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5169:15:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50313,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50095,
                            "src": "5194:6:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 50312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5186:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50311,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5186:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5186:15:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50315,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50301,
                        "src": "5203:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 50306,
                      "name": "_getSwapData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50016,
                      "src": "5156:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Swap_$49817_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,struct Swap memory) returns (bytes memory)"
                      }
                    },
                    "id": 50316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5156:54:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5120:90:59"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50318,
                      "name": "_setUpVaultAndZapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50564,
                      "src": "5220:20:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5220:22:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50320,
                  "nodeType": "ExpressionStatement",
                  "src": "5220:22:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50322,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50301,
                        "src": "5264:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 50321,
                      "name": "_getTokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50651,
                      "src": "5252:11:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$49817_memory_ptr_$returns$__$",
                        "typeString": "function (struct Swap memory)"
                      }
                    },
                    "id": 50323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5252:19:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50324,
                  "nodeType": "ExpressionStatement",
                  "src": "5252:19:59"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 50331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 50326,
                          "name": "swapData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50305,
                          "src": "5295:8:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 50325,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "5285:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 50327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5285:19:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "",
                          "id": 50329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "hexString",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5318:5:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "id": 50328,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "5308:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 50330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5308:16:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5285:39:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50337,
                  "nodeType": "IfStatement",
                  "src": "5281:62:59",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 50332,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3430,
                          "src": "5326:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$15078",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 50334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5329:12:59",
                        "memberName": "expectRevert",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15058,
                        "src": "5326:15:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                          "typeString": "function () external"
                        }
                      },
                      "id": 50335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5326:17:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 50336,
                    "nodeType": "ExpressionStatement",
                    "src": "5326:17:59"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50344,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50301,
                          "src": "5413:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50345,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5420:7:59",
                        "memberName": "tokenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49805,
                        "src": "5413:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 50346,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50301,
                          "src": "5442:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50347,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5449:8:59",
                        "memberName": "tokenOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49808,
                        "src": "5442:15:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 50348,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50301,
                          "src": "5472:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50349,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5479:6:59",
                        "memberName": "router",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49802,
                        "src": "5472:13:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 50350,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50301,
                          "src": "5500:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50351,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5507:6:59",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49810,
                        "src": "5500:13:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50352,
                        "name": "swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50305,
                        "src": "5527:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$46234",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$46234",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 50338,
                          "name": "zapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50095,
                          "src": "5353:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zapper_$51073",
                            "typeString": "contract Zapper"
                          }
                        },
                        "id": 50340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5360:17:59",
                        "memberName": "zapAndDoSomething",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50982,
                        "src": "5353:24:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$46234_$_t_contract$_IERC20_$46234_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                        }
                      },
                      "id": 50343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 50341,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50301,
                            "src": "5385:6:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                              "typeString": "struct Swap memory"
                            }
                          },
                          "id": 50342,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5392:6:59",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49810,
                          "src": "5385:13:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5353:46:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$46234_$_t_contract$_IERC20_$46234_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                      }
                    },
                    "id": 50353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5353:192:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50354,
                  "nodeType": "ExpressionStatement",
                  "src": "5353:192:59"
                }
              ]
            },
            "functionSelector": "a63ac536",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_zapAndDoSomething_eth",
            "nameLocation": "5060:22:59",
            "parameters": {
              "id": 50302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50301,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "5095:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 50356,
                  "src": "5083:18:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                    "typeString": "struct Swap"
                  },
                  "typeName": {
                    "id": 50300,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50299,
                      "name": "Swap",
                      "nameLocations": [
                        "5083:4:59"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49817,
                      "src": "5083:4:59"
                    },
                    "referencedDeclaration": 49817,
                    "src": "5083:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$49817_storage_ptr",
                      "typeString": "struct Swap"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5082:20:59"
            },
            "returnParameters": {
              "id": 50303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5110:0:59"
            },
            "scope": 50652,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50407,
            "nodeType": "FunctionDefinition",
            "src": "5558:467:59",
            "nodes": [],
            "body": {
              "id": 50406,
              "nodeType": "Block",
              "src": "5649:376:59",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50365,
                      "mutability": "mutable",
                      "name": "swapData",
                      "nameLocation": "5672:8:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 50406,
                      "src": "5659:21:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 50364,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5659:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50377,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50369,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50095,
                            "src": "5704:6:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 50368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5696:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50367,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5696:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5696:15:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50373,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50095,
                            "src": "5721:6:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 50372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5713:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50371,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5713:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5713:15:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50375,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50359,
                        "src": "5730:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 50366,
                      "name": "_getSwapData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50016,
                      "src": "5683:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Swap_$49817_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,struct Swap memory) returns (bytes memory)"
                      }
                    },
                    "id": 50376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5683:54:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5659:78:59"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50378,
                      "name": "_setUpVaultAndZapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50564,
                      "src": "5747:20:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5747:22:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50380,
                  "nodeType": "ExpressionStatement",
                  "src": "5747:22:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50382,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50359,
                        "src": "5791:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 50381,
                      "name": "_getTokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50651,
                      "src": "5779:11:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$49817_memory_ptr_$returns$__$",
                        "typeString": "function (struct Swap memory)"
                      }
                    },
                    "id": 50383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5779:19:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50384,
                  "nodeType": "ExpressionStatement",
                  "src": "5779:19:59"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50385,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3430,
                        "src": "5808:2:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15078",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5811:12:59",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15058,
                      "src": "5808:15:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 50388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5808:17:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50389,
                  "nodeType": "ExpressionStatement",
                  "src": "5808:17:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50395,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50359,
                          "src": "5888:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50396,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5895:7:59",
                        "memberName": "tokenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49805,
                        "src": "5888:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 50397,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50359,
                          "src": "5917:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50398,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5924:8:59",
                        "memberName": "tokenOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49808,
                        "src": "5917:15:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 50399,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50359,
                          "src": "5946:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50400,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5953:6:59",
                        "memberName": "router",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49802,
                        "src": "5946:13:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 50401,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50359,
                          "src": "5973:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50402,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5980:6:59",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49810,
                        "src": "5973:13:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50403,
                        "name": "swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50365,
                        "src": "6000:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$46234",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$46234",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 50390,
                          "name": "zapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50095,
                          "src": "5835:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zapper_$51073",
                            "typeString": "contract Zapper"
                          }
                        },
                        "id": 50392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5842:17:59",
                        "memberName": "zapAndDoSomething",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50982,
                        "src": "5835:24:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$46234_$_t_contract$_IERC20_$46234_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                        }
                      },
                      "id": 50394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 50393,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50361,
                          "src": "5867:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5835:39:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$46234_$_t_contract$_IERC20_$46234_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                      }
                    },
                    "id": 50404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5835:183:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50405,
                  "nodeType": "ExpressionStatement",
                  "src": "5835:183:59"
                }
              ]
            },
            "functionSelector": "d171493f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_failZapAndDoSomething_eth",
            "nameLocation": "5567:26:59",
            "parameters": {
              "id": 50362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50359,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "5606:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 50407,
                  "src": "5594:18:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                    "typeString": "struct Swap"
                  },
                  "typeName": {
                    "id": 50358,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50357,
                      "name": "Swap",
                      "nameLocations": [
                        "5594:4:59"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49817,
                      "src": "5594:4:59"
                    },
                    "referencedDeclaration": 49817,
                    "src": "5594:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$49817_storage_ptr",
                      "typeString": "struct Swap"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50361,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5622:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 50407,
                  "src": "5614:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5614:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5593:36:59"
            },
            "returnParameters": {
              "id": 50363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5649:0:59"
            },
            "scope": 50652,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50547,
            "nodeType": "FunctionDefinition",
            "src": "6031:1087:59",
            "nodes": [],
            "body": {
              "id": 50546,
              "nodeType": "Block",
              "src": "6089:1029:59",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50412,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "6111:6:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 50546,
                      "src": "6099:18:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                        "typeString": "struct Swap"
                      },
                      "typeName": {
                        "id": 50411,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50410,
                          "name": "Swap",
                          "nameLocations": [
                            "6099:4:59"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49817,
                          "src": "6099:4:59"
                        },
                        "referencedDeclaration": 49817,
                        "src": "6099:4:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_storage_ptr",
                          "typeString": "struct Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50435,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50414,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49822,
                        "src": "6138:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50416,
                            "name": "_USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49849,
                            "src": "6166:5:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$46156",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$46156",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 50415,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46234,
                          "src": "6159:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$46234_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 50417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6159:13:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50419,
                            "name": "_WSTETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49885,
                            "src": "6193:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$46156",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$46156",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 50418,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46234,
                          "src": "6186:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$46234_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 50420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6186:15:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        },
                        "id": 50423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31353030",
                          "id": 50421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6215:4:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1500_by_1",
                            "typeString": "int_const 1500"
                          },
                          "value": "1500"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316536",
                          "id": 50422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6222:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1e6"
                        },
                        "src": "6215:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 50426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6244:7:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 50425,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6244:7:59",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 50424,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "6239:4:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 50427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6239:13:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 50428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "6253:3:59",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "6239:17:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6278:1:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6270:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50429,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6270:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6270:10:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 50433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6294:3:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1500000000_by_1",
                          "typeString": "int_const 1500000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 50413,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49817,
                      "src": "6120:4:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$49817_storage_ptr_$",
                        "typeString": "type(struct Swap storage pointer)"
                      }
                    },
                    "id": 50434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6120:187:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                      "typeString": "struct Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6099:208:59"
                },
                {
                  "assignments": [
                    50437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50437,
                      "mutability": "mutable",
                      "name": "swapData",
                      "nameLocation": "6330:8:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 50546,
                      "src": "6317:21:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 50436,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6317:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50449,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50441,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50095,
                            "src": "6362:6:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 50440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6354:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50439,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6354:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6354:15:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50445,
                            "name": "zapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50095,
                            "src": "6379:6:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zapper_$51073",
                              "typeString": "contract Zapper"
                            }
                          ],
                          "id": 50444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6371:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50443,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6371:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6371:15:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50447,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50412,
                        "src": "6388:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 50438,
                      "name": "_getSwapData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50016,
                      "src": "6341:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Swap_$49817_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,struct Swap memory) returns (bytes memory)"
                      }
                    },
                    "id": 50448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6341:54:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6317:78:59"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 50456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 50451,
                          "name": "swapData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50437,
                          "src": "6419:8:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 50450,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "6409:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 50452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6409:19:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "",
                          "id": 50454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "hexString",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6442:5:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "id": 50453,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "6432:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 50455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6432:16:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6409:39:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50463,
                  "nodeType": "IfStatement",
                  "src": "6405:66:59",
                  "trueBody": {
                    "expression": {
                      "id": 50461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 50457,
                          "name": "swapData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50437,
                          "src": "6450:8:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 50459,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 50458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6459:1:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "6450:11:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "00",
                        "id": 50460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6464:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a",
                          "typeString": "literal_string hex\"00\""
                        },
                        "value": "\u0000"
                      },
                      "src": "6450:21:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "id": 50462,
                    "nodeType": "ExpressionStatement",
                    "src": "6450:21:59"
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50464,
                      "name": "_setUpVaultAndZapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50564,
                      "src": "6481:20:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6481:22:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50466,
                  "nodeType": "ExpressionStatement",
                  "src": "6481:22:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50468,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50412,
                        "src": "6525:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      ],
                      "id": 50467,
                      "name": "_getTokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50651,
                      "src": "6513:11:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Swap_$49817_memory_ptr_$returns$__$",
                        "typeString": "function (struct Swap memory)"
                      }
                    },
                    "id": 50469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6513:19:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50470,
                  "nodeType": "ExpressionStatement",
                  "src": "6513:19:59"
                },
                {
                  "assignments": [
                    50472
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50472,
                      "mutability": "mutable",
                      "name": "beforeDepTokenIn",
                      "nameLocation": "6550:16:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 50546,
                      "src": "6542:24:59",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50471,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6542:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50487,
                  "initialValue": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 50483,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6632:4:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZapperTest_$50652",
                                  "typeString": "contract ZapperTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ZapperTest_$50652",
                                  "typeString": "contract ZapperTest"
                                }
                              ],
                              "id": 50482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6624:7:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50481,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6624:7:59",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6624:13:59",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 50476,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50412,
                                      "src": "6597:6:59",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                                        "typeString": "struct Swap memory"
                                      }
                                    },
                                    "id": 50477,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6604:7:59",
                                    "memberName": "tokenIn",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 49805,
                                    "src": "6597:14:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$46234",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$46234",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 50475,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6589:7:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 50474,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6589:7:59",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 50478,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6589:23:59",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 50473,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46234,
                              "src": "6582:6:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$46234_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 50479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6582:31:59",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$46234",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 50480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6614:9:59",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46191,
                          "src": "6582:41:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 50485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6582:56:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 50486,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6581:58:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6542:97:59"
                },
                {
                  "assignments": [
                    50489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50489,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "6658:5:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 50546,
                      "src": "6650:13:59",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50488,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6650:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50500,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$46234",
                        "typeString": "contract IERC20"
                      },
                      "id": 50495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 50490,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50412,
                          "src": "6666:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50491,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6673:7:59",
                        "memberName": "tokenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49805,
                        "src": "6666:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 50493,
                            "name": "_ETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49876,
                            "src": "6691:4:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$46156",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$46156",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 50492,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46234,
                          "src": "6684:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$46234_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 50494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6684:12:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "6666:30:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 50498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6715:1:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 50499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6666:50:59",
                    "trueExpression": {
                      "expression": {
                        "id": 50496,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50412,
                        "src": "6699:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      },
                      "id": 50497,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6706:6:59",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49810,
                      "src": "6699:13:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6650:66:59"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50501,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3430,
                        "src": "6726:2:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15078",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6729:12:59",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15058,
                      "src": "6726:15:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 50504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6726:17:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50505,
                  "nodeType": "ExpressionStatement",
                  "src": "6726:17:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50511,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50412,
                          "src": "6805:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50512,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6812:7:59",
                        "memberName": "tokenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49805,
                        "src": "6805:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 50513,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50412,
                          "src": "6833:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50514,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6840:8:59",
                        "memberName": "tokenOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49808,
                        "src": "6833:15:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 50515,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50412,
                          "src": "6862:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50516,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6869:6:59",
                        "memberName": "router",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49802,
                        "src": "6862:13:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 50517,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50412,
                          "src": "6889:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                            "typeString": "struct Swap memory"
                          }
                        },
                        "id": 50518,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6896:6:59",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49810,
                        "src": "6889:13:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50519,
                        "name": "swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50437,
                        "src": "6916:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46234",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$46234",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$46234",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 50506,
                          "name": "zapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50095,
                          "src": "6753:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zapper_$51073",
                            "typeString": "contract Zapper"
                          }
                        },
                        "id": 50508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6760:17:59",
                        "memberName": "zapAndDoSomething",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50982,
                        "src": "6753:24:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$46234_$_t_contract$_IERC20_$46234_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                        }
                      },
                      "id": 50510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 50509,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50489,
                          "src": "6785:5:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6753:38:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$46234_$_t_contract$_IERC20_$46234_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (contract IERC20,contract IERC20,address,uint256,bytes memory) payable external"
                      }
                    },
                    "id": 50520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6753:181:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50521,
                  "nodeType": "ExpressionStatement",
                  "src": "6753:181:59"
                },
                {
                  "assignments": [
                    50523
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50523,
                      "mutability": "mutable",
                      "name": "afterDepTokenIn",
                      "nameLocation": "6952:15:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 50546,
                      "src": "6944:23:59",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50522,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6944:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50538,
                  "initialValue": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 50534,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7033:4:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZapperTest_$50652",
                                  "typeString": "contract ZapperTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ZapperTest_$50652",
                                  "typeString": "contract ZapperTest"
                                }
                              ],
                              "id": 50533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7025:7:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50532,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7025:7:59",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7025:13:59",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 50527,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50412,
                                      "src": "6998:6:59",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                                        "typeString": "struct Swap memory"
                                      }
                                    },
                                    "id": 50528,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7005:7:59",
                                    "memberName": "tokenIn",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 49805,
                                    "src": "6998:14:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$46234",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$46234",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 50526,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6990:7:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 50525,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6990:7:59",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 50529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6990:23:59",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 50524,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46234,
                              "src": "6983:6:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$46234_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 50530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6983:31:59",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$46234",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 50531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7015:9:59",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46191,
                          "src": "6983:41:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 50536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6983:56:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 50537,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6982:58:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6944:96:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50540,
                          "name": "afterDepTokenIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50523,
                          "src": "7061:15:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 50541,
                          "name": "beforeDepTokenIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50472,
                          "src": "7080:16:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7061:35:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a6170206661696c6564",
                        "id": 50543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7098:12:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d4d5f5b4990041b6dc7a61de968b34c9f7a505c6ed48935b2cee6a279f47ec6",
                          "typeString": "literal_string \"Zap failed\""
                        },
                        "value": "Zap failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d4d5f5b4990041b6dc7a61de968b34c9f7a505c6ed48935b2cee6a279f47ec6",
                          "typeString": "literal_string \"Zap failed\""
                        }
                      ],
                      "id": 50539,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1349,
                        1370
                      ],
                      "referencedDeclaration": 1370,
                      "src": "7050:10:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 50544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7050:61:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50545,
                  "nodeType": "ExpressionStatement",
                  "src": "7050:61:59"
                }
              ]
            },
            "functionSelector": "27243b4a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_fail_zapAndDoSomething_RouterFails",
            "nameLocation": "6040:39:59",
            "parameters": {
              "id": 50408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6079:2:59"
            },
            "returnParameters": {
              "id": 50409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6089:0:59"
            },
            "scope": 50652,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50564,
            "nodeType": "FunctionDefinition",
            "src": "7124:233:59",
            "nodes": [],
            "body": {
              "id": 50563,
              "nodeType": "Block",
              "src": "7179:178:59",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 50554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7193:34:59",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 50552,
                          "name": "_router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49822,
                          "src": "7219:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 50550,
                          "name": "zapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50095,
                          "src": "7194:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zapper_$51073",
                            "typeString": "contract Zapper"
                          }
                        },
                        "id": 50551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7201:17:59",
                        "memberName": "authorizedRouters",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50674,
                        "src": "7194:24:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 50553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7194:33:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50562,
                  "nodeType": "IfStatement",
                  "src": "7189:106:59",
                  "trueBody": {
                    "id": 50561,
                    "nodeType": "Block",
                    "src": "7229:66:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 50558,
                              "name": "_router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49822,
                              "src": "7276:7:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 50555,
                              "name": "zapper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50095,
                              "src": "7243:6:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Zapper_$51073",
                                "typeString": "contract Zapper"
                              }
                            },
                            "id": 50557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7250:25:59",
                            "memberName": "toggleRouterAuthorization",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50857,
                            "src": "7243:32:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 50559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7243:41:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50560,
                        "nodeType": "ExpressionStatement",
                        "src": "7243:41:59"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "8557b123",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setUpVaultAndZapper",
            "nameLocation": "7133:20:59",
            "parameters": {
              "id": 50548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7153:18:59"
            },
            "returnParameters": {
              "id": 50549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7179:0:59"
            },
            "scope": 50652,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50651,
            "nodeType": "FunctionDefinition",
            "src": "7363:603:59",
            "nodes": [],
            "body": {
              "id": 50650,
              "nodeType": "Block",
              "src": "7411:555:59",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$46234",
                      "typeString": "contract IERC20"
                    },
                    "id": 50573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 50570,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50567,
                        "src": "7425:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                          "typeString": "struct Swap memory"
                        }
                      },
                      "id": 50571,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7432:7:59",
                      "memberName": "tokenIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49805,
                      "src": "7425:14:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$46234",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 50572,
                      "name": "_ETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49876,
                      "src": "7443:4:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$46156",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "7425:22:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50639,
                  "nodeType": "IfStatement",
                  "src": "7421:497:59",
                  "trueBody": {
                    "id": 50638,
                    "nodeType": "Block",
                    "src": "7449:469:59",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 50580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 50574,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50567,
                              "src": "7467:6:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                                "typeString": "struct Swap memory"
                              }
                            },
                            "id": 50575,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7474:12:59",
                            "memberName": "tokenInWhale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49814,
                            "src": "7467:19:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 50578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7498:1:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 50577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7490:7:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50576,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7490:7:59",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7490:10:59",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7467:33:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 50618,
                          "nodeType": "Block",
                          "src": "7598:184:59",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 50600,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50567,
                                      "src": "7625:6:59",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                                        "typeString": "struct Swap memory"
                                      }
                                    },
                                    "id": 50601,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7632:12:59",
                                    "memberName": "tokenInWhale",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 49814,
                                    "src": "7625:19:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 50597,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3430,
                                    "src": "7616:2:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$15078",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 50599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7619:5:59",
                                  "memberName": "prank",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14739,
                                  "src": "7616:8:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 50602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7616:29:59",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 50603,
                              "nodeType": "ExpressionStatement",
                              "src": "7616:29:59"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 50607,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50567,
                                      "src": "7707:6:59",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                                        "typeString": "struct Swap memory"
                                      }
                                    },
                                    "id": 50608,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7714:7:59",
                                    "memberName": "tokenIn",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 49805,
                                    "src": "7707:14:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$46234",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 50611,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "7731:4:59",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ZapperTest_$50652",
                                          "typeString": "contract ZapperTest"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ZapperTest_$50652",
                                          "typeString": "contract ZapperTest"
                                        }
                                      ],
                                      "id": 50610,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7723:7:59",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 50609,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7723:7:59",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 50612,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7723:13:59",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    },
                                    "id": 50615,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "31303030",
                                      "id": 50613,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7738:4:59",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "31653138",
                                      "id": 50614,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7745:4:59",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "value": "1e18"
                                    },
                                    "src": "7738:11:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$46234",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  ],
                                  "expression": {
                                    "id": 50604,
                                    "name": "SafeERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46671,
                                    "src": "7663:9:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_SafeERC20_$46671_$",
                                      "typeString": "type(library SafeERC20)"
                                    }
                                  },
                                  "id": 50606,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7673:12:59",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46328,
                                  "src": "7663:22:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$46234_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 50616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7663:104:59",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 50617,
                              "nodeType": "ExpressionStatement",
                              "src": "7663:104:59"
                            }
                          ]
                        },
                        "id": 50619,
                        "nodeType": "IfStatement",
                        "src": "7463:319:59",
                        "trueBody": {
                          "id": 50596,
                          "nodeType": "Block",
                          "src": "7502:90:59",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 50584,
                                          "name": "params",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 50567,
                                          "src": "7533:6:59",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                                            "typeString": "struct Swap memory"
                                          }
                                        },
                                        "id": 50585,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7540:7:59",
                                        "memberName": "tokenIn",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 49805,
                                        "src": "7533:14:59",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$46234",
                                          "typeString": "contract IERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20_$46234",
                                          "typeString": "contract IERC20"
                                        }
                                      ],
                                      "id": 50583,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7525:7:59",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 50582,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7525:7:59",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 50586,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7525:23:59",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 50589,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "7558:4:59",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ZapperTest_$50652",
                                          "typeString": "contract ZapperTest"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ZapperTest_$50652",
                                          "typeString": "contract ZapperTest"
                                        }
                                      ],
                                      "id": 50588,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7550:7:59",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 50587,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7550:7:59",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 50590,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7550:13:59",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    },
                                    "id": 50593,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "31303030",
                                      "id": 50591,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7565:4:59",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "31653138",
                                      "id": 50592,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7572:4:59",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "value": "1e18"
                                    },
                                    "src": "7565:11:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  ],
                                  "id": 50581,
                                  "name": "deal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    7983,
                                    8000,
                                    8123
                                  ],
                                  "referencedDeclaration": 8000,
                                  "src": "7520:4:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 50594,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7520:57:59",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 50595,
                              "nodeType": "ExpressionStatement",
                              "src": "7520:57:59"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 50624,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50567,
                                    "src": "7842:6:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                                      "typeString": "struct Swap memory"
                                    }
                                  },
                                  "id": 50625,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7849:7:59",
                                  "memberName": "tokenIn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 49805,
                                  "src": "7842:14:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$46234",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$46234",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 50623,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46234,
                                "src": "7835:6:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$46234_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 50626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7835:22:59",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$46234",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 50629,
                                  "name": "zapper",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50095,
                                  "src": "7867:6:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Zapper_$51073",
                                    "typeString": "contract Zapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Zapper_$51073",
                                    "typeString": "contract Zapper"
                                  }
                                ],
                                "id": 50628,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7859:7:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 50627,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7859:7:59",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 50630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7859:15:59",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 50633,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7881:7:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 50632,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7881:7:59",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 50631,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "7876:4:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 50634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7876:13:59",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 50635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7890:3:59",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "7876:17:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$46234",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 50620,
                              "name": "SafeERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46671,
                              "src": "7795:9:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeERC20_$46671_$",
                                "typeString": "type(library SafeERC20)"
                              }
                            },
                            "id": 50622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7805:12:59",
                            "memberName": "forceApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46528,
                            "src": "7795:22:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$46234_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 50636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7795:112:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50637,
                        "nodeType": "ExpressionStatement",
                        "src": "7795:112:59"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50643,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7940:4:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZapperTest_$50652",
                              "typeString": "contract ZapperTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZapperTest_$50652",
                              "typeString": "contract ZapperTest"
                            }
                          ],
                          "id": 50642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7932:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50641,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7932:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7932:13:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 50647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 50645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7947:4:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 50646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7954:4:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "7947:11:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 50640,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7983,
                        8000,
                        8123
                      ],
                      "referencedDeclaration": 7983,
                      "src": "7927:4:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 50648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7927:32:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50649,
                  "nodeType": "ExpressionStatement",
                  "src": "7927:32:59"
                }
              ]
            },
            "functionSelector": "c72f4a67",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTokenIn",
            "nameLocation": "7372:11:59",
            "parameters": {
              "id": 50568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50567,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "7396:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 50651,
                  "src": "7384:18:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Swap_$49817_memory_ptr",
                    "typeString": "struct Swap"
                  },
                  "typeName": {
                    "id": 50566,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50565,
                      "name": "Swap",
                      "nameLocations": [
                        "7384:4:59"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49817,
                      "src": "7384:4:59"
                    },
                    "referencedDeclaration": 49817,
                    "src": "7384:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$49817_storage_ptr",
                      "typeString": "struct Swap"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7383:20:59"
            },
            "returnParameters": {
              "id": 50569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7411:0:59"
            },
            "scope": 50652,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50091,
              "name": "OffChainCalls",
              "nameLocations": [
                "3183:13:59"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50017,
              "src": "3183:13:59"
            },
            "id": 50092,
            "nodeType": "InheritanceSpecifier",
            "src": "3183:13:59"
          }
        ],
        "canonicalName": "ZapperTest",
        "contractDependencies": [
          51073
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50652,
          50017,
          13321,
          13270,
          8806,
          8481,
          7688,
          5628,
          4864,
          3371,
          3437,
          3434
        ],
        "name": "ZapperTest",
        "nameLocation": "3169:10:59",
        "scope": 50653,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 59
}